/*! For license information please see worker-uDspo0Gu9axZFS4kr-bOb.js.LICENSE.txt */
(()=>{var e=[,(e,t,n)=>{var r=n(2);e.exports=function(e,t,n){return(t=r(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e},e.exports.__esModule=!0,e.exports.default=e.exports},(e,t,n)=>{var r=n(3).default,i=n(4);e.exports=function(e){var t=i(e,"string");return"symbol"===r(t)?t:String(t)},e.exports.__esModule=!0,e.exports.default=e.exports},e=>{function t(n){return e.exports=t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.__esModule=!0,e.exports.default=e.exports,t(n)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},(e,t,n)=>{var r=n(3).default;e.exports=function(e,t){if("object"!==r(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,t||"default");if("object"!==r(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)},e.exports.__esModule=!0,e.exports.default=e.exports},(e,t,n)=>{"use strict";n.r(t),n.d(t,{AsyncFifoQueue:()=>r.AsyncFifoQueue,Backoffs:()=>r.Backoffs,Child:()=>r.Child,ChildCommand:()=>i.ChildCommand,ChildPool:()=>r.ChildPool,ChildProcessor:()=>r.ChildProcessor,ClientType:()=>o.ClientType,DELAYED_ERROR:()=>r.DELAYED_ERROR,DELAY_TIME_1:()=>a.DELAY_TIME_1,DELAY_TIME_5:()=>a.DELAY_TIME_5,DelayedError:()=>r.DelayedError,ErrorCode:()=>i.ErrorCode,FlowProducer:()=>r.FlowProducer,Job:()=>r.Job,JobScheduler:()=>r.JobScheduler,MetricsTime:()=>i.MetricsTime,PRIORITY_LIMIT:()=>r.PRIORITY_LIMIT,ParentCommand:()=>i.ParentCommand,QUEUE_EVENT_SUFFIX:()=>a.QUEUE_EVENT_SUFFIX,Queue:()=>r.Queue,QueueBase:()=>r.QueueBase,QueueEvents:()=>r.QueueEvents,QueueEventsProducer:()=>r.QueueEventsProducer,QueueGetters:()=>r.QueueGetters,QueueKeys:()=>r.QueueKeys,RATE_LIMIT_ERROR:()=>r.RATE_LIMIT_ERROR,RateLimitError:()=>r.RateLimitError,RedisConnection:()=>r.RedisConnection,Repeat:()=>r.Repeat,Scripts:()=>r.Scripts,SpanKind:()=>i.SpanKind,TelemetryAttributes:()=>i.TelemetryAttributes,UNRECOVERABLE_ERROR:()=>r.UNRECOVERABLE_ERROR,UnrecoverableError:()=>r.UnrecoverableError,WAITING_CHILDREN_ERROR:()=>r.WAITING_CHILDREN_ERROR,WAITING_ERROR:()=>r.WAITING_ERROR,WaitingChildrenError:()=>r.WaitingChildrenError,WaitingError:()=>r.WaitingError,Worker:()=>r.Worker,array2obj:()=>a.array2obj,asyncSend:()=>a.asyncSend,childSend:()=>a.childSend,clientCommandMessageReg:()=>a.clientCommandMessageReg,createScripts:()=>a.createScripts,decreaseMaxListeners:()=>a.decreaseMaxListeners,defaultRepeatStrategy:()=>r.defaultRepeatStrategy,delay:()=>a.delay,errorObject:()=>a.errorObject,errorToJSON:()=>a.errorToJSON,getNextMillis:()=>r.getNextMillis,getParentKey:()=>a.getParentKey,increaseMaxListeners:()=>a.increaseMaxListeners,invertObject:()=>a.invertObject,isEmpty:()=>a.isEmpty,isNotConnectionError:()=>a.isNotConnectionError,isRedisCluster:()=>a.isRedisCluster,isRedisInstance:()=>a.isRedisInstance,isRedisVersionLowerThan:()=>a.isRedisVersionLowerThan,lengthInUtf8Bytes:()=>a.lengthInUtf8Bytes,objectToFlatArray:()=>a.objectToFlatArray,optsDecodeMap:()=>a.optsDecodeMap,optsEncodeMap:()=>a.optsEncodeMap,parseObjectValues:()=>a.parseObjectValues,raw2NextJobData:()=>r.raw2NextJobData,removeAllQueueData:()=>a.removeAllQueueData,removeUndefinedFields:()=>a.removeUndefinedFields,toString:()=>a.toString,trace:()=>a.trace,tryCatch:()=>a.tryCatch});var r=n(6),i=n(12),o=n(317),a=(n(347),n(22))},(e,t,n)=>{"use strict";n.r(t),n.d(t,{AsyncFifoQueue:()=>r.AsyncFifoQueue,Backoffs:()=>i.Backoffs,Child:()=>o.Child,ChildPool:()=>a.ChildPool,ChildProcessor:()=>s.ChildProcessor,DELAYED_ERROR:()=>l.DELAYED_ERROR,DelayedError:()=>l.DelayedError,FlowProducer:()=>c.FlowProducer,Job:()=>u.Job,JobScheduler:()=>d.JobScheduler,PRIORITY_LIMIT:()=>u.PRIORITY_LIMIT,Queue:()=>b.Queue,QueueBase:()=>p.QueueBase,QueueEvents:()=>h.QueueEvents,QueueEventsProducer:()=>f.QueueEventsProducer,QueueGetters:()=>y.QueueGetters,QueueKeys:()=>m.QueueKeys,RATE_LIMIT_ERROR:()=>l.RATE_LIMIT_ERROR,RateLimitError:()=>l.RateLimitError,RedisConnection:()=>g.RedisConnection,Repeat:()=>v.Repeat,Scripts:()=>E.Scripts,UNRECOVERABLE_ERROR:()=>l.UNRECOVERABLE_ERROR,UnrecoverableError:()=>l.UnrecoverableError,WAITING_CHILDREN_ERROR:()=>l.WAITING_CHILDREN_ERROR,WAITING_ERROR:()=>l.WAITING_ERROR,WaitingChildrenError:()=>l.WaitingChildrenError,WaitingError:()=>l.WaitingError,Worker:()=>w.Worker,defaultRepeatStrategy:()=>d.defaultRepeatStrategy,getNextMillis:()=>v.getNextMillis,raw2NextJobData:()=>E.raw2NextJobData});var r=n(7),i=n(8),o=n(9),a=n(19),s=n(21),l=n(184),c=n(236),u=n(237),d=n(296),p=n(306),h=n(307),f=n(308),y=n(309),m=n(239),b=n(310),g=n(240),v=n(311),E=(n(313),n(173)),w=n(314)},(e,t,n)=>{"use strict";n.r(t),n.d(t,{AsyncFifoQueue:()=>o});class r{constructor(e){this.value=void 0,this.next=null,this.value=e}}class i{constructor(){this.length=0,this.head=null,this.tail=null}push(e){const t=new r(e);return this.length?this.tail.next=t:this.head=t,this.tail=t,this.length+=1,t}shift(){if(this.length){const e=this.head;return this.head=this.head.next,this.length-=1,e}return null}}class o{constructor(e=!1){this.ignoreErrors=e,this.queue=new i,this.pending=new Set,this.newPromise()}add(e){this.pending.add(e),e.then(t=>{this.pending.delete(e),0===this.queue.length&&this.resolvePromise(t),this.queue.push(t)}).catch(t=>{this.ignoreErrors&&this.queue.push(void 0),this.pending.delete(e),this.rejectPromise(t)})}async waitAll(){await Promise.all(this.pending)}numTotal(){return this.pending.size+this.queue.length}numPending(){return this.pending.size}numQueued(){return this.queue.length}resolvePromise(e){this.resolve(e),this.newPromise()}rejectPromise(e){this.reject(e),this.newPromise()}newPromise(){this.nextPromise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}async wait(){return this.nextPromise}async fetch(){var e;if(0!==this.pending.size||0!==this.queue.length){for(;0===this.queue.length;)try{await this.wait()}catch(e){this.ignoreErrors||console.error("Unexpected Error in AsyncFifoQueue",e)}return null===(e=this.queue.shift())||void 0===e?void 0:e.value}}}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{Backoffs:()=>r});class r{static normalize(e){return Number.isFinite(e)?{type:"fixed",delay:e}:e||void 0}static calculate(e,t,n,i,o){if(e){const a=function(e,t){if(e.type in r.builtinStrategies)return r.builtinStrategies[e.type](e.delay,e.jitter);if(t)return t;throw new Error(`Unknown backoff strategy ${e.type}.\n      If a custom backoff strategy is used, specify it when the queue is created.`)}(e,o);return a(t,e.type,n,i)}}}r.builtinStrategies={fixed:function(e,t=0){return function(){if(t>0){const n=e*(1-t);return Math.floor(Math.random()*e*t+n)}return e}},exponential:function(e,t=0){return function(n){if(t>0){const r=Math.round(Math.pow(2,n-1)*e),i=r*(1-t);return Math.floor(Math.random()*r*t+i)}return Math.round(Math.pow(2,n-1)*e)}}}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{Child:()=>l});var r=n(10),i=n(11);Object(function(){var e=new Error("Cannot find module 'worker_threads'");throw e.code="MODULE_NOT_FOUND",e}());var o=n(12),a=n(18);const s={1:"Uncaught Fatal Exception",2:"Unused",3:"Internal JavaScript Parse Error",4:"Internal JavaScript Evaluation Failure",5:"Fatal Error",6:"Non-function Internal Exception Handler",7:"Internal Exception Handler Run-Time Failure",8:"Unused",9:"Invalid Argument",10:"Internal JavaScript Run-Time Failure",12:"Invalid Debug Argument",13:"Unfinished Top-Level Await"};class l extends a.EventEmitter{constructor(e,t,n={useWorkerThreads:!1}){super(),this.mainFile=e,this.processFile=t,this.opts=n,this._exitCode=null,this._signalCode=null,this._killed=!1}get pid(){if(this.childProcess)return this.childProcess.pid;if(this.worker)return Math.abs(this.worker.threadId);throw new Error("No child process or worker thread")}get exitCode(){return this._exitCode}get signalCode(){return this._signalCode}get killed(){return this.childProcess?this.childProcess.killed:this._killed}async init(){const e=await u(process.execArgv);let t;this.opts.useWorkerThreads?this.worker=t=new Object(function(){var e=new Error("Cannot find module 'worker_threads'");throw e.code="MODULE_NOT_FOUND",e}())(this.mainFile,Object.assign({execArgv:e,stdin:!0,stdout:!0,stderr:!0},this.opts.workerThreadsOptions?this.opts.workerThreadsOptions:{})):this.childProcess=t=(0,r.fork)(this.mainFile,[],Object.assign({execArgv:e,stdio:"pipe"},this.opts.workerForkOptions?this.opts.workerForkOptions:{})),t.on("exit",(e,n)=>{this._exitCode=e,n=void 0===n?null:n,this._signalCode=n,this._killed=!0,this.emit("exit",e,n),t.removeAllListeners(),this.removeAllListeners()}),t.on("error",(...e)=>this.emit("error",...e)),t.on("message",(...e)=>this.emit("message",...e)),t.on("close",(...e)=>this.emit("close",...e)),t.stdout.pipe(process.stdout),t.stderr.pipe(process.stderr),await this.initChild()}async send(e){return new Promise((t,n)=>{this.childProcess?this.childProcess.send(e,e=>{e?n(e):t()}):this.worker?t(this.worker.postMessage(e)):t()})}killProcess(e="SIGKILL"){this.childProcess?this.childProcess.kill(e):this.worker&&this.worker.terminate()}async kill(e="SIGKILL",t){if(this.hasProcessExited())return;const n=(r=this.childProcess||this.worker,new Promise(e=>{r.once("exit",()=>e())}));var r;if(this.killProcess(e),void 0!==t&&(0===t||isFinite(t))){const e=setTimeout(()=>{this.hasProcessExited()||this.killProcess("SIGKILL")},t);await n,clearTimeout(e)}await n}async initChild(){const e=new Promise((e,t)=>{const n=i=>{if(i.cmd===o.ParentCommand.InitCompleted)e();else if(i.cmd===o.ParentCommand.InitFailed){const e=new Error;e.stack=i.err.stack,e.message=i.err.message,t(e)}this.off("message",n),this.off("close",r)},r=(e,i)=>{e>128&&(e-=128);t(new Error(`Error initializing child: ${s[e]||`Unknown exit code ${e}`} and signal ${i}`)),this.off("message",n),this.off("close",r)};this.on("message",n),this.on("close",r)});await this.send({cmd:o.ChildCommand.Init,value:this.processFile}),await e}hasProcessExited(){return!(null===this.exitCode&&!this.signalCode)}}const c=async()=>new Promise(e=>{const t=(0,i.createServer)();t.listen(0,()=>{const{port:n}=t.address();t.close(()=>e(n))})}),u=async e=>{const t=[],n=[];for(let r=0;r<e.length;r++){const i=e[r];if(-1===i.indexOf("--inspect"))t.push(i);else{const e=i.split("=")[0],t=await c();n.push(`${e}=${t}`)}}return t.concat(n)}},()=>{},()=>{},(e,t,n)=>{"use strict";n.r(t),n.d(t,{ChildCommand:()=>r.ChildCommand,ErrorCode:()=>i.ErrorCode,MetricsTime:()=>a.MetricsTime,ParentCommand:()=>o.ParentCommand,SpanKind:()=>s.SpanKind,TelemetryAttributes:()=>s.TelemetryAttributes});var r=n(13),i=n(14),o=n(15),a=n(16),s=n(17)},(e,t,n)=>{"use strict";var r;n.r(t),n.d(t,{ChildCommand:()=>r}),function(e){e[e.Init=0]="Init",e[e.Start=1]="Start",e[e.Stop=2]="Stop",e[e.GetChildrenValuesResponse=3]="GetChildrenValuesResponse",e[e.GetIgnoredChildrenFailuresResponse=4]="GetIgnoredChildrenFailuresResponse"}(r||(r={}))},(e,t,n)=>{"use strict";var r;n.r(t),n.d(t,{ErrorCode:()=>r}),function(e){e[e.JobNotExist=-1]="JobNotExist",e[e.JobLockNotExist=-2]="JobLockNotExist",e[e.JobNotInState=-3]="JobNotInState",e[e.JobPendingChildren=-4]="JobPendingChildren",e[e.ParentJobNotExist=-5]="ParentJobNotExist",e[e.JobLockMismatch=-6]="JobLockMismatch",e[e.ParentJobCannotBeReplaced=-7]="ParentJobCannotBeReplaced",e[e.JobBelongsToJobScheduler=-8]="JobBelongsToJobScheduler",e[e.JobHasFailedChildren=-9]="JobHasFailedChildren"}(r||(r={}))},(e,t,n)=>{"use strict";var r;n.r(t),n.d(t,{ParentCommand:()=>r}),function(e){e[e.Completed=0]="Completed",e[e.Error=1]="Error",e[e.Failed=2]="Failed",e[e.InitFailed=3]="InitFailed",e[e.InitCompleted=4]="InitCompleted",e[e.Log=5]="Log",e[e.MoveToDelayed=6]="MoveToDelayed",e[e.MoveToWait=7]="MoveToWait",e[e.Progress=8]="Progress",e[e.Update=9]="Update",e[e.GetChildrenValues=10]="GetChildrenValues",e[e.GetIgnoredChildrenFailures=11]="GetIgnoredChildrenFailures"}(r||(r={}))},(e,t,n)=>{"use strict";var r;n.r(t),n.d(t,{MetricsTime:()=>r}),function(e){e[e.ONE_MINUTE=1]="ONE_MINUTE",e[e.FIVE_MINUTES=5]="FIVE_MINUTES",e[e.FIFTEEN_MINUTES=15]="FIFTEEN_MINUTES",e[e.THIRTY_MINUTES=30]="THIRTY_MINUTES",e[e.ONE_HOUR=60]="ONE_HOUR",e[e.ONE_WEEK=10080]="ONE_WEEK",e[e.TWO_WEEKS=20160]="TWO_WEEKS",e[e.ONE_MONTH=80640]="ONE_MONTH"}(r||(r={}))},(e,t,n)=>{"use strict";var r,i;n.r(t),n.d(t,{SpanKind:()=>i,TelemetryAttributes:()=>r}),function(e){e.QueueName="bullmq.queue.name",e.QueueOperation="bullmq.queue.operation",e.BulkCount="bullmq.job.bulk.count",e.BulkNames="bullmq.job.bulk.names",e.JobName="bullmq.job.name",e.JobId="bullmq.job.id",e.JobKey="bullmq.job.key",e.JobIds="bullmq.job.ids",e.DeduplicationKey="bullmq.job.deduplication.key",e.JobOptions="bullmq.job.options",e.JobProgress="bullmq.job.progress",e.QueueDrainDelay="bullmq.queue.drain.delay",e.QueueGrace="bullmq.queue.grace",e.QueueCleanLimit="bullmq.queue.clean.limit",e.QueueRateLimit="bullmq.queue.rate.limit",e.JobType="bullmq.job.type",e.QueueOptions="bullmq.queue.options",e.QueueEventMaxLength="bullmq.queue.event.max.length",e.WorkerOptions="bullmq.worker.options",e.WorkerName="bullmq.worker.name",e.WorkerId="bullmq.worker.id",e.WorkerRateLimit="bullmq.worker.rate.limit",e.WorkerDoNotWaitActive="bullmq.worker.do.not.wait.active",e.WorkerForceClose="bullmq.worker.force.close",e.WorkerStalledJobs="bullmq.worker.stalled.jobs",e.WorkerFailedJobs="bullmq.worker.failed.jobs",e.WorkerJobsToExtendLocks="bullmq.worker.jobs.to.extend.locks",e.JobFinishedTimestamp="bullmq.job.finished.timestamp",e.JobProcessedTimestamp="bullmq.job.processed.timestamp",e.JobResult="bullmq.job.result",e.JobFailedReason="bullmq.job.failed.reason",e.FlowName="bullmq.flow.name",e.JobSchedulerId="bullmq.job.scheduler.id"}(r||(r={})),function(e){e[e.INTERNAL=0]="INTERNAL",e[e.SERVER=1]="SERVER",e[e.CLIENT=2]="CLIENT",e[e.PRODUCER=3]="PRODUCER",e[e.CONSUMER=4]="CONSUMER"}(i||(i={}))},e=>{"use strict";var t,n="object"==typeof Reflect?Reflect:null,r=n&&"function"==typeof n.apply?n.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)};t=n&&"function"==typeof n.ownKeys?n.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var i=Number.isNaN||function(e){return e!=e};function o(){o.init.call(this)}e.exports=o,e.exports.once=function(e,t){return new Promise(function(n,r){function i(n){e.removeListener(t,o),r(n)}function o(){"function"==typeof e.removeListener&&e.removeListener("error",i),n([].slice.call(arguments))}y(e,t,o,{once:!0}),"error"!==t&&function(e,t,n){"function"==typeof e.on&&y(e,"error",t,n)}(e,i,{once:!0})})},o.EventEmitter=o,o.prototype._events=void 0,o.prototype._eventsCount=0,o.prototype._maxListeners=void 0;var a=10;function s(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function l(e){return void 0===e._maxListeners?o.defaultMaxListeners:e._maxListeners}function c(e,t,n,r){var i,o,a,c;if(s(n),void 0===(o=e._events)?(o=e._events=Object.create(null),e._eventsCount=0):(void 0!==o.newListener&&(e.emit("newListener",t,n.listener?n.listener:n),o=e._events),a=o[t]),void 0===a)a=o[t]=n,++e._eventsCount;else if("function"==typeof a?a=o[t]=r?[n,a]:[a,n]:r?a.unshift(n):a.push(n),(i=l(e))>0&&a.length>i&&!a.warned){a.warned=!0;var u=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");u.name="MaxListenersExceededWarning",u.emitter=e,u.type=t,u.count=a.length,c=u,console&&console.warn&&console.warn(c)}return e}function u(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function d(e,t,n){var r={fired:!1,wrapFn:void 0,target:e,type:t,listener:n},i=u.bind(r);return i.listener=n,r.wrapFn=i,i}function p(e,t,n){var r=e._events;if(void 0===r)return[];var i=r[t];return void 0===i?[]:"function"==typeof i?n?[i.listener||i]:[i]:n?function(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}(i):f(i,i.length)}function h(e){var t=this._events;if(void 0!==t){var n=t[e];if("function"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function f(e,t){for(var n=new Array(t),r=0;r<t;++r)n[r]=e[r];return n}function y(e,t,n,r){if("function"==typeof e.on)r.once?e.once(t,n):e.on(t,n);else{if("function"!=typeof e.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof e);e.addEventListener(t,function i(o){r.once&&e.removeEventListener(t,i),n(o)})}}Object.defineProperty(o,"defaultMaxListeners",{enumerable:!0,get:function(){return a},set:function(e){if("number"!=typeof e||e<0||i(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");a=e}}),o.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},o.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||i(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},o.prototype.getMaxListeners=function(){return l(this)},o.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var i="error"===e,o=this._events;if(void 0!==o)i=i&&void 0===o.error;else if(!i)return!1;if(i){var a;if(t.length>0&&(a=t[0]),a instanceof Error)throw a;var s=new Error("Unhandled error."+(a?" ("+a.message+")":""));throw s.context=a,s}var l=o[e];if(void 0===l)return!1;if("function"==typeof l)r(l,this,t);else{var c=l.length,u=f(l,c);for(n=0;n<c;++n)r(u[n],this,t)}return!0},o.prototype.addListener=function(e,t){return c(this,e,t,!1)},o.prototype.on=o.prototype.addListener,o.prototype.prependListener=function(e,t){return c(this,e,t,!0)},o.prototype.once=function(e,t){return s(t),this.on(e,d(this,e,t)),this},o.prototype.prependOnceListener=function(e,t){return s(t),this.prependListener(e,d(this,e,t)),this},o.prototype.removeListener=function(e,t){var n,r,i,o,a;if(s(t),void 0===(r=this._events))return this;if(void 0===(n=r[e]))return this;if(n===t||n.listener===t)0===--this._eventsCount?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit("removeListener",e,n.listener||t));else if("function"!=typeof n){for(i=-1,o=n.length-1;o>=0;o--)if(n[o]===t||n[o].listener===t){a=n[o].listener,i=o;break}if(i<0)return this;0===i?n.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(n,i),1===n.length&&(r[e]=n[0]),void 0!==r.removeListener&&this.emit("removeListener",e,a||t)}return this},o.prototype.off=o.prototype.removeListener,o.prototype.removeAllListeners=function(e){var t,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[e]&&(0===--this._eventsCount?this._events=Object.create(null):delete n[e]),this;if(0===arguments.length){var i,o=Object.keys(n);for(r=0;r<o.length;++r)"removeListener"!==(i=o[r])&&this.removeAllListeners(i);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=n[e]))this.removeListener(e,t);else if(void 0!==t)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this},o.prototype.listeners=function(e){return p(this,e,!0)},o.prototype.rawListeners=function(e){return p(this,e,!1)},o.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):h.call(e,t)},o.prototype.listenerCount=h,o.prototype.eventNames=function(){return this._eventsCount>0?t(this._events):[]}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{ChildPool:()=>o});var r=n(20),i=n(9);class o{constructor({mainFile:e=r.join(process.cwd(),"dist/cjs/classes/main.js"),useWorkerThreads:t,workerForkOptions:n,workerThreadsOptions:i}){this.retained={},this.free={},this.opts={mainFile:e,useWorkerThreads:t,workerForkOptions:n,workerThreadsOptions:i}}async retain(e){let t=this.getFree(e).pop();if(t)return this.retained[t.pid]=t,t;t=new i.Child(this.opts.mainFile,e,{useWorkerThreads:this.opts.useWorkerThreads,workerForkOptions:this.opts.workerForkOptions,workerThreadsOptions:this.opts.workerThreadsOptions}),t.on("exit",this.remove.bind(this,t));try{if(await t.init(),null!==t.exitCode||null!==t.signalCode)throw new Error("Child exited before it could be retained");return this.retained[t.pid]=t,t}catch(e){throw console.error(e),this.release(t),e}}release(e){delete this.retained[e.pid],this.getFree(e.processFile).push(e)}remove(e){delete this.retained[e.pid];const t=this.getFree(e.processFile),n=t.indexOf(e);n>-1&&t.splice(n,1)}async kill(e,t="SIGKILL"){return this.remove(e),e.kill(t,3e4)}async clean(){const e=Object.values(this.retained).concat(this.getAllFree());this.retained={},this.free={},await Promise.all(e.map(e=>this.kill(e,"SIGTERM")))}getFree(e){return this.free[e]=this.free[e]||[]}getAllFree(){return Object.values(this.free).reduce((e,t)=>e.concat(t),[])}}},()=>{},(e,t,n)=>{"use strict";n.r(t),n.d(t,{ChildProcessor:()=>a});var r,i=n(12),o=n(22);!function(e){e[e.Idle=0]="Idle",e[e.Started=1]="Started",e[e.Terminating=2]="Terminating",e[e.Errored=3]="Errored"}(r||(r={}));class a{constructor(e,t){this.send=e,this.receiver=t}async init(e){let t;try{const{default:r}=await n(235)(e);if(t=r,t.default&&(t=t.default),"function"!=typeof t)throw new Error("No function is exported in processor file")}catch(e){return this.status=r.Errored,this.send({cmd:i.ParentCommand.InitFailed,err:(0,o.errorToJSON)(e)})}const a=t;t=function(e,t){try{return Promise.resolve(a(e,t))}catch(e){return Promise.reject(e)}},this.processor=t,this.status=r.Idle,await this.send({cmd:i.ParentCommand.InitCompleted})}async start(e,t){if(this.status!==r.Idle)return this.send({cmd:i.ParentCommand.Error,err:(0,o.errorToJSON)(new Error("cannot start a not idling child process"))});this.status=r.Started,this.currentJobPromise=(async()=>{try{const n=this.wrapJob(e,this.send),r=await this.processor(n,t);await this.send({cmd:i.ParentCommand.Completed,value:void 0===r?null:r})}catch(e){await this.send({cmd:i.ParentCommand.Failed,value:(0,o.errorToJSON)(e.message?e:new Error(e))})}finally{this.status=r.Idle,this.currentJobPromise=void 0}})()}async stop(){}async waitForCurrentJobAndExit(){this.status=r.Terminating;try{await this.currentJobPromise}finally{process.exit(process.exitCode||0)}}wrapJob(e,t){const n=Object.assign(Object.assign({},e),{data:JSON.parse(e.data||"{}"),opts:e.opts,returnValue:JSON.parse(e.returnvalue||"{}"),async updateProgress(e){this.progress=e,await t({cmd:i.ParentCommand.Progress,value:e})},log:async e=>{await t({cmd:i.ParentCommand.Log,value:e})},moveToDelayed:async(e,n)=>{await t({cmd:i.ParentCommand.MoveToDelayed,value:{timestamp:e,token:n}})},moveToWait:async e=>{await t({cmd:i.ParentCommand.MoveToWait,value:{token:e}})},updateData:async e=>{await t({cmd:i.ParentCommand.Update,value:e}),n.data=e},getChildrenValues:async()=>{const e=Math.random().toString(36).substring(2,15);return await t({requestId:e,cmd:i.ParentCommand.GetChildrenValues}),s(e,this.receiver,5e3,"getChildrenValues")},getIgnoredChildrenFailures:async()=>{const e=Math.random().toString(36).substring(2,15);return await t({requestId:e,cmd:i.ParentCommand.GetIgnoredChildrenFailures}),s(e,this.receiver,5e3,"getIgnoredChildrenFailures")}});return n}}const s=async(e,t,n,r)=>new Promise((i,o)=>{const a=n=>{n.requestId===e&&(i(n.value),t.off("message",a))};t.on("message",a),setTimeout(()=>{t.off("message",a),o(new Error(`TimeoutError: ${r} timed out in (${n}ms)`))},n)})},(e,t,n)=>{"use strict";n.r(t),n.d(t,{DELAY_TIME_1:()=>j,DELAY_TIME_5:()=>k,QUEUE_EVENT_SUFFIX:()=>M,array2obj:()=>p,asyncSend:()=>A,childSend:()=>O,clientCommandMessageReg:()=>I,createScripts:()=>T,decreaseMaxListeners:()=>w,delay:()=>f,errorObject:()=>l,errorToJSON:()=>C,getParentKey:()=>K,increaseMaxListeners:()=>y,invertObject:()=>m,isEmpty:()=>d,isNotConnectionError:()=>x,isRedisCluster:()=>E,isRedisInstance:()=>v,isRedisVersionLowerThan:()=>R,lengthInUtf8Bytes:()=>u,objectToFlatArray:()=>h,optsDecodeMap:()=>b,optsEncodeMap:()=>g,parseObjectValues:()=>D,removeAllQueueData:()=>S,removeUndefinedFields:()=>N,toString:()=>P,trace:()=>_,tryCatch:()=>c});var r=n(23),i=n(109),o=n(173),a=n(190),s=n(12);const l={value:null};function c(e,t,n){try{return e.apply(t,n)}catch(e){return l.value=e,l}}function u(e){return Buffer.byteLength(e,"utf8")}function d(e){for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t))return!1;return!0}function p(e){const t={};for(let n=0;n<e.length;n+=2)t[e[n]]=e[n+1];return t}function h(e){const t=[];for(const n in e)Object.prototype.hasOwnProperty.call(e,n)&&void 0!==e[n]&&(t[t.length]=n,t[t.length]=e[n]);return t}function f(e,t){return new Promise(n=>{let r;const i=()=>{null==t||t.signal.removeEventListener("abort",i),clearTimeout(r),n()};r=setTimeout(i,e),null==t||t.signal.addEventListener("abort",i)})}function y(e,t){const n=e.getMaxListeners();e.setMaxListeners(n+t)}function m(e){return Object.entries(e).reduce((e,[t,n])=>(e[n]=t,e),{})}const b={de:"deduplication",fpof:"failParentOnFailure",cpof:"continueParentOnFailure",idof:"ignoreDependencyOnFailure",kl:"keepLogs",rdof:"removeDependencyOnFailure"},g=Object.assign(Object.assign({},m(b)),{debounce:"de"});function v(e){if(!e)return!1;return["connect","disconnect","duplicate"].every(t=>"function"==typeof e[t])}function E(e){return v(e)&&e.isCluster}function w(e,t){y(e,-t)}async function S(e,t,n=process.env.BULLMQ_TEST_PREFIX||"bull"){if(e instanceof r.Cluster)return Promise.resolve(!1);const i=`${n}:${t}:*`,o=await new Promise((t,n)=>{const r=e.scanStream({match:i});r.on("data",t=>{if(t.length){const r=e.pipeline();t.forEach(e=>{r.del(e)}),r.exec().catch(e=>{n(e)})}}),r.on("end",()=>t()),r.on("error",e=>n(e))});await o,await e.quit()}function K(e){if(e)return`${e.queue}:${e.id}`}const I=/ERR unknown command ['`]\s*client\s*['`]/,k=5e3,j=100;function x(e){const t=`${e.message}`;return t!==i.CONNECTION_CLOSED_ERROR_MSG&&!t.includes("ECONNREFUSED")}const A=(e,t)=>new Promise((n,r)=>{"function"==typeof e.send?e.send(t,e=>{e?r(e):n()}):"function"==typeof e.postMessage?n(e.postMessage(t)):n()}),O=(e,t)=>A(e,t),T=e=>new o.Scripts({keys:e.keys,client:e.client,get redisVersion(){return e.redisVersion},toKey:e.toKey,opts:e.opts,closing:e.closing}),R=(e,t)=>{const n=a.valid(a.coerce(e));return a.lt(n,t)},D=e=>{const t={};for(const n of Object.entries(e))t[n[0]]=JSON.parse(n[1]);return t},C=e=>{const t={};return Object.getOwnPropertyNames(e).forEach(function(n){t[n]=e[n]}),JSON.parse(JSON.stringify(t,(e=>{const t=new WeakSet;return t.add(e),(e,n)=>{if("object"==typeof n&&null!==n){if(t.has(n))return"[Circular]";t.add(n)}return n}})(e)))},P=e=>{if(null==e)return"";if("string"==typeof e)return e;if(Array.isArray(e))return`${e.map(e=>null==e?e:P(e))}`;if("symbol"==typeof e||"[object Symbol]"==Object.prototype.toString.call(e))return e.toString();const t=`${e}`;return"0"===t&&1/e==-1/0?"-0":t},M=":qe";function N(e){const t={};for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}async function _(e,t,n,r,i,o,a){if(!e)return o();{const{tracer:l,contextManager:c}=e,u=c.active();let d;a&&(d=c.fromMetadata(u,a));const p=i?`${r} ${i}`:r,h=l.startSpan(p,{kind:t},d);try{let e,i;return h.setAttributes({[s.TelemetryAttributes.QueueName]:n,[s.TelemetryAttributes.QueueOperation]:r}),e=t===s.SpanKind.CONSUMER&&d?h.setSpanOnContext(d):h.setSpanOnContext(u),2==o.length&&(i=c.getMetadata(e)),await c.with(e,()=>o(h,i))}catch(e){throw h.recordException(e),e}finally{h.end()}}}},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.print=t.ReplyError=t.SentinelIterator=t.SentinelConnector=t.AbstractConnector=t.Pipeline=t.ScanStream=t.Command=t.Cluster=t.Redis=t.default=void 0,t=e.exports=n(24).default;var r=n(24);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r.default}});var i=n(24);Object.defineProperty(t,"Redis",{enumerable:!0,get:function(){return i.default}});var o=n(29);Object.defineProperty(t,"Cluster",{enumerable:!0,get:function(){return o.default}});var a=n(107);Object.defineProperty(t,"Command",{enumerable:!0,get:function(){return a.default}});var s=n(132);Object.defineProperty(t,"ScanStream",{enumerable:!0,get:function(){return s.default}});var l=n(135);Object.defineProperty(t,"Pipeline",{enumerable:!0,get:function(){return l.default}});var c=n(154);Object.defineProperty(t,"AbstractConnector",{enumerable:!0,get:function(){return c.default}});var u=n(155);Object.defineProperty(t,"SentinelConnector",{enumerable:!0,get:function(){return u.default}}),Object.defineProperty(t,"SentinelIterator",{enumerable:!0,get:function(){return u.SentinelIterator}}),t.ReplyError=n(30).ReplyError,Object.defineProperty(t,"Promise",{get:()=>(console.warn("ioredis v5 does not support plugging third-party Promise library anymore. Native Promise will be used."),Promise),set(e){console.warn("ioredis v5 does not support plugging third-party Promise library anymore. Native Promise will be used.")}}),t.print=function(e,t){e?console.log("Error: "+e):console.log("Reply: "+t)}},(e,t,n)=>{"use strict";var r=n(1);function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach(function(t){r(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}Object.defineProperty(t,"__esModule",{value:!0});const a=n(25),s=n(18),l=n(27),c=n(29),u=n(107),d=n(150),p=n(155),h=n(160),f=n(172),y=n(132),m=n(134),b=n(109),g=n(140),v=n(136),E=n(123),w=n(148),S=(0,b.Debug)("redis");class K extends v.default{constructor(e,t,n){if(super(),this.status="wait",this.isCluster=!1,this.reconnectTimeout=null,this.connectionEpoch=0,this.retryAttempts=0,this.manuallyClosing=!1,this._autoPipelines=new Map,this._runningAutoPipelines=new Set,this.parseOptions(e,t,n),s.EventEmitter.call(this),this.resetCommandQueue(),this.resetOfflineQueue(),this.options.Connector)this.connector=new this.options.Connector(this.options);else if(this.options.sentinels){const e=new p.default(this.options);e.emitter=this,this.connector=e}else this.connector=new d.StandaloneConnector(this.options);this.options.scripts&&Object.entries(this.options.scripts).forEach(([e,t])=>{this.defineCommand(e,t)}),this.options.lazyConnect?this.setStatus("wait"):this.connect().catch(E.noop)}static createClient(...e){return new K(...e)}get autoPipelineQueueSize(){let e=0;for(const t of this._autoPipelines.values())e+=t.length;return e}connect(e){const t=new Promise((e,t)=>{if("connecting"===this.status||"connect"===this.status||"ready"===this.status)return void t(new Error("Redis is already connecting/connected"));this.connectionEpoch+=1,this.setStatus("connecting");const{options:n}=this;this.condition={select:n.db,auth:n.username?[n.username,n.password]:n.password,subscriber:!1};const r=this;(0,l.default)(this.connector.connect(function(e,t){r.silentEmit(e,t)}),function(i,o){if(i)return r.flushQueue(i),r.silentEmit("error",i),t(i),void r.setStatus("end");let a=n.tls?"secureConnect":"connect";if("sentinels"in n&&n.sentinels&&!n.enableTLSForSentinelMode&&(a="connect"),r.stream=o,n.noDelay&&o.setNoDelay(!0),"number"==typeof n.keepAlive&&(o.connecting?o.once(a,()=>{o.setKeepAlive(!0,n.keepAlive)}):o.setKeepAlive(!0,n.keepAlive)),o.connecting){if(o.once(a,h.connectHandler(r)),n.connectTimeout){let e=!1;o.setTimeout(n.connectTimeout,function(){if(e)return;o.setTimeout(0),o.destroy();const t=new Error("connect ETIMEDOUT");t.errorno="ETIMEDOUT",t.code="ETIMEDOUT",t.syscall="connect",h.errorHandler(r)(t)}),o.once(a,function(){e=!0,o.setTimeout(0)})}}else if(o.destroyed){const e=r.connector.firstError;e&&process.nextTick(()=>{h.errorHandler(r)(e)}),process.nextTick(h.closeHandler(r))}else process.nextTick(h.connectHandler(r));o.destroyed||(o.once("error",h.errorHandler(r)),o.once("close",h.closeHandler(r)));const s=function(){r.removeListener("close",l),e()};var l=function(){r.removeListener("ready",s),t(new Error(b.CONNECTION_CLOSED_ERROR_MSG))};r.once("ready",s),r.once("close",l)})});return(0,l.default)(t,e)}disconnect(e=!1){e||(this.manuallyClosing=!0),this.reconnectTimeout&&!e&&(clearTimeout(this.reconnectTimeout),this.reconnectTimeout=null),"wait"===this.status?h.closeHandler(this)():this.connector.disconnect()}end(){this.disconnect()}duplicate(e){return new K(o(o({},this.options),e))}get mode(){var e;return this.options.monitor?"monitor":(null===(e=this.condition)||void 0===e?void 0:e.subscriber)?"subscriber":"normal"}monitor(e){const t=this.duplicate({monitor:!0,lazyConnect:!1});return(0,l.default)(new Promise(function(e,n){t.once("error",n),t.once("monitoring",function(){e(t)})}),e)}sendCommand(e,t){var n,r;if("wait"===this.status&&this.connect().catch(E.noop),"end"===this.status)return e.reject(new Error(b.CONNECTION_CLOSED_ERROR_MSG)),e.promise;if((null===(n=this.condition)||void 0===n?void 0:n.subscriber)&&!u.default.checkFlag("VALID_IN_SUBSCRIBER_MODE",e.name))return e.reject(new Error("Connection in subscriber mode, only subscriber commands may be used")),e.promise;"number"==typeof this.options.commandTimeout&&e.setTimeout(this.options.commandTimeout);let i="ready"===this.status||!t&&"connect"===this.status&&(0,a.exists)(e.name)&&(0,a.hasFlag)(e.name,"loading");if(this.stream&&this.stream.writable?this.stream._writableState&&this.stream._writableState.ended&&(i=!1):i=!1,i)S.enabled&&S("write command[%s]: %d -> %s(%o)",this._getDescription(),null===(r=this.condition)||void 0===r?void 0:r.select,e.name,e.args),t?"isPipeline"in t&&t.isPipeline?t.write(e.toWritable(t.destination.redis.stream)):t.write(e.toWritable(t)):this.stream.write(e.toWritable(this.stream)),this.commandQueue.push({command:e,stream:t,select:this.condition.select}),u.default.checkFlag("WILL_DISCONNECT",e.name)&&(this.manuallyClosing=!0),void 0!==this.options.socketTimeout&&void 0===this.socketTimeoutTimer&&this.setSocketTimeout();else{if(!this.options.enableOfflineQueue)return e.reject(new Error("Stream isn't writeable and enableOfflineQueue options is false")),e.promise;if("quit"===e.name&&0===this.offlineQueue.length)return this.disconnect(),e.resolve(Buffer.from("OK")),e.promise;S.enabled&&S("queue command[%s]: %d -> %s(%o)",this._getDescription(),this.condition.select,e.name,e.args),this.offlineQueue.push({command:e,stream:t,select:this.condition.select})}if("select"===e.name&&(0,b.isInt)(e.args[0])){const t=parseInt(e.args[0],10);this.condition.select!==t&&(this.condition.select=t,this.emit("select",t),S("switch to db [%d]",this.condition.select))}return e.promise}setSocketTimeout(){this.socketTimeoutTimer=setTimeout(()=>{this.stream.destroy(new Error(`Socket timeout. Expecting data, but didn't receive any in ${this.options.socketTimeout}ms.`)),this.socketTimeoutTimer=void 0},this.options.socketTimeout),this.stream.once("data",()=>{clearTimeout(this.socketTimeoutTimer),this.socketTimeoutTimer=void 0,0!==this.commandQueue.length&&this.setSocketTimeout()})}scanStream(e){return this.createScanStream("scan",{options:e})}scanBufferStream(e){return this.createScanStream("scanBuffer",{options:e})}sscanStream(e,t){return this.createScanStream("sscan",{key:e,options:t})}sscanBufferStream(e,t){return this.createScanStream("sscanBuffer",{key:e,options:t})}hscanStream(e,t){return this.createScanStream("hscan",{key:e,options:t})}hscanBufferStream(e,t){return this.createScanStream("hscanBuffer",{key:e,options:t})}zscanStream(e,t){return this.createScanStream("zscan",{key:e,options:t})}zscanBufferStream(e,t){return this.createScanStream("zscanBuffer",{key:e,options:t})}silentEmit(e,t){let n;if("error"===e){if(n=t,"end"===this.status)return;if(this.manuallyClosing&&n instanceof Error&&(n.message===b.CONNECTION_CLOSED_ERROR_MSG||"connect"===n.syscall||"read"===n.syscall))return}return this.listeners(e).length>0?this.emit.apply(this,arguments):(n&&n instanceof Error&&console.error("[ioredis] Unhandled error event:",n.stack),!1)}recoverFromFatalError(e,t,n){this.flushQueue(t,n),this.silentEmit("error",t),this.disconnect(!0)}handleReconnection(e,t){var n;let r=!1;switch(this.options.reconnectOnError&&(r=this.options.reconnectOnError(e)),r){case 1:case!0:"reconnecting"!==this.status&&this.disconnect(!0),t.command.reject(e);break;case 2:"reconnecting"!==this.status&&this.disconnect(!0),(null===(n=this.condition)||void 0===n?void 0:n.select)!==t.select&&"select"!==t.command.name&&this.select(t.select),this.sendCommand(t.command);break;default:t.command.reject(e)}}_getDescription(){let e;return e="path"in this.options&&this.options.path?this.options.path:this.stream&&this.stream.remoteAddress&&this.stream.remotePort?this.stream.remoteAddress+":"+this.stream.remotePort:"host"in this.options&&this.options.host?this.options.host+":"+this.options.port:"",this.options.connectionName&&(e+=` (${this.options.connectionName})`),e}resetCommandQueue(){this.commandQueue=new w}resetOfflineQueue(){this.offlineQueue=new w}parseOptions(...e){const t={};let n=!1;for(let r=0;r<e.length;++r){const i=e[r];if(null!=i)if("object"==typeof i)(0,E.defaults)(t,i);else if("string"==typeof i)(0,E.defaults)(t,(0,b.parseURL)(i)),i.startsWith("rediss://")&&(n=!0);else{if("number"!=typeof i)throw new Error("Invalid argument "+i);t.port=i}}n&&(0,E.defaults)(t,{tls:!0}),(0,E.defaults)(t,K.defaultOptions),"string"==typeof t.port&&(t.port=parseInt(t.port,10)),"string"==typeof t.db&&(t.db=parseInt(t.db,10)),this.options=(0,b.resolveTLSProfile)(t)}setStatus(e,t){S.enabled&&S("status[%s]: %s -> %s",this._getDescription(),this.status||"[empty]",e),this.status=e,process.nextTick(this.emit.bind(this,e,t))}createScanStream(e,{key:t,options:n={}}){return new y.default(o({objectMode:!0,key:t,redis:this,command:e},n))}flushQueue(e,t){let n;if((t=(0,E.defaults)({},t,{offlineQueue:!0,commandQueue:!0})).offlineQueue)for(;n=this.offlineQueue.shift();)n.command.reject(e);if(t.commandQueue&&this.commandQueue.length>0)for(this.stream&&this.stream.removeAllListeners("data");n=this.commandQueue.shift();)n.command.reject(e)}_readyCheck(e){const t=this;this.info(function(n,r){if(n)return n.message&&n.message.includes("NOPERM")?(console.warn(`Skipping the ready check because INFO command fails: "${n.message}". You can disable ready check with "enableReadyCheck". More: https://github.com/luin/ioredis/wiki/Disable-ready-check.`),e(null,{})):e(n);if("string"!=typeof r)return e(null,r);const i={},o=r.split("\r\n");for(let e=0;e<o.length;++e){const[t,...n]=o[e].split(":"),r=n.join(":");r&&(i[t]=r)}if(i.loading&&"0"!==i.loading){const n=1e3*(i.loading_eta_seconds||1),r=t.options.maxLoadingRetryTime&&t.options.maxLoadingRetryTime<n?t.options.maxLoadingRetryTime:n;S("Redis server still loading, trying again in "+r+"ms"),setTimeout(function(){t._readyCheck(e)},r)}else e(null,i)}).catch(E.noop)}}K.Cluster=c.default,K.Command=u.default,K.defaultOptions=f.DEFAULT_REDIS_OPTIONS,(0,g.default)(K,s.EventEmitter),(0,m.addTransactionSupport)(K.prototype),t.default=K},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getKeyIndexes=t.hasFlag=t.exists=t.list=void 0;const i=r(n(26));t.list=Object.keys(i.default);const o={};function a(e){"string"!=typeof e&&(e=String(e));const t=e.indexOf("->");return-1===t?e.length:t}t.list.forEach(e=>{o[e]=i.default[e].flags.reduce(function(e,t){return e[t]=!0,e},{})}),t.exists=function(e){return Boolean(i.default[e])},t.hasFlag=function(e,t){if(!o[e])throw new Error("Unknown command "+e);return Boolean(o[e][t])},t.getKeyIndexes=function(e,t,n){const r=i.default[e];if(!r)throw new Error("Unknown command "+e);if(!Array.isArray(t))throw new Error("Expect args to be an array");const o=[],s=Boolean(n&&n.parseExternalKey),l=(e,t)=>{const n=[],r=Number(e[t]);for(let e=0;e<r;e++)n.push(e+t+1);return n},c=(e,t,n)=>{for(let r=t;r<e.length-1;r+=1)if(String(e[r]).toLowerCase()===n.toLowerCase())return r+1;return null};switch(e){case"zunionstore":case"zinterstore":case"zdiffstore":o.push(0,...l(t,1));break;case"eval":case"evalsha":case"eval_ro":case"evalsha_ro":case"fcall":case"fcall_ro":case"blmpop":case"bzmpop":o.push(...l(t,1));break;case"sintercard":case"lmpop":case"zunion":case"zinter":case"zmpop":case"zintercard":case"zdiff":o.push(...l(t,0));break;case"georadius":{o.push(0);const e=c(t,5,"STORE");e&&o.push(e);const n=c(t,5,"STOREDIST");n&&o.push(n);break}case"georadiusbymember":{o.push(0);const e=c(t,4,"STORE");e&&o.push(e);const n=c(t,4,"STOREDIST");n&&o.push(n);break}case"sort":case"sort_ro":o.push(0);for(let e=1;e<t.length-1;e++){let n=t[e];if("string"!=typeof n)continue;const r=n.toUpperCase();"GET"===r?(e+=1,n=t[e],"#"!==n&&(s?o.push([e,a(n)]):o.push(e))):"BY"===r?(e+=1,s?o.push([e,a(t[e])]):o.push(e)):"STORE"===r&&(e+=1,o.push(e))}break;case"migrate":if(""===t[2])for(let e=5;e<t.length-1;e++){const n=t[e];if("string"==typeof n&&"KEYS"===n.toUpperCase()){for(let n=e+1;n<t.length;n++)o.push(n);break}}else o.push(2);break;case"xreadgroup":case"xread":for(let n="xread"===e?0:3;n<t.length-1;n++)if("STREAMS"===String(t[n]).toUpperCase()){for(let e=n+1;e<=n+(t.length-1-n)/2;e++)o.push(e);break}break;default:if(r.step>0){const e=r.keyStart-1,n=r.keyStop>0?r.keyStop:t.length+r.keyStop+1;for(let t=e;t<n;t+=r.step)o.push(t)}}return o}},e=>{"use strict";e.exports=JSON.parse('{"acl":{"arity":-2,"flags":[],"keyStart":0,"keyStop":0,"step":0},"append":{"arity":3,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"asking":{"arity":1,"flags":["fast"],"keyStart":0,"keyStop":0,"step":0},"auth":{"arity":-2,"flags":["noscript","loading","stale","fast","no_auth","allow_busy"],"keyStart":0,"keyStop":0,"step":0},"bgrewriteaof":{"arity":1,"flags":["admin","noscript","no_async_loading"],"keyStart":0,"keyStop":0,"step":0},"bgsave":{"arity":-1,"flags":["admin","noscript","no_async_loading"],"keyStart":0,"keyStop":0,"step":0},"bitcount":{"arity":-2,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"bitfield":{"arity":-2,"flags":["write","denyoom"],"keyStart":1,"keyStop":1,"step":1},"bitfield_ro":{"arity":-2,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"bitop":{"arity":-4,"flags":["write","denyoom"],"keyStart":2,"keyStop":-1,"step":1},"bitpos":{"arity":-3,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"blmove":{"arity":6,"flags":["write","denyoom","noscript","blocking"],"keyStart":1,"keyStop":2,"step":1},"blmpop":{"arity":-5,"flags":["write","blocking","movablekeys"],"keyStart":0,"keyStop":0,"step":0},"blpop":{"arity":-3,"flags":["write","noscript","blocking"],"keyStart":1,"keyStop":-2,"step":1},"brpop":{"arity":-3,"flags":["write","noscript","blocking"],"keyStart":1,"keyStop":-2,"step":1},"brpoplpush":{"arity":4,"flags":["write","denyoom","noscript","blocking"],"keyStart":1,"keyStop":2,"step":1},"bzmpop":{"arity":-5,"flags":["write","blocking","movablekeys"],"keyStart":0,"keyStop":0,"step":0},"bzpopmax":{"arity":-3,"flags":["write","noscript","blocking","fast"],"keyStart":1,"keyStop":-2,"step":1},"bzpopmin":{"arity":-3,"flags":["write","noscript","blocking","fast"],"keyStart":1,"keyStop":-2,"step":1},"client":{"arity":-2,"flags":[],"keyStart":0,"keyStop":0,"step":0},"cluster":{"arity":-2,"flags":[],"keyStart":0,"keyStop":0,"step":0},"command":{"arity":-1,"flags":["loading","stale"],"keyStart":0,"keyStop":0,"step":0},"config":{"arity":-2,"flags":[],"keyStart":0,"keyStop":0,"step":0},"copy":{"arity":-3,"flags":["write","denyoom"],"keyStart":1,"keyStop":2,"step":1},"dbsize":{"arity":1,"flags":["readonly","fast"],"keyStart":0,"keyStop":0,"step":0},"debug":{"arity":-2,"flags":["admin","noscript","loading","stale"],"keyStart":0,"keyStop":0,"step":0},"decr":{"arity":2,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"decrby":{"arity":3,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"del":{"arity":-2,"flags":["write"],"keyStart":1,"keyStop":-1,"step":1},"discard":{"arity":1,"flags":["noscript","loading","stale","fast","allow_busy"],"keyStart":0,"keyStop":0,"step":0},"dump":{"arity":2,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"echo":{"arity":2,"flags":["fast"],"keyStart":0,"keyStop":0,"step":0},"eval":{"arity":-3,"flags":["noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],"keyStart":0,"keyStop":0,"step":0},"eval_ro":{"arity":-3,"flags":["readonly","noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],"keyStart":0,"keyStop":0,"step":0},"evalsha":{"arity":-3,"flags":["noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],"keyStart":0,"keyStop":0,"step":0},"evalsha_ro":{"arity":-3,"flags":["readonly","noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],"keyStart":0,"keyStop":0,"step":0},"exec":{"arity":1,"flags":["noscript","loading","stale","skip_slowlog"],"keyStart":0,"keyStop":0,"step":0},"exists":{"arity":-2,"flags":["readonly","fast"],"keyStart":1,"keyStop":-1,"step":1},"expire":{"arity":-3,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"expireat":{"arity":-3,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"expiretime":{"arity":2,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"failover":{"arity":-1,"flags":["admin","noscript","stale"],"keyStart":0,"keyStop":0,"step":0},"fcall":{"arity":-3,"flags":["noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],"keyStart":0,"keyStop":0,"step":0},"fcall_ro":{"arity":-3,"flags":["readonly","noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],"keyStart":0,"keyStop":0,"step":0},"flushall":{"arity":-1,"flags":["write"],"keyStart":0,"keyStop":0,"step":0},"flushdb":{"arity":-1,"flags":["write"],"keyStart":0,"keyStop":0,"step":0},"function":{"arity":-2,"flags":[],"keyStart":0,"keyStop":0,"step":0},"geoadd":{"arity":-5,"flags":["write","denyoom"],"keyStart":1,"keyStop":1,"step":1},"geodist":{"arity":-4,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"geohash":{"arity":-2,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"geopos":{"arity":-2,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"georadius":{"arity":-6,"flags":["write","denyoom","movablekeys"],"keyStart":1,"keyStop":1,"step":1},"georadius_ro":{"arity":-6,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"georadiusbymember":{"arity":-5,"flags":["write","denyoom","movablekeys"],"keyStart":1,"keyStop":1,"step":1},"georadiusbymember_ro":{"arity":-5,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"geosearch":{"arity":-7,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"geosearchstore":{"arity":-8,"flags":["write","denyoom"],"keyStart":1,"keyStop":2,"step":1},"get":{"arity":2,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"getbit":{"arity":3,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"getdel":{"arity":2,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"getex":{"arity":-2,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"getrange":{"arity":4,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"getset":{"arity":3,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"hdel":{"arity":-3,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"hello":{"arity":-1,"flags":["noscript","loading","stale","fast","no_auth","allow_busy"],"keyStart":0,"keyStop":0,"step":0},"hexists":{"arity":3,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"hexpire":{"arity":-6,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"hget":{"arity":3,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"hgetall":{"arity":2,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"hincrby":{"arity":4,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"hincrbyfloat":{"arity":4,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"hkeys":{"arity":2,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"hlen":{"arity":2,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"hmget":{"arity":-3,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"hmset":{"arity":-4,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"hrandfield":{"arity":-2,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"hscan":{"arity":-3,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"hset":{"arity":-4,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"hsetnx":{"arity":4,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"hstrlen":{"arity":3,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"hvals":{"arity":2,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"incr":{"arity":2,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"incrby":{"arity":3,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"incrbyfloat":{"arity":3,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"info":{"arity":-1,"flags":["loading","stale"],"keyStart":0,"keyStop":0,"step":0},"keys":{"arity":2,"flags":["readonly"],"keyStart":0,"keyStop":0,"step":0},"lastsave":{"arity":1,"flags":["loading","stale","fast"],"keyStart":0,"keyStop":0,"step":0},"latency":{"arity":-2,"flags":[],"keyStart":0,"keyStop":0,"step":0},"lcs":{"arity":-3,"flags":["readonly"],"keyStart":1,"keyStop":2,"step":1},"lindex":{"arity":3,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"linsert":{"arity":5,"flags":["write","denyoom"],"keyStart":1,"keyStop":1,"step":1},"llen":{"arity":2,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"lmove":{"arity":5,"flags":["write","denyoom"],"keyStart":1,"keyStop":2,"step":1},"lmpop":{"arity":-4,"flags":["write","movablekeys"],"keyStart":0,"keyStop":0,"step":0},"lolwut":{"arity":-1,"flags":["readonly","fast"],"keyStart":0,"keyStop":0,"step":0},"lpop":{"arity":-2,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"lpos":{"arity":-3,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"lpush":{"arity":-3,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"lpushx":{"arity":-3,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"lrange":{"arity":4,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"lrem":{"arity":4,"flags":["write"],"keyStart":1,"keyStop":1,"step":1},"lset":{"arity":4,"flags":["write","denyoom"],"keyStart":1,"keyStop":1,"step":1},"ltrim":{"arity":4,"flags":["write"],"keyStart":1,"keyStop":1,"step":1},"memory":{"arity":-2,"flags":[],"keyStart":0,"keyStop":0,"step":0},"mget":{"arity":-2,"flags":["readonly","fast"],"keyStart":1,"keyStop":-1,"step":1},"migrate":{"arity":-6,"flags":["write","movablekeys"],"keyStart":3,"keyStop":3,"step":1},"module":{"arity":-2,"flags":[],"keyStart":0,"keyStop":0,"step":0},"monitor":{"arity":1,"flags":["admin","noscript","loading","stale"],"keyStart":0,"keyStop":0,"step":0},"move":{"arity":3,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"mset":{"arity":-3,"flags":["write","denyoom"],"keyStart":1,"keyStop":-1,"step":2},"msetnx":{"arity":-3,"flags":["write","denyoom"],"keyStart":1,"keyStop":-1,"step":2},"multi":{"arity":1,"flags":["noscript","loading","stale","fast","allow_busy"],"keyStart":0,"keyStop":0,"step":0},"object":{"arity":-2,"flags":[],"keyStart":0,"keyStop":0,"step":0},"persist":{"arity":2,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"pexpire":{"arity":-3,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"pexpireat":{"arity":-3,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"pexpiretime":{"arity":2,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"pfadd":{"arity":-2,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"pfcount":{"arity":-2,"flags":["readonly"],"keyStart":1,"keyStop":-1,"step":1},"pfdebug":{"arity":3,"flags":["write","denyoom","admin"],"keyStart":2,"keyStop":2,"step":1},"pfmerge":{"arity":-2,"flags":["write","denyoom"],"keyStart":1,"keyStop":-1,"step":1},"pfselftest":{"arity":1,"flags":["admin"],"keyStart":0,"keyStop":0,"step":0},"ping":{"arity":-1,"flags":["fast"],"keyStart":0,"keyStop":0,"step":0},"psetex":{"arity":4,"flags":["write","denyoom"],"keyStart":1,"keyStop":1,"step":1},"psubscribe":{"arity":-2,"flags":["pubsub","noscript","loading","stale"],"keyStart":0,"keyStop":0,"step":0},"psync":{"arity":-3,"flags":["admin","noscript","no_async_loading","no_multi"],"keyStart":0,"keyStop":0,"step":0},"pttl":{"arity":2,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"publish":{"arity":3,"flags":["pubsub","loading","stale","fast"],"keyStart":0,"keyStop":0,"step":0},"pubsub":{"arity":-2,"flags":[],"keyStart":0,"keyStop":0,"step":0},"punsubscribe":{"arity":-1,"flags":["pubsub","noscript","loading","stale"],"keyStart":0,"keyStop":0,"step":0},"quit":{"arity":-1,"flags":["noscript","loading","stale","fast","no_auth","allow_busy"],"keyStart":0,"keyStop":0,"step":0},"randomkey":{"arity":1,"flags":["readonly"],"keyStart":0,"keyStop":0,"step":0},"readonly":{"arity":1,"flags":["loading","stale","fast"],"keyStart":0,"keyStop":0,"step":0},"readwrite":{"arity":1,"flags":["loading","stale","fast"],"keyStart":0,"keyStop":0,"step":0},"rename":{"arity":3,"flags":["write"],"keyStart":1,"keyStop":2,"step":1},"renamenx":{"arity":3,"flags":["write","fast"],"keyStart":1,"keyStop":2,"step":1},"replconf":{"arity":-1,"flags":["admin","noscript","loading","stale","allow_busy"],"keyStart":0,"keyStop":0,"step":0},"replicaof":{"arity":3,"flags":["admin","noscript","stale","no_async_loading"],"keyStart":0,"keyStop":0,"step":0},"reset":{"arity":1,"flags":["noscript","loading","stale","fast","no_auth","allow_busy"],"keyStart":0,"keyStop":0,"step":0},"restore":{"arity":-4,"flags":["write","denyoom"],"keyStart":1,"keyStop":1,"step":1},"restore-asking":{"arity":-4,"flags":["write","denyoom","asking"],"keyStart":1,"keyStop":1,"step":1},"role":{"arity":1,"flags":["noscript","loading","stale","fast"],"keyStart":0,"keyStop":0,"step":0},"rpop":{"arity":-2,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"rpoplpush":{"arity":3,"flags":["write","denyoom"],"keyStart":1,"keyStop":2,"step":1},"rpush":{"arity":-3,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"rpushx":{"arity":-3,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"sadd":{"arity":-3,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"save":{"arity":1,"flags":["admin","noscript","no_async_loading","no_multi"],"keyStart":0,"keyStop":0,"step":0},"scan":{"arity":-2,"flags":["readonly"],"keyStart":0,"keyStop":0,"step":0},"scard":{"arity":2,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"script":{"arity":-2,"flags":[],"keyStart":0,"keyStop":0,"step":0},"sdiff":{"arity":-2,"flags":["readonly"],"keyStart":1,"keyStop":-1,"step":1},"sdiffstore":{"arity":-3,"flags":["write","denyoom"],"keyStart":1,"keyStop":-1,"step":1},"select":{"arity":2,"flags":["loading","stale","fast"],"keyStart":0,"keyStop":0,"step":0},"set":{"arity":-3,"flags":["write","denyoom"],"keyStart":1,"keyStop":1,"step":1},"setbit":{"arity":4,"flags":["write","denyoom"],"keyStart":1,"keyStop":1,"step":1},"setex":{"arity":4,"flags":["write","denyoom"],"keyStart":1,"keyStop":1,"step":1},"setnx":{"arity":3,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"setrange":{"arity":4,"flags":["write","denyoom"],"keyStart":1,"keyStop":1,"step":1},"shutdown":{"arity":-1,"flags":["admin","noscript","loading","stale","no_multi","allow_busy"],"keyStart":0,"keyStop":0,"step":0},"sinter":{"arity":-2,"flags":["readonly"],"keyStart":1,"keyStop":-1,"step":1},"sintercard":{"arity":-3,"flags":["readonly","movablekeys"],"keyStart":0,"keyStop":0,"step":0},"sinterstore":{"arity":-3,"flags":["write","denyoom"],"keyStart":1,"keyStop":-1,"step":1},"sismember":{"arity":3,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"slaveof":{"arity":3,"flags":["admin","noscript","stale","no_async_loading"],"keyStart":0,"keyStop":0,"step":0},"slowlog":{"arity":-2,"flags":[],"keyStart":0,"keyStop":0,"step":0},"smembers":{"arity":2,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"smismember":{"arity":-3,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"smove":{"arity":4,"flags":["write","fast"],"keyStart":1,"keyStop":2,"step":1},"sort":{"arity":-2,"flags":["write","denyoom","movablekeys"],"keyStart":1,"keyStop":1,"step":1},"sort_ro":{"arity":-2,"flags":["readonly","movablekeys"],"keyStart":1,"keyStop":1,"step":1},"spop":{"arity":-2,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"spublish":{"arity":3,"flags":["pubsub","loading","stale","fast"],"keyStart":1,"keyStop":1,"step":1},"srandmember":{"arity":-2,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"srem":{"arity":-3,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"sscan":{"arity":-3,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"ssubscribe":{"arity":-2,"flags":["pubsub","noscript","loading","stale"],"keyStart":1,"keyStop":-1,"step":1},"strlen":{"arity":2,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"subscribe":{"arity":-2,"flags":["pubsub","noscript","loading","stale"],"keyStart":0,"keyStop":0,"step":0},"substr":{"arity":4,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"sunion":{"arity":-2,"flags":["readonly"],"keyStart":1,"keyStop":-1,"step":1},"sunionstore":{"arity":-3,"flags":["write","denyoom"],"keyStart":1,"keyStop":-1,"step":1},"sunsubscribe":{"arity":-1,"flags":["pubsub","noscript","loading","stale"],"keyStart":1,"keyStop":-1,"step":1},"swapdb":{"arity":3,"flags":["write","fast"],"keyStart":0,"keyStop":0,"step":0},"sync":{"arity":1,"flags":["admin","noscript","no_async_loading","no_multi"],"keyStart":0,"keyStop":0,"step":0},"time":{"arity":1,"flags":["loading","stale","fast"],"keyStart":0,"keyStop":0,"step":0},"touch":{"arity":-2,"flags":["readonly","fast"],"keyStart":1,"keyStop":-1,"step":1},"ttl":{"arity":2,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"type":{"arity":2,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"unlink":{"arity":-2,"flags":["write","fast"],"keyStart":1,"keyStop":-1,"step":1},"unsubscribe":{"arity":-1,"flags":["pubsub","noscript","loading","stale"],"keyStart":0,"keyStop":0,"step":0},"unwatch":{"arity":1,"flags":["noscript","loading","stale","fast","allow_busy"],"keyStart":0,"keyStop":0,"step":0},"wait":{"arity":3,"flags":["noscript"],"keyStart":0,"keyStop":0,"step":0},"watch":{"arity":-2,"flags":["noscript","loading","stale","fast","allow_busy"],"keyStart":1,"keyStop":-1,"step":1},"xack":{"arity":-4,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"xadd":{"arity":-5,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"xautoclaim":{"arity":-6,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"xclaim":{"arity":-6,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"xdel":{"arity":-3,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"xgroup":{"arity":-2,"flags":[],"keyStart":0,"keyStop":0,"step":0},"xinfo":{"arity":-2,"flags":[],"keyStart":0,"keyStop":0,"step":0},"xlen":{"arity":2,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"xpending":{"arity":-3,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"xrange":{"arity":-4,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"xread":{"arity":-4,"flags":["readonly","blocking","movablekeys"],"keyStart":0,"keyStop":0,"step":0},"xreadgroup":{"arity":-7,"flags":["write","blocking","movablekeys"],"keyStart":0,"keyStop":0,"step":0},"xrevrange":{"arity":-4,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"xsetid":{"arity":-3,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"xtrim":{"arity":-4,"flags":["write"],"keyStart":1,"keyStop":1,"step":1},"zadd":{"arity":-4,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"zcard":{"arity":2,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"zcount":{"arity":4,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"zdiff":{"arity":-3,"flags":["readonly","movablekeys"],"keyStart":0,"keyStop":0,"step":0},"zdiffstore":{"arity":-4,"flags":["write","denyoom","movablekeys"],"keyStart":1,"keyStop":1,"step":1},"zincrby":{"arity":4,"flags":["write","denyoom","fast"],"keyStart":1,"keyStop":1,"step":1},"zinter":{"arity":-3,"flags":["readonly","movablekeys"],"keyStart":0,"keyStop":0,"step":0},"zintercard":{"arity":-3,"flags":["readonly","movablekeys"],"keyStart":0,"keyStop":0,"step":0},"zinterstore":{"arity":-4,"flags":["write","denyoom","movablekeys"],"keyStart":1,"keyStop":1,"step":1},"zlexcount":{"arity":4,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"zmpop":{"arity":-4,"flags":["write","movablekeys"],"keyStart":0,"keyStop":0,"step":0},"zmscore":{"arity":-3,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"zpopmax":{"arity":-2,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"zpopmin":{"arity":-2,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"zrandmember":{"arity":-2,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"zrange":{"arity":-4,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"zrangebylex":{"arity":-4,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"zrangebyscore":{"arity":-4,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"zrangestore":{"arity":-5,"flags":["write","denyoom"],"keyStart":1,"keyStop":2,"step":1},"zrank":{"arity":3,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"zrem":{"arity":-3,"flags":["write","fast"],"keyStart":1,"keyStop":1,"step":1},"zremrangebylex":{"arity":4,"flags":["write"],"keyStart":1,"keyStop":1,"step":1},"zremrangebyrank":{"arity":4,"flags":["write"],"keyStart":1,"keyStop":1,"step":1},"zremrangebyscore":{"arity":4,"flags":["write"],"keyStart":1,"keyStop":1,"step":1},"zrevrange":{"arity":-4,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"zrevrangebylex":{"arity":-4,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"zrevrangebyscore":{"arity":-4,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"zrevrank":{"arity":3,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"zscan":{"arity":-3,"flags":["readonly"],"keyStart":1,"keyStop":1,"step":1},"zscore":{"arity":3,"flags":["readonly","fast"],"keyStart":1,"keyStop":1,"step":1},"zunion":{"arity":-3,"flags":["readonly","movablekeys"],"keyStart":0,"keyStop":0,"step":0},"zunionstore":{"arity":-4,"flags":["write","denyoom","movablekeys"],"keyStart":1,"keyStop":1,"step":1}}')},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(28);function i(e){setTimeout(function(){throw e},0)}t.default=function(e,t,n){return"function"==typeof t&&e.then(e=>{let o;o=void 0!==n&&Object(n).spread&&Array.isArray(e)?r.tryCatch(t).apply(void 0,[null].concat(e)):void 0===e?r.tryCatch(t)(null):r.tryCatch(t)(null,e),o===r.errorObj&&i(o.e)},e=>{if(!e){const t=new Error(e+"");Object.assign(t,{cause:e}),e=t}const n=r.tryCatch(t)(e);n===r.errorObj&&i(n.e)}),e}},(e,t)=>{"use strict";let n;function r(e,r){try{const e=n;return n=null,e.apply(this,arguments)}catch(e){return t.errorObj.e=e,t.errorObj}}Object.defineProperty(t,"__esModule",{value:!0}),t.tryCatch=t.errorObj=void 0,t.errorObj={e:{}},t.tryCatch=function(e){return n=e,r}},(e,t,n)=>{"use strict";var r=n(1);function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}Object.defineProperty(t,"__esModule",{value:!0});const o=n(25),a=n(18),s=n(30),l=n(27),c=n(107),u=n(131),d=n(24),p=n(132),h=n(134),f=n(109),y=n(140),m=n(136),b=n(141),g=n(143),v=n(146),E=n(147),w=n(144),S=n(148),K=n(149),I=(0,f.Debug)("cluster"),k=new WeakSet;class j extends m.default{constructor(e,t={}){if(super(),this.slots=[],this._groupsIds={},this._groupsBySlot=Array(16384),this.isCluster=!0,this.retryAttempts=0,this.delayQueue=new E.default,this.offlineQueue=new S,this.isRefreshing=!1,this._refreshSlotsCacheCallbacks=[],this._autoPipelines=new Map,this._runningAutoPipelines=new Set,this._readyDelayedCallbacks=[],this.connectionEpoch=0,a.EventEmitter.call(this),this.startupNodes=e,this.options=(0,f.defaults)({},t,b.DEFAULT_CLUSTER_OPTIONS,this.options),1==this.options.shardedSubscribers&&(this.shardedSubscribers=new K.default(this)),this.options.redisOptions&&this.options.redisOptions.keyPrefix&&!this.options.keyPrefix&&(this.options.keyPrefix=this.options.redisOptions.keyPrefix),"function"!=typeof this.options.scaleReads&&-1===["all","master","slave"].indexOf(this.options.scaleReads))throw new Error('Invalid option scaleReads "'+this.options.scaleReads+'". Expected "all", "master", "slave" or a custom function');this.connectionPool=new v.default(this.options.redisOptions),this.connectionPool.on("-node",(e,t)=>{this.emit("-node",e)}),this.connectionPool.on("+node",e=>{this.emit("+node",e)}),this.connectionPool.on("drain",()=>{this.setStatus("close")}),this.connectionPool.on("nodeError",(e,t)=>{this.emit("node error",e,t)}),this.subscriber=new g.default(this.connectionPool,this),this.options.scripts&&Object.entries(this.options.scripts).forEach(([e,t])=>{this.defineCommand(e,t)}),this.options.lazyConnect?this.setStatus("wait"):this.connect().catch(e=>{I("connecting failed: %s",e)})}connect(){return new Promise((e,t)=>{if("connecting"===this.status||"connect"===this.status||"ready"===this.status)return void t(new Error("Redis is already connecting/connected"));const n=++this.connectionEpoch;this.setStatus("connecting"),this.resolveStartupNodeHostnames().then(r=>{if(this.connectionEpoch!==n)return I("discard connecting after resolving startup nodes because epoch not match: %d != %d",n,this.connectionEpoch),void t(new s.RedisError("Connection is discarded because a new connection is made"));if("connecting"!==this.status)return I("discard connecting after resolving startup nodes because the status changed to %s",this.status),void t(new s.RedisError("Connection is aborted"));this.connectionPool.reset(r);const i=()=>{this.setStatus("ready"),this.retryAttempts=0,this.executeOfflineCommands(),this.resetNodesRefreshInterval(),e()};let o;const a=()=>{this.invokeReadyDelayedCallbacks(void 0),this.removeListener("close",o),this.manuallyClosing=!1,this.setStatus("connect"),this.options.enableReadyCheck?this.readyCheck((e,t)=>{e||t?(I("Ready check failed (%s). Reconnecting...",e||t),"connect"===this.status&&this.disconnect(!0)):i()}):i()};o=()=>{const e=new Error("None of startup nodes is available");this.removeListener("refresh",a),this.invokeReadyDelayedCallbacks(e),t(e)},this.once("refresh",a),this.once("close",o),this.once("close",this.handleCloseEvent.bind(this)),this.refreshSlotsCache(e=>{e&&e.message===u.default.defaultMessage&&(d.default.prototype.silentEmit.call(this,"error",e),this.connectionPool.reset([]))}),this.subscriber.start(),this.options.shardedSubscribers&&this.shardedSubscribers.start()}).catch(e=>{this.setStatus("close"),this.handleCloseEvent(e),this.invokeReadyDelayedCallbacks(e),t(e)})})}disconnect(e=!1){const t=this.status;this.setStatus("disconnecting"),e||(this.manuallyClosing=!0),this.reconnectTimeout&&!e&&(clearTimeout(this.reconnectTimeout),this.reconnectTimeout=null,I("Canceled reconnecting attempts")),this.clearNodesRefreshInterval(),this.subscriber.stop(),this.options.shardedSubscribers&&this.shardedSubscribers.stop(),"wait"===t?(this.setStatus("close"),this.handleCloseEvent()):this.connectionPool.reset([])}quit(e){const t=this.status;if(this.setStatus("disconnecting"),this.manuallyClosing=!0,this.reconnectTimeout&&(clearTimeout(this.reconnectTimeout),this.reconnectTimeout=null),this.clearNodesRefreshInterval(),this.subscriber.stop(),this.options.shardedSubscribers&&this.shardedSubscribers.stop(),"wait"===t){const t=(0,l.default)(Promise.resolve("OK"),e);return setImmediate(function(){this.setStatus("close"),this.handleCloseEvent()}.bind(this)),t}return(0,l.default)(Promise.all(this.nodes().map(e=>e.quit().catch(e=>{if(e.message===f.CONNECTION_CLOSED_ERROR_MSG)return"OK";throw e}))).then(()=>"OK"),e)}duplicate(e=[],t={}){const n=e.length>0?e:this.startupNodes.slice(0),r=Object.assign({},this.options,t);return new j(n,r)}nodes(e="all"){if("all"!==e&&"master"!==e&&"slave"!==e)throw new Error('Invalid role "'+e+'". Expected "all", "master" or "slave"');return this.connectionPool.getNodes(e)}delayUntilReady(e){this._readyDelayedCallbacks.push(e)}get autoPipelineQueueSize(){let e=0;for(const t of this._autoPipelines.values())e+=t.length;return e}refreshSlotsCache(e){if(e&&this._refreshSlotsCacheCallbacks.push(e),this.isRefreshing)return;this.isRefreshing=!0;const t=this,n=e=>{this.isRefreshing=!1;for(const t of this._refreshSlotsCacheCallbacks)t(e);this._refreshSlotsCacheCallbacks=[]},r=(0,f.shuffle)(this.connectionPool.getNodes());let i=null;!function e(o){if(o===r.length){const e=new u.default(u.default.defaultMessage,i);return n(e)}const a=r[o],s=`${a.options.host}:${a.options.port}`;I("getting slot cache from %s",s),t.getInfoFromNode(a,function(r){switch(t.status){case"close":case"end":return n(new Error("Cluster is disconnected."));case"disconnecting":return n(new Error("Cluster is disconnecting."))}r?(t.emit("node error",r,s),i=r,e(o+1)):(t.emit("refresh"),n())})}(0)}sendCommand(e,t,n){if("wait"===this.status&&this.connect().catch(f.noop),"end"===this.status)return e.reject(new Error(f.CONNECTION_CLOSED_ERROR_MSG)),e.promise;let r=this.options.scaleReads;if("master"!==r){e.isReadOnly||(0,o.exists)(e.name)&&(0,o.hasFlag)(e.name,"readonly")||(r="master")}let i=n?n.slot:e.getSlot();const a={},l=this;if(!n&&!k.has(e)){k.add(e);const t=e.reject;e.reject=function(n){const r=u.bind(null,!0);l.handleError(n,a,{moved:function(t,n){I("command %s is moved to %s",e.name,n),i=Number(t),l.slots[t]?l.slots[t][0]=n:l.slots[t]=[n],l._groupsBySlot[t]=l._groupsIds[l.slots[t].join(";")],l.connectionPool.findOrCreate(l.natMapper(n)),u(),I("refreshing slot caches... (triggered by MOVED error)"),l.refreshSlotsCache()},ask:function(t,n){I("command %s is required to ask %s:%s",e.name,n);const r=l.natMapper(n);l.connectionPool.findOrCreate(r),u(!1,`${r.host}:${r.port}`)},tryagain:r,clusterDown:r,connectionClosed:r,maxRedirections:function(n){t.call(e,n)},defaults:function(){t.call(e,n)}})}}function u(o,a){if("end"===l.status)return void e.reject(new s.AbortError("Cluster is ended."));let u;if("ready"===l.status||"cluster"===e.name){if(n&&n.redis)u=n.redis;else if(c.default.checkFlag("ENTER_SUBSCRIBER_MODE",e.name)||c.default.checkFlag("EXIT_SUBSCRIBER_MODE",e.name)){if(1!=l.options.shardedSubscribers||"ssubscribe"!=e.name&&"sunsubscribe"!=e.name)u=l.subscriber.getInstance();else{const t=l.shardedSubscribers.getResponsibleSubscriber(i);let n=-1;"ssubscribe"==e.name&&(n=l.shardedSubscribers.addChannels(e.getKeys())),"sunsubscribe"==e.name&&(n=l.shardedSubscribers.removeChannels(e.getKeys())),-1!==n?u=t.getInstance():e.reject(new s.AbortError("Can't add or remove the given channels. Are they in the same slot?"))}if(!u)return void e.reject(new s.AbortError("No subscriber for the cluster"))}else{if(!o){if("number"==typeof i&&l.slots[i]){const t=l.slots[i];if("function"==typeof r){const n=t.map(function(e){return l.connectionPool.getInstanceByKey(e)});u=r(n,e),Array.isArray(u)&&(u=(0,f.sample)(u)),u||(u=n[0])}else{let e;e="all"===r?(0,f.sample)(t):"slave"===r&&t.length>1?(0,f.sample)(t,1):t[0],u=l.connectionPool.getInstanceByKey(e)}}a&&(u=l.connectionPool.getInstanceByKey(a),u.asking())}u||(u=("function"==typeof r?null:l.connectionPool.getSampleInstance(r))||l.connectionPool.getSampleInstance("all"))}n&&!n.redis&&(n.redis=u)}u?u.sendCommand(e,t):l.options.enableOfflineQueue?l.offlineQueue.push({command:e,stream:t,node:n}):e.reject(new Error("Cluster isn't ready and enableOfflineQueue options is false"))}return u(),e.promise}sscanStream(e,t){return this.createScanStream("sscan",{key:e,options:t})}sscanBufferStream(e,t){return this.createScanStream("sscanBuffer",{key:e,options:t})}hscanStream(e,t){return this.createScanStream("hscan",{key:e,options:t})}hscanBufferStream(e,t){return this.createScanStream("hscanBuffer",{key:e,options:t})}zscanStream(e,t){return this.createScanStream("zscan",{key:e,options:t})}zscanBufferStream(e,t){return this.createScanStream("zscanBuffer",{key:e,options:t})}handleError(e,t,n){if(void 0===t.value?t.value=this.options.maxRedirections:t.value-=1,t.value<=0)return void n.maxRedirections(new Error("Too many Cluster redirections. Last error: "+e));const r=e.message.split(" ");if("MOVED"===r[0]){const e=this.options.retryDelayOnMoved;e&&"number"==typeof e?this.delayQueue.push("moved",n.moved.bind(null,r[1],r[2]),{timeout:e}):n.moved(r[1],r[2])}else"ASK"===r[0]?n.ask(r[1],r[2]):"TRYAGAIN"===r[0]?this.delayQueue.push("tryagain",n.tryagain,{timeout:this.options.retryDelayOnTryAgain}):"CLUSTERDOWN"===r[0]&&this.options.retryDelayOnClusterDown>0?this.delayQueue.push("clusterdown",n.connectionClosed,{timeout:this.options.retryDelayOnClusterDown,callback:this.refreshSlotsCache.bind(this)}):e.message===f.CONNECTION_CLOSED_ERROR_MSG&&this.options.retryDelayOnFailover>0&&"ready"===this.status?this.delayQueue.push("failover",n.connectionClosed,{timeout:this.options.retryDelayOnFailover,callback:this.refreshSlotsCache.bind(this)}):n.defaults()}resetOfflineQueue(){this.offlineQueue=new S}clearNodesRefreshInterval(){this.slotsTimer&&(clearTimeout(this.slotsTimer),this.slotsTimer=null)}resetNodesRefreshInterval(){if(this.slotsTimer||!this.options.slotsRefreshInterval)return;const e=()=>{this.slotsTimer=setTimeout(()=>{I('refreshing slot caches... (triggered by "slotsRefreshInterval" option)'),this.refreshSlotsCache(()=>{e()})},this.options.slotsRefreshInterval)};e()}setStatus(e){I("status: %s -> %s",this.status||"[empty]",e),this.status=e,process.nextTick(()=>{this.emit(e)})}handleCloseEvent(e){let t;e&&I("closed because %s",e),this.manuallyClosing||"function"!=typeof this.options.clusterRetryStrategy||(t=this.options.clusterRetryStrategy.call(this,++this.retryAttempts,e)),"number"==typeof t?(this.setStatus("reconnecting"),this.reconnectTimeout=setTimeout(()=>{this.reconnectTimeout=null,I("Cluster is disconnected. Retrying after %dms",t),this.connect().catch(function(e){I("Got error %s when reconnecting. Ignoring...",e)})},t)):(this.setStatus("end"),this.flushQueue(new Error("None of startup nodes is available")))}flushQueue(e){let t;for(;t=this.offlineQueue.shift();)t.command.reject(e)}executeOfflineCommands(){if(this.offlineQueue.length){I("send %d commands in offline queue",this.offlineQueue.length);const e=this.offlineQueue;let t;for(this.resetOfflineQueue();t=e.shift();)this.sendCommand(t.command,t.stream,t.node)}}natMapper(e){const t="string"==typeof e?e:`${e.host}:${e.port}`;let n=null;return this.options.natMap&&"function"==typeof this.options.natMap?n=this.options.natMap(t):this.options.natMap&&"object"==typeof this.options.natMap&&(n=this.options.natMap[t]),n?(I("NAT mapping %s -> %O",t,n),Object.assign({},n)):"string"==typeof e?(0,w.nodeKeyToRedisOptions)(e):e}getInfoFromNode(e,t){if(!e)return t(new Error("Node is disconnected"));const n=e.duplicate({enableOfflineQueue:!0,enableReadyCheck:!1,retryStrategy:null,connectionName:(0,w.getConnectionName)("refresher",this.options.redisOptions&&this.options.redisOptions.connectionName)});n.on("error",f.noop),n.cluster("SLOTS",(0,f.timeout)((e,r)=>{if(n.disconnect(),e)return I("error encountered running CLUSTER.SLOTS: %s",e),t(e);if("disconnecting"===this.status||"close"===this.status||"end"===this.status)return I("ignore CLUSTER.SLOTS results (count: %d) since cluster status is %s",r.length,this.status),void t();const i=[];I("cluster slots result count: %d",r.length);for(let e=0;e<r.length;++e){const t=r[e],n=t[0],o=t[1],a=[];for(let e=2;e<t.length;e++){if(!t[e][0])continue;const n=this.natMapper({host:t[e][0],port:t[e][1]});n.readOnly=2!==e,i.push(n),a.push(n.host+":"+n.port)}I("cluster slots result [%d]: slots %d~%d served by %s",e,n,o,a);for(let e=n;e<=o;e++)this.slots[e]=a}this._groupsIds=Object.create(null);let o=0;for(let e=0;e<16384;e++){const t=(this.slots[e]||[]).join(";");t.length?(this._groupsIds[t]||(this._groupsIds[t]=++o),this._groupsBySlot[e]=this._groupsIds[t]):this._groupsBySlot[e]=void 0}this.connectionPool.reset(i),t()},this.options.slotsRefreshTimeout))}invokeReadyDelayedCallbacks(e){for(const t of this._readyDelayedCallbacks)process.nextTick(t,e);this._readyDelayedCallbacks=[]}readyCheck(e){this.cluster("INFO",(t,n)=>{if(t)return e(t);if("string"!=typeof n)return e();let r;const i=n.split("\r\n");for(let e=0;e<i.length;++e){const t=i[e].split(":");if("cluster_state"===t[0]){r=t[1];break}}"fail"===r?(I("cluster state not ok (%s)",r),e(null,r)):e()})}resolveSrv(e){return new Promise((t,n)=>{this.options.resolveSrv(e,(e,r)=>{if(e)return n(e);const i=this,o=(0,w.groupSrvRecords)(r),a=Object.keys(o).sort((e,t)=>parseInt(e)-parseInt(t));!function e(r){if(!a.length)return n(r);const s=a[0],l=o[s],c=(0,w.weightSrvRecords)(l);l.records.length||a.shift(),i.dnsLookup(c.name).then(e=>t({host:e,port:c.port}),e)}()})})}dnsLookup(e){return new Promise((t,n)=>{this.options.dnsLookup(e,(r,i)=>{r?(I("failed to resolve hostname %s to IP: %s",e,r.message),n(r)):(I("resolved hostname %s to IP %s",e,i),t(i))})})}async resolveStartupNodeHostnames(){if(!Array.isArray(this.startupNodes)||0===this.startupNodes.length)throw new Error("`startupNodes` should contain at least one node.");const e=(0,w.normalizeNodeOptions)(this.startupNodes),t=(0,w.getUniqueHostnamesFromOptions)(e);if(0===t.length)return e;const n=await Promise.all(t.map((this.options.useSRVRecords?this.resolveSrv:this.dnsLookup).bind(this))),r=(0,f.zipMap)(t,n);return e.map(e=>{const t=r.get(e.host);return t?this.options.useSRVRecords?Object.assign({},e,t):Object.assign({},e,{host:t}):e})}createScanStream(e,{key:t,options:n={}}){return new p.default(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach(function(t){r(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}({objectMode:!0,key:t,redis:this,command:e},n))}}(0,y.default)(j,a.EventEmitter),(0,h.addTransactionSupport)(j.prototype),t.default=j},(e,t,n)=>{"use strict";const r=process.version.charCodeAt(1)<55&&46===process.version.charCodeAt(2)?n(31):n(106);e.exports=r},(e,t,n)=>{"use strict";const r=n(32),i=n(34);function o(e){Object.defineProperty(this,"message",{value:e||"",configurable:!0,writable:!0}),Error.captureStackTrace(this,this.constructor)}function a(e,t,n){r(t),r.strictEqual(typeof n,"number"),Object.defineProperty(this,"message",{value:e||"",configurable:!0,writable:!0});const i=Error.stackTraceLimit;Error.stackTraceLimit=2,Error.captureStackTrace(this,this.constructor),Error.stackTraceLimit=i,this.offset=n,this.buffer=t}function s(e){Object.defineProperty(this,"message",{value:e||"",configurable:!0,writable:!0});const t=Error.stackTraceLimit;Error.stackTraceLimit=2,Error.captureStackTrace(this,this.constructor),Error.stackTraceLimit=t}function l(e){Object.defineProperty(this,"message",{value:e||"",configurable:!0,writable:!0}),Error.captureStackTrace(this,this.constructor)}function c(e){Object.defineProperty(this,"message",{value:e||"",configurable:!0,writable:!0}),Error.captureStackTrace(this,this.constructor)}i.inherits(o,Error),Object.defineProperty(o.prototype,"name",{value:"RedisError",configurable:!0,writable:!0}),i.inherits(a,o),Object.defineProperty(a.prototype,"name",{value:"ParserError",configurable:!0,writable:!0}),i.inherits(s,o),Object.defineProperty(s.prototype,"name",{value:"ReplyError",configurable:!0,writable:!0}),i.inherits(l,o),Object.defineProperty(l.prototype,"name",{value:"AbortError",configurable:!0,writable:!0}),i.inherits(c,l),Object.defineProperty(c.prototype,"name",{value:"InterruptError",configurable:!0,writable:!0}),e.exports={RedisError:o,ParserError:a,ReplyError:s,AbortError:l,InterruptError:c}},(e,t,n)=>{"use strict";function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,a(r.key),r)}}function o(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function a(e){var t=function(e,t){if("object"!==r(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,t||"default");if("object"!==r(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===r(t)?t:String(t)}var s,l,c=n(33).codes,u=c.ERR_AMBIGUOUS_ARGUMENT,d=c.ERR_INVALID_ARG_TYPE,p=c.ERR_INVALID_ARG_VALUE,h=c.ERR_INVALID_RETURN_VALUE,f=c.ERR_MISSING_ARGS,y=n(89),m=n(34).inspect,b=n(34).types,g=b.isPromise,v=b.isRegExp,E=n(90)(),w=n(95)(),S=n(97)("RegExp.prototype.test");new Map;function K(){var e=n(98);s=e.isDeepEqual,l=e.isDeepStrictEqual}var I=!1,k=e.exports=O,j={};function x(e){if(e.message instanceof Error)throw e.message;throw new y(e)}function A(e,t,n,r){if(!n){var i=!1;if(0===t)i=!0,r="No value argument passed to `assert.ok()`";else if(r instanceof Error)throw r;var o=new y({actual:n,expected:!0,message:r,operator:"==",stackStartFn:e});throw o.generatedMessage=i,o}}function O(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];A.apply(void 0,[O,t.length].concat(t))}k.fail=function e(t,n,r,i,o){var a,s=arguments.length;if(0===s)a="Failed";else if(1===s)r=t,t=void 0;else{if(!1===I)I=!0,(process.emitWarning?process.emitWarning:console.warn.bind(console))("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.","DeprecationWarning","DEP0094");2===s&&(i="!=")}if(r instanceof Error)throw r;var l={actual:t,expected:n,operator:void 0===i?"fail":i,stackStartFn:o||e};void 0!==r&&(l.message=r);var c=new y(l);throw a&&(c.message=a,c.generatedMessage=!0),c},k.AssertionError=y,k.ok=O,k.equal=function e(t,n,r){if(arguments.length<2)throw new f("actual","expected");t!=n&&x({actual:t,expected:n,message:r,operator:"==",stackStartFn:e})},k.notEqual=function e(t,n,r){if(arguments.length<2)throw new f("actual","expected");t==n&&x({actual:t,expected:n,message:r,operator:"!=",stackStartFn:e})},k.deepEqual=function e(t,n,r){if(arguments.length<2)throw new f("actual","expected");void 0===s&&K(),s(t,n)||x({actual:t,expected:n,message:r,operator:"deepEqual",stackStartFn:e})},k.notDeepEqual=function e(t,n,r){if(arguments.length<2)throw new f("actual","expected");void 0===s&&K(),s(t,n)&&x({actual:t,expected:n,message:r,operator:"notDeepEqual",stackStartFn:e})},k.deepStrictEqual=function e(t,n,r){if(arguments.length<2)throw new f("actual","expected");void 0===s&&K(),l(t,n)||x({actual:t,expected:n,message:r,operator:"deepStrictEqual",stackStartFn:e})},k.notDeepStrictEqual=function e(t,n,r){if(arguments.length<2)throw new f("actual","expected");void 0===s&&K();l(t,n)&&x({actual:t,expected:n,message:r,operator:"notDeepStrictEqual",stackStartFn:e})},k.strictEqual=function e(t,n,r){if(arguments.length<2)throw new f("actual","expected");w(t,n)||x({actual:t,expected:n,message:r,operator:"strictEqual",stackStartFn:e})},k.notStrictEqual=function e(t,n,r){if(arguments.length<2)throw new f("actual","expected");w(t,n)&&x({actual:t,expected:n,message:r,operator:"notStrictEqual",stackStartFn:e})};var T=o(function e(t,n,r){var i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),n.forEach(function(e){e in t&&(void 0!==r&&"string"==typeof r[e]&&v(t[e])&&S(t[e],r[e])?i[e]=r[e]:i[e]=t[e])})});function R(e,t,n,i){if("function"!=typeof t){if(v(t))return S(t,e);if(2===arguments.length)throw new d("expected",["Function","RegExp"],t);if("object"!==r(e)||null===e){var o=new y({actual:e,expected:t,message:n,operator:"deepStrictEqual",stackStartFn:i});throw o.operator=i.name,o}var a=Object.keys(t);if(t instanceof Error)a.push("name","message");else if(0===a.length)throw new p("error",t,"may not be an empty object");return void 0===s&&K(),a.forEach(function(r){"string"==typeof e[r]&&v(t[r])&&S(t[r],e[r])||function(e,t,n,r,i,o){if(!(n in e)||!l(e[n],t[n])){if(!r){var a=new T(e,i),s=new T(t,i,e),c=new y({actual:a,expected:s,operator:"deepStrictEqual",stackStartFn:o});throw c.actual=e,c.expected=t,c.operator=o.name,c}x({actual:e,expected:t,message:r,operator:o.name,stackStartFn:o})}}(e,t,r,n,a,i)}),!0}return void 0!==t.prototype&&e instanceof t||!Error.isPrototypeOf(t)&&!0===t.call({},e)}function D(e){if("function"!=typeof e)throw new d("fn","Function",e);try{e()}catch(e){return e}return j}function C(e){return g(e)||null!==e&&"object"===r(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function P(e){return Promise.resolve().then(function(){var t;if("function"==typeof e){if(!C(t=e()))throw new h("instance of Promise","promiseFn",t)}else{if(!C(e))throw new d("promiseFn",["Function","Promise"],e);t=e}return Promise.resolve().then(function(){return t}).then(function(){return j}).catch(function(e){return e})})}function M(e,t,n,i){if("string"==typeof n){if(4===arguments.length)throw new d("error",["Object","Error","Function","RegExp"],n);if("object"===r(t)&&null!==t){if(t.message===n)throw new u("error/message",'The error message "'.concat(t.message,'" is identical to the message.'))}else if(t===n)throw new u("error/message",'The error "'.concat(t,'" is identical to the message.'));i=n,n=void 0}else if(null!=n&&"object"!==r(n)&&"function"!=typeof n)throw new d("error",["Object","Error","Function","RegExp"],n);if(t===j){var o="";n&&n.name&&(o+=" (".concat(n.name,")")),o+=i?": ".concat(i):".";var a="rejects"===e.name?"rejection":"exception";x({actual:void 0,expected:n,operator:e.name,message:"Missing expected ".concat(a).concat(o),stackStartFn:e})}if(n&&!R(t,n,i,e))throw t}function N(e,t,n,r){if(t!==j){if("string"==typeof n&&(r=n,n=void 0),!n||R(t,n)){var i=r?": ".concat(r):".",o="doesNotReject"===e.name?"rejection":"exception";x({actual:t,expected:n,operator:e.name,message:"Got unwanted ".concat(o).concat(i,"\n")+'Actual message: "'.concat(t&&t.message,'"'),stackStartFn:e})}throw t}}function _(e,t,n,i,o){if(!v(t))throw new d("regexp","RegExp",t);var a="match"===o;if("string"!=typeof e||S(t,e)!==a){if(n instanceof Error)throw n;var s=!n;n=n||("string"!=typeof e?'The "string" argument must be of type string. Received type '+"".concat(r(e)," (").concat(m(e),")"):(a?"The input did not match the regular expression ":"The input was expected to not match the regular expression ")+"".concat(m(t),". Input:\n\n").concat(m(e),"\n"));var l=new y({actual:e,expected:t,message:n,operator:o,stackStartFn:i});throw l.generatedMessage=s,l}}function L(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];A.apply(void 0,[L,t.length].concat(t))}k.throws=function e(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];M.apply(void 0,[e,D(t)].concat(r))},k.rejects=function e(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];return P(t).then(function(t){return M.apply(void 0,[e,t].concat(r))})},k.doesNotThrow=function e(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];N.apply(void 0,[e,D(t)].concat(r))},k.doesNotReject=function e(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];return P(t).then(function(t){return N.apply(void 0,[e,t].concat(r))})},k.ifError=function e(t){if(null!=t){var n="ifError got unwanted exception: ";"object"===r(t)&&"string"==typeof t.message?0===t.message.length&&t.constructor?n+=t.constructor.name:n+=t.message:n+=m(t);var i=new y({actual:t,expected:null,operator:"ifError",message:n,stackStartFn:e}),o=t.stack;if("string"==typeof o){var a=o.split("\n");a.shift();for(var s=i.stack.split("\n"),l=0;l<a.length;l++){var c=s.indexOf(a[l]);if(-1!==c){s=s.slice(0,c);break}}i.stack="".concat(s.join("\n"),"\n").concat(a.join("\n"))}throw i}},k.match=function e(t,n,r){_(t,n,r,e,"match")},k.doesNotMatch=function e(t,n,r){_(t,n,r,e,"doesNotMatch")},k.strict=E(L,k,{equal:k.strictEqual,deepEqual:k.deepStrictEqual,notEqual:k.notStrictEqual,notDeepEqual:k.notDeepStrictEqual}),k.strict.strict=k.strict},(e,t,n)=>{"use strict";function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,o(r.key),r)}}function o(e){var t=function(e,t){if("object"!==r(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,t||"default");if("object"!==r(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===r(t)?t:String(t)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function s(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}();return function(){var n,i=l(e);if(t){var o=l(this).constructor;n=Reflect.construct(i,arguments,o)}else n=i.apply(this,arguments);return function(e,t){if(t&&("object"===r(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,n)}}function l(e){return l=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},l(e)}var c,u,d={};function p(e,t,n){n||(n=Error);var r=function(n){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(u,n);var r,o,l,c=s(u);function u(n,r,i){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),o=c.call(this,function(e,n,r){return"string"==typeof t?t:t(e,n,r)}(n,r,i)),o.code=e,o}return r=u,o&&i(r.prototype,o),l&&i(r,l),Object.defineProperty(r,"prototype",{writable:!1}),r}(n);d[e]=r}function h(e,t){if(Array.isArray(e)){var n=e.length;return e=e.map(function(e){return String(e)}),n>2?"one of ".concat(t," ").concat(e.slice(0,n-1).join(", "),", or ")+e[n-1]:2===n?"one of ".concat(t," ").concat(e[0]," or ").concat(e[1]):"of ".concat(t," ").concat(e[0])}return"of ".concat(t," ").concat(String(e))}p("ERR_AMBIGUOUS_ARGUMENT",'The "%s" argument is ambiguous. %s',TypeError),p("ERR_INVALID_ARG_TYPE",function(e,t,i){var o,a,s,l;if(void 0===c&&(c=n(32)),c("string"==typeof e,"'name' must be a string"),"string"==typeof t&&(a="not ",t.substr(!s||s<0?0:+s,a.length)===a)?(o="must not be",t=t.replace(/^not /,"")):o="must be",function(e,t,n){return(void 0===n||n>e.length)&&(n=e.length),e.substring(n-t.length,n)===t}(e," argument"))l="The ".concat(e," ").concat(o," ").concat(h(t,"type"));else{var u=function(e,t,n){return"number"!=typeof n&&(n=0),!(n+t.length>e.length)&&-1!==e.indexOf(t,n)}(e,".")?"property":"argument";l='The "'.concat(e,'" ').concat(u," ").concat(o," ").concat(h(t,"type"))}return l+=". Received type ".concat(r(i))},TypeError),p("ERR_INVALID_ARG_VALUE",function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"is invalid";void 0===u&&(u=n(34));var i=u.inspect(t);return i.length>128&&(i="".concat(i.slice(0,128),"...")),"The argument '".concat(e,"' ").concat(r,". Received ").concat(i)},TypeError,RangeError),p("ERR_INVALID_RETURN_VALUE",function(e,t,n){var i;return i=n&&n.constructor&&n.constructor.name?"instance of ".concat(n.constructor.name):"type ".concat(r(n)),"Expected ".concat(e,' to be returned from the "').concat(t,'"')+" function but got ".concat(i,".")},TypeError),p("ERR_MISSING_ARGS",function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];void 0===c&&(c=n(32)),c(t.length>0,"At least one arg needs to be specified");var i="The ",o=t.length;switch(t=t.map(function(e){return'"'.concat(e,'"')}),o){case 1:i+="".concat(t[0]," argument");break;case 2:i+="".concat(t[0]," and ").concat(t[1]," arguments");break;default:i+=t.slice(0,o-1).join(", "),i+=", and ".concat(t[o-1]," arguments")}return"".concat(i," must be specified")},TypeError),e.exports.codes=d},(e,t,n)=>{var r=Object.getOwnPropertyDescriptors||function(e){for(var t=Object.keys(e),n={},r=0;r<t.length;r++)n[t[r]]=Object.getOwnPropertyDescriptor(e,t[r]);return n},i=/%[sdj%]/g;t.format=function(e){if(!g(e)){for(var t=[],n=0;n<arguments.length;n++)t.push(l(arguments[n]));return t.join(" ")}n=1;for(var r=arguments,o=r.length,a=String(e).replace(i,function(e){if("%%"===e)return"%";if(n>=o)return e;switch(e){case"%s":return String(r[n++]);case"%d":return Number(r[n++]);case"%j":try{return JSON.stringify(r[n++])}catch(e){return"[Circular]"}default:return e}}),s=r[n];n<o;s=r[++n])m(s)||!w(s)?a+=" "+s:a+=" "+l(s);return a},t.deprecate=function(e,n){if("undefined"!=typeof process&&!0===process.noDeprecation)return e;if("undefined"==typeof process)return function(){return t.deprecate(e,n).apply(this,arguments)};var r=!1;return function(){if(!r){if(process.throwDeprecation)throw new Error(n);process.traceDeprecation?console.trace(n):console.error(n),r=!0}return e.apply(this,arguments)}};var o={},a=/^$/;if(process.env.NODE_DEBUG){var s=process.env.NODE_DEBUG;s=s.replace(/[|\\{}()[\]^$+?.]/g,"\\$&").replace(/\*/g,".*").replace(/,/g,"$|^").toUpperCase(),a=new RegExp("^"+s+"$","i")}function l(e,n){var r={seen:[],stylize:u};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),y(n)?r.showHidden=n:n&&t._extend(r,n),v(r.showHidden)&&(r.showHidden=!1),v(r.depth)&&(r.depth=2),v(r.colors)&&(r.colors=!1),v(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=c),d(r,e,r.depth)}function c(e,t){var n=l.styles[t];return n?"["+l.colors[n][0]+"m"+e+"["+l.colors[n][1]+"m":e}function u(e,t){return e}function d(e,n,r){if(e.customInspect&&n&&I(n.inspect)&&n.inspect!==t.inspect&&(!n.constructor||n.constructor.prototype!==n)){var i=n.inspect(r,e);return g(i)||(i=d(e,i,r)),i}var o=function(e,t){if(v(t))return e.stylize("undefined","undefined");if(g(t)){var n="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(n,"string")}if(b(t))return e.stylize(""+t,"number");if(y(t))return e.stylize(""+t,"boolean");if(m(t))return e.stylize("null","null")}(e,n);if(o)return o;var a=Object.keys(n),s=function(e){var t={};return e.forEach(function(e,n){t[e]=!0}),t}(a);if(e.showHidden&&(a=Object.getOwnPropertyNames(n)),K(n)&&(a.indexOf("message")>=0||a.indexOf("description")>=0))return p(n);if(0===a.length){if(I(n)){var l=n.name?": "+n.name:"";return e.stylize("[Function"+l+"]","special")}if(E(n))return e.stylize(RegExp.prototype.toString.call(n),"regexp");if(S(n))return e.stylize(Date.prototype.toString.call(n),"date");if(K(n))return p(n)}var c,u="",w=!1,k=["{","}"];(f(n)&&(w=!0,k=["[","]"]),I(n))&&(u=" [Function"+(n.name?": "+n.name:"")+"]");return E(n)&&(u=" "+RegExp.prototype.toString.call(n)),S(n)&&(u=" "+Date.prototype.toUTCString.call(n)),K(n)&&(u=" "+p(n)),0!==a.length||w&&0!=n.length?r<0?E(n)?e.stylize(RegExp.prototype.toString.call(n),"regexp"):e.stylize("[Object]","special"):(e.seen.push(n),c=w?function(e,t,n,r,i){for(var o=[],a=0,s=t.length;a<s;++a)A(t,String(a))?o.push(h(e,t,n,r,String(a),!0)):o.push("");return i.forEach(function(i){i.match(/^\d+$/)||o.push(h(e,t,n,r,i,!0))}),o}(e,n,r,s,a):a.map(function(t){return h(e,n,r,s,t,w)}),e.seen.pop(),function(e,t,n){var r=e.reduce(function(e,t){return t.indexOf("\n")>=0&&0,e+t.replace(/\u001b\[\d\d?m/g,"").length+1},0);if(r>60)return n[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+n[1];return n[0]+t+" "+e.join(", ")+" "+n[1]}(c,u,k)):k[0]+u+k[1]}function p(e){return"["+Error.prototype.toString.call(e)+"]"}function h(e,t,n,r,i,o){var a,s,l;if((l=Object.getOwnPropertyDescriptor(t,i)||{value:t[i]}).get?s=l.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):l.set&&(s=e.stylize("[Setter]","special")),A(r,i)||(a="["+i+"]"),s||(e.seen.indexOf(l.value)<0?(s=m(n)?d(e,l.value,null):d(e,l.value,n-1)).indexOf("\n")>-1&&(s=o?s.split("\n").map(function(e){return"  "+e}).join("\n").slice(2):"\n"+s.split("\n").map(function(e){return"   "+e}).join("\n")):s=e.stylize("[Circular]","special")),v(a)){if(o&&i.match(/^\d+$/))return s;(a=JSON.stringify(""+i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(a=a.slice(1,-1),a=e.stylize(a,"name")):(a=a.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),a=e.stylize(a,"string"))}return a+": "+s}function f(e){return Array.isArray(e)}function y(e){return"boolean"==typeof e}function m(e){return null===e}function b(e){return"number"==typeof e}function g(e){return"string"==typeof e}function v(e){return void 0===e}function E(e){return w(e)&&"[object RegExp]"===k(e)}function w(e){return"object"==typeof e&&null!==e}function S(e){return w(e)&&"[object Date]"===k(e)}function K(e){return w(e)&&("[object Error]"===k(e)||e instanceof Error)}function I(e){return"function"==typeof e}function k(e){return Object.prototype.toString.call(e)}function j(e){return e<10?"0"+e.toString(10):e.toString(10)}t.debuglog=function(e){if(e=e.toUpperCase(),!o[e])if(a.test(e)){var n=process.pid;o[e]=function(){var r=t.format.apply(t,arguments);console.error("%s %d: %s",e,n,r)}}else o[e]=function(){};return o[e]},t.inspect=l,l.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},l.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},t.types=n(35),t.isArray=f,t.isBoolean=y,t.isNull=m,t.isNullOrUndefined=function(e){return null==e},t.isNumber=b,t.isString=g,t.isSymbol=function(e){return"symbol"==typeof e},t.isUndefined=v,t.isRegExp=E,t.types.isRegExp=E,t.isObject=w,t.isDate=S,t.types.isDate=S,t.isError=K,t.types.isNativeError=K,t.isFunction=I,t.isPrimitive=function(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e},t.isBuffer=n(87);var x=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function A(e,t){return Object.prototype.hasOwnProperty.call(e,t)}t.log=function(){var e,n;console.log("%s - %s",(e=new Date,n=[j(e.getHours()),j(e.getMinutes()),j(e.getSeconds())].join(":"),[e.getDate(),x[e.getMonth()],n].join(" ")),t.format.apply(t,arguments))},t.inherits=n(88),t._extend=function(e,t){if(!t||!w(t))return e;for(var n=Object.keys(t),r=n.length;r--;)e[n[r]]=t[n[r]];return e};var O="undefined"!=typeof Symbol?Symbol("util.promisify.custom"):void 0;function T(e,t){if(!e){var n=new Error("Promise was rejected with a falsy value");n.reason=e,e=n}return t(e)}t.promisify=function(e){if("function"!=typeof e)throw new TypeError('The "original" argument must be of type Function');if(O&&e[O]){var t;if("function"!=typeof(t=e[O]))throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(t,O,{value:t,enumerable:!1,writable:!1,configurable:!0}),t}function t(){for(var t,n,r=new Promise(function(e,r){t=e,n=r}),i=[],o=0;o<arguments.length;o++)i.push(arguments[o]);i.push(function(e,r){e?n(e):t(r)});try{e.apply(this,i)}catch(e){n(e)}return r}return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),O&&Object.defineProperty(t,O,{value:t,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(t,r(e))},t.promisify.custom=O,t.callbackify=function(e){if("function"!=typeof e)throw new TypeError('The "original" argument must be of type Function');function t(){for(var t=[],n=0;n<arguments.length;n++)t.push(arguments[n]);var r=t.pop();if("function"!=typeof r)throw new TypeError("The last argument must be of type Function");var i=this,o=function(){return r.apply(i,arguments)};e.apply(this,t).then(function(e){process.nextTick(o.bind(null,null,e))},function(e){process.nextTick(T.bind(null,e,o))})}return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),Object.defineProperties(t,r(e)),t}},(e,t,n)=>{"use strict";var r=n(36),i=n(73),o=n(76),a=n(86);function s(e){return e.call.bind(e)}var l="undefined"!=typeof BigInt,c="undefined"!=typeof Symbol,u=s(Object.prototype.toString),d=s(Number.prototype.valueOf),p=s(String.prototype.valueOf),h=s(Boolean.prototype.valueOf);if(l)var f=s(BigInt.prototype.valueOf);if(c)var y=s(Symbol.prototype.valueOf);function m(e,t){if("object"!=typeof e)return!1;try{return t(e),!0}catch(e){return!1}}function b(e){return"[object Map]"===u(e)}function g(e){return"[object Set]"===u(e)}function v(e){return"[object WeakMap]"===u(e)}function E(e){return"[object WeakSet]"===u(e)}function w(e){return"[object ArrayBuffer]"===u(e)}function S(e){return"undefined"!=typeof ArrayBuffer&&(w.working?w(e):e instanceof ArrayBuffer)}function K(e){return"[object DataView]"===u(e)}function I(e){return"undefined"!=typeof DataView&&(K.working?K(e):e instanceof DataView)}t.isArgumentsObject=r,t.isGeneratorFunction=i,t.isTypedArray=a,t.isPromise=function(e){return"undefined"!=typeof Promise&&e instanceof Promise||null!==e&&"object"==typeof e&&"function"==typeof e.then&&"function"==typeof e.catch},t.isArrayBufferView=function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):a(e)||I(e)},t.isUint8Array=function(e){return"Uint8Array"===o(e)},t.isUint8ClampedArray=function(e){return"Uint8ClampedArray"===o(e)},t.isUint16Array=function(e){return"Uint16Array"===o(e)},t.isUint32Array=function(e){return"Uint32Array"===o(e)},t.isInt8Array=function(e){return"Int8Array"===o(e)},t.isInt16Array=function(e){return"Int16Array"===o(e)},t.isInt32Array=function(e){return"Int32Array"===o(e)},t.isFloat32Array=function(e){return"Float32Array"===o(e)},t.isFloat64Array=function(e){return"Float64Array"===o(e)},t.isBigInt64Array=function(e){return"BigInt64Array"===o(e)},t.isBigUint64Array=function(e){return"BigUint64Array"===o(e)},b.working="undefined"!=typeof Map&&b(new Map),t.isMap=function(e){return"undefined"!=typeof Map&&(b.working?b(e):e instanceof Map)},g.working="undefined"!=typeof Set&&g(new Set),t.isSet=function(e){return"undefined"!=typeof Set&&(g.working?g(e):e instanceof Set)},v.working="undefined"!=typeof WeakMap&&v(new WeakMap),t.isWeakMap=function(e){return"undefined"!=typeof WeakMap&&(v.working?v(e):e instanceof WeakMap)},E.working="undefined"!=typeof WeakSet&&E(new WeakSet),t.isWeakSet=function(e){return E(e)},w.working="undefined"!=typeof ArrayBuffer&&w(new ArrayBuffer),t.isArrayBuffer=S,K.working="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView&&K(new DataView(new ArrayBuffer(1),0,1)),t.isDataView=I;var k="undefined"!=typeof SharedArrayBuffer?SharedArrayBuffer:void 0;function j(e){return"[object SharedArrayBuffer]"===u(e)}function x(e){return void 0!==k&&(void 0===j.working&&(j.working=j(new k)),j.working?j(e):e instanceof k)}function A(e){return m(e,d)}function O(e){return m(e,p)}function T(e){return m(e,h)}function R(e){return l&&m(e,f)}function D(e){return c&&m(e,y)}t.isSharedArrayBuffer=x,t.isAsyncFunction=function(e){return"[object AsyncFunction]"===u(e)},t.isMapIterator=function(e){return"[object Map Iterator]"===u(e)},t.isSetIterator=function(e){return"[object Set Iterator]"===u(e)},t.isGeneratorObject=function(e){return"[object Generator]"===u(e)},t.isWebAssemblyCompiledModule=function(e){return"[object WebAssembly.Module]"===u(e)},t.isNumberObject=A,t.isStringObject=O,t.isBooleanObject=T,t.isBigIntObject=R,t.isSymbolObject=D,t.isBoxedPrimitive=function(e){return A(e)||O(e)||T(e)||R(e)||D(e)},t.isAnyArrayBuffer=function(e){return"undefined"!=typeof Uint8Array&&(S(e)||x(e))},["isProxy","isExternal","isModuleNamespaceObject"].forEach(function(e){Object.defineProperty(t,e,{enumerable:!1,value:function(){throw new Error(e+" is not supported in userland")}})})},(e,t,n)=>{"use strict";var r=n(37)(),i=n(39)("Object.prototype.toString"),o=function(e){return!(r&&e&&"object"==typeof e&&Symbol.toStringTag in e)&&"[object Arguments]"===i(e)},a=function(e){return!!o(e)||null!==e&&"object"==typeof e&&"length"in e&&"number"==typeof e.length&&e.length>=0&&"[object Array]"!==i(e)&&"callee"in e&&"[object Function]"===i(e.callee)},s=function(){return o(arguments)}();o.isLegacyArguments=a,e.exports=s?o:a},(e,t,n)=>{"use strict";var r=n(38);e.exports=function(){return r()&&!!Symbol.toStringTag}},e=>{"use strict";e.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var e={},t=Symbol("test"),n=Object(t);if("string"==typeof t)return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;if("[object Symbol]"!==Object.prototype.toString.call(n))return!1;for(var r in e[t]=42,e)return!1;if("function"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var i=Object.getOwnPropertySymbols(e);if(1!==i.length||i[0]!==t)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,t))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var o=Object.getOwnPropertyDescriptor(e,t);if(42!==o.value||!0!==o.enumerable)return!1}return!0}},(e,t,n)=>{"use strict";var r=n(40),i=n(65),o=i([r("%String.prototype.indexOf%")]);e.exports=function(e,t){var n=r(e,!!t);return"function"==typeof n&&o(e,".prototype.")>-1?i([n]):n}},(e,t,n)=>{"use strict";var r,i=n(41),o=n(42),a=n(43),s=n(44),l=n(45),c=n(46),u=n(47),d=n(48),p=n(49),h=n(50),f=n(51),y=n(52),m=n(53),b=n(54),g=n(55),v=Function,E=function(e){try{return v('"use strict"; return ('+e+").constructor;")()}catch(e){}},w=n(57),S=n(59),K=function(){throw new u},I=w?function(){try{return K}catch(e){try{return w(arguments,"callee").get}catch(e){return K}}}():K,k=n(60)(),j=n(61),x=n(63),A=n(62),O=n(70),T=n(68),R={},D="undefined"!=typeof Uint8Array&&j?j(Uint8Array):r,C={__proto__:null,"%AggregateError%":"undefined"==typeof AggregateError?r:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?r:ArrayBuffer,"%ArrayIteratorPrototype%":k&&j?j([][Symbol.iterator]()):r,"%AsyncFromSyncIteratorPrototype%":r,"%AsyncFunction%":R,"%AsyncGenerator%":R,"%AsyncGeneratorFunction%":R,"%AsyncIteratorPrototype%":R,"%Atomics%":"undefined"==typeof Atomics?r:Atomics,"%BigInt%":"undefined"==typeof BigInt?r:BigInt,"%BigInt64Array%":"undefined"==typeof BigInt64Array?r:BigInt64Array,"%BigUint64Array%":"undefined"==typeof BigUint64Array?r:BigUint64Array,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?r:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":o,"%eval%":eval,"%EvalError%":a,"%Float16Array%":"undefined"==typeof Float16Array?r:Float16Array,"%Float32Array%":"undefined"==typeof Float32Array?r:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?r:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?r:FinalizationRegistry,"%Function%":v,"%GeneratorFunction%":R,"%Int8Array%":"undefined"==typeof Int8Array?r:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?r:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?r:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":k&&j?j(j([][Symbol.iterator]())):r,"%JSON%":"object"==typeof JSON?JSON:r,"%Map%":"undefined"==typeof Map?r:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&k&&j?j((new Map)[Symbol.iterator]()):r,"%Math%":Math,"%Number%":Number,"%Object%":i,"%Object.getOwnPropertyDescriptor%":w,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?r:Promise,"%Proxy%":"undefined"==typeof Proxy?r:Proxy,"%RangeError%":s,"%ReferenceError%":l,"%Reflect%":"undefined"==typeof Reflect?r:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?r:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&k&&j?j((new Set)[Symbol.iterator]()):r,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?r:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":k&&j?j(""[Symbol.iterator]()):r,"%Symbol%":k?Symbol:r,"%SyntaxError%":c,"%ThrowTypeError%":I,"%TypedArray%":D,"%TypeError%":u,"%Uint8Array%":"undefined"==typeof Uint8Array?r:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?r:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?r:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?r:Uint32Array,"%URIError%":d,"%WeakMap%":"undefined"==typeof WeakMap?r:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?r:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?r:WeakSet,"%Function.prototype.call%":T,"%Function.prototype.apply%":O,"%Object.defineProperty%":S,"%Object.getPrototypeOf%":x,"%Math.abs%":p,"%Math.floor%":h,"%Math.max%":f,"%Math.min%":y,"%Math.pow%":m,"%Math.round%":b,"%Math.sign%":g,"%Reflect.getPrototypeOf%":A};if(j)try{null.error}catch(e){var P=j(j(e));C["%Error.prototype%"]=P}var M=function e(t){var n;if("%AsyncFunction%"===t)n=E("async function () {}");else if("%GeneratorFunction%"===t)n=E("function* () {}");else if("%AsyncGeneratorFunction%"===t)n=E("async function* () {}");else if("%AsyncGenerator%"===t){var r=e("%AsyncGeneratorFunction%");r&&(n=r.prototype)}else if("%AsyncIteratorPrototype%"===t){var i=e("%AsyncGenerator%");i&&j&&(n=j(i.prototype))}return C[t]=n,n},N={__proto__:null,"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},_=n(66),L=n(72),J=_.call(T,Array.prototype.concat),F=_.call(O,Array.prototype.splice),V=_.call(T,String.prototype.replace),G=_.call(T,String.prototype.slice),q=_.call(T,RegExp.prototype.exec),B=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,U=/\\(\\)?/g,Y=function(e,t){var n,r=e;if(L(N,r)&&(r="%"+(n=N[r])[0]+"%"),L(C,r)){var i=C[r];if(i===R&&(i=M(r)),void 0===i&&!t)throw new u("intrinsic "+e+" exists, but is not available. Please file an issue!");return{alias:n,name:r,value:i}}throw new c("intrinsic "+e+" does not exist!")};e.exports=function(e,t){if("string"!=typeof e||0===e.length)throw new u("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof t)throw new u('"allowMissing" argument must be a boolean');if(null===q(/^%?[^%]*%?$/,e))throw new c("`%` may not be present anywhere but at the beginning and end of the intrinsic name");var n=function(e){var t=G(e,0,1),n=G(e,-1);if("%"===t&&"%"!==n)throw new c("invalid intrinsic syntax, expected closing `%`");if("%"===n&&"%"!==t)throw new c("invalid intrinsic syntax, expected opening `%`");var r=[];return V(e,B,function(e,t,n,i){r[r.length]=n?V(i,U,"$1"):t||e}),r}(e),r=n.length>0?n[0]:"",i=Y("%"+r+"%",t),o=i.name,a=i.value,s=!1,l=i.alias;l&&(r=l[0],F(n,J([0,1],l)));for(var d=1,p=!0;d<n.length;d+=1){var h=n[d],f=G(h,0,1),y=G(h,-1);if(('"'===f||"'"===f||"`"===f||'"'===y||"'"===y||"`"===y)&&f!==y)throw new c("property names with quotes must have matching quotes");if("constructor"!==h&&p||(s=!0),L(C,o="%"+(r+="."+h)+"%"))a=C[o];else if(null!=a){if(!(h in a)){if(!t)throw new u("base intrinsic for "+e+" exists, but the property is not available.");return}if(w&&d+1>=n.length){var m=w(a,h);a=(p=!!m)&&"get"in m&&!("originalValue"in m.get)?m.get:a[h]}else p=L(a,h),a=a[h];p&&!s&&(C[o]=a)}}return a}},e=>{"use strict";e.exports=Object},e=>{"use strict";e.exports=Error},e=>{"use strict";e.exports=EvalError},e=>{"use strict";e.exports=RangeError},e=>{"use strict";e.exports=ReferenceError},e=>{"use strict";e.exports=SyntaxError},e=>{"use strict";e.exports=TypeError},e=>{"use strict";e.exports=URIError},e=>{"use strict";e.exports=Math.abs},e=>{"use strict";e.exports=Math.floor},e=>{"use strict";e.exports=Math.max},e=>{"use strict";e.exports=Math.min},e=>{"use strict";e.exports=Math.pow},e=>{"use strict";e.exports=Math.round},(e,t,n)=>{"use strict";var r=n(56);e.exports=function(e){return r(e)||0===e?e:e<0?-1:1}},e=>{"use strict";e.exports=Number.isNaN||function(e){return e!=e}},(e,t,n)=>{"use strict";var r=n(58);if(r)try{r([],"length")}catch(e){r=null}e.exports=r},e=>{"use strict";e.exports=Object.getOwnPropertyDescriptor},e=>{"use strict";var t=Object.defineProperty||!1;if(t)try{t({},"a",{value:1})}catch(e){t=!1}e.exports=t},(e,t,n)=>{"use strict";var r="undefined"!=typeof Symbol&&Symbol,i=n(38);e.exports=function(){return"function"==typeof r&&("function"==typeof Symbol&&("symbol"==typeof r("foo")&&("symbol"==typeof Symbol("bar")&&i())))}},(e,t,n)=>{"use strict";var r=n(62),i=n(63),o=n(64);e.exports=r?function(e){return r(e)}:i?function(e){if(!e||"object"!=typeof e&&"function"!=typeof e)throw new TypeError("getProto: not an object");return i(e)}:o?function(e){return o(e)}:null},e=>{"use strict";e.exports="undefined"!=typeof Reflect&&Reflect.getPrototypeOf||null},(e,t,n)=>{"use strict";var r=n(41);e.exports=r.getPrototypeOf||null},(e,t,n)=>{"use strict";var r,i=n(65),o=n(57);try{r=[].__proto__===Array.prototype}catch(e){if(!e||"object"!=typeof e||!("code"in e)||"ERR_PROTO_ACCESS"!==e.code)throw e}var a=!!r&&o&&o(Object.prototype,"__proto__"),s=Object,l=s.getPrototypeOf;e.exports=a&&"function"==typeof a.get?i([a.get]):"function"==typeof l&&function(e){return l(null==e?e:s(e))}},(e,t,n)=>{"use strict";var r=n(66),i=n(47),o=n(68),a=n(69);e.exports=function(e){if(e.length<1||"function"!=typeof e[0])throw new i("a function is required");return a(r,o,e)}},(e,t,n)=>{"use strict";var r=n(67);e.exports=Function.prototype.bind||r},e=>{"use strict";var t=Object.prototype.toString,n=Math.max,r=function(e,t){for(var n=[],r=0;r<e.length;r+=1)n[r]=e[r];for(var i=0;i<t.length;i+=1)n[i+e.length]=t[i];return n};e.exports=function(e){var i=this;if("function"!=typeof i||"[object Function]"!==t.apply(i))throw new TypeError("Function.prototype.bind called on incompatible "+i);for(var o,a=function(e,t){for(var n=[],r=t||0,i=0;r<e.length;r+=1,i+=1)n[i]=e[r];return n}(arguments,1),s=n(0,i.length-a.length),l=[],c=0;c<s;c++)l[c]="$"+c;if(o=Function("binder","return function ("+function(e,t){for(var n="",r=0;r<e.length;r+=1)n+=e[r],r+1<e.length&&(n+=t);return n}(l,",")+"){ return binder.apply(this,arguments); }")(function(){if(this instanceof o){var t=i.apply(this,r(a,arguments));return Object(t)===t?t:this}return i.apply(e,r(a,arguments))}),i.prototype){var u=function(){};u.prototype=i.prototype,o.prototype=new u,u.prototype=null}return o}},e=>{"use strict";e.exports=Function.prototype.call},(e,t,n)=>{"use strict";var r=n(66),i=n(70),o=n(68),a=n(71);e.exports=a||r.call(o,i)},e=>{"use strict";e.exports=Function.prototype.apply},e=>{"use strict";e.exports="undefined"!=typeof Reflect&&Reflect&&Reflect.apply},(e,t,n)=>{"use strict";var r=Function.prototype.call,i=Object.prototype.hasOwnProperty,o=n(66);e.exports=o.call(r,i)},(e,t,n)=>{"use strict";var r,i=n(39),o=n(74)(/^\s*(?:function)?\*/),a=n(37)(),s=n(61),l=i("Object.prototype.toString"),c=i("Function.prototype.toString");e.exports=function(e){if("function"!=typeof e)return!1;if(o(c(e)))return!0;if(!a)return"[object GeneratorFunction]"===l(e);if(!s)return!1;if(void 0===r){var t=function(){if(!a)return!1;try{return Function("return function*() {}")()}catch(e){}}();r=!!t&&s(t)}return s(e)===r}},(e,t,n)=>{"use strict";var r=n(39),i=n(75),o=r("RegExp.prototype.exec"),a=n(47);e.exports=function(e){if(!i(e))throw new a("`regex` must be a RegExp");return function(t){return null!==o(e,t)}}},(e,t,n)=>{"use strict";var r,i=n(39),o=n(37)(),a=n(72),s=n(57);if(o){var l=i("RegExp.prototype.exec"),c={},u=function(){throw c},d={toString:u,valueOf:u};"symbol"==typeof Symbol.toPrimitive&&(d[Symbol.toPrimitive]=u),r=function(e){if(!e||"object"!=typeof e)return!1;var t=s(e,"lastIndex");if(!(t&&a(t,"value")))return!1;try{l(e,d)}catch(e){return e===c}}}else{var p=i("Object.prototype.toString");r=function(e){return!(!e||"object"!=typeof e&&"function"!=typeof e)&&"[object RegExp]"===p(e)}}e.exports=r},(e,t,n)=>{"use strict";var r=n(77),i=n(79),o=n(81),a=n(39),s=n(57),l=n(61),c=a("Object.prototype.toString"),u=n(37)(),d="undefined"==typeof globalThis?n.g:globalThis,p=i(),h=a("String.prototype.slice"),f=a("Array.prototype.indexOf",!0)||function(e,t){for(var n=0;n<e.length;n+=1)if(e[n]===t)return n;return-1},y={__proto__:null};r(p,u&&s&&l?function(e){var t=new d[e];if(Symbol.toStringTag in t&&l){var n=l(t),r=s(n,Symbol.toStringTag);if(!r&&n){var i=l(n);r=s(i,Symbol.toStringTag)}y["$"+e]=o(r.get)}}:function(e){var t=new d[e],n=t.slice||t.set;n&&(y["$"+e]=o(n))});e.exports=function(e){if(!e||"object"!=typeof e)return!1;if(!u){var t=h(c(e),8,-1);return f(p,t)>-1?t:"Object"===t&&function(e){var t=!1;return r(y,function(n,r){if(!t)try{n(e),t=h(r,1)}catch(e){}}),t}(e)}return s?function(e){var t=!1;return r(y,function(n,r){if(!t)try{"$"+n(e)===r&&(t=h(r,1))}catch(e){}}),t}(e):null}},(e,t,n)=>{"use strict";var r=n(78),i=Object.prototype.toString,o=Object.prototype.hasOwnProperty;e.exports=function(e,t,n){if(!r(t))throw new TypeError("iterator must be a function");var a,s;arguments.length>=3&&(a=n),s=e,"[object Array]"===i.call(s)?function(e,t,n){for(var r=0,i=e.length;r<i;r++)o.call(e,r)&&(null==n?t(e[r],r,e):t.call(n,e[r],r,e))}(e,t,a):"string"==typeof e?function(e,t,n){for(var r=0,i=e.length;r<i;r++)null==n?t(e.charAt(r),r,e):t.call(n,e.charAt(r),r,e)}(e,t,a):function(e,t,n){for(var r in e)o.call(e,r)&&(null==n?t(e[r],r,e):t.call(n,e[r],r,e))}(e,t,a)}},e=>{"use strict";var t,n,r=Function.prototype.toString,i="object"==typeof Reflect&&null!==Reflect&&Reflect.apply;if("function"==typeof i&&"function"==typeof Object.defineProperty)try{t=Object.defineProperty({},"length",{get:function(){throw n}}),n={},i(function(){throw 42},null,t)}catch(e){e!==n&&(i=null)}else i=null;var o=/^\s*class\b/,a=function(e){try{var t=r.call(e);return o.test(t)}catch(e){return!1}},s=function(e){try{return!a(e)&&(r.call(e),!0)}catch(e){return!1}},l=Object.prototype.toString,c="function"==typeof Symbol&&!!Symbol.toStringTag,u=!(0 in[,]),d=function(){return!1};if("object"==typeof document){var p=document.all;l.call(p)===l.call(document.all)&&(d=function(e){if((u||!e)&&(void 0===e||"object"==typeof e))try{var t=l.call(e);return("[object HTMLAllCollection]"===t||"[object HTML document.all class]"===t||"[object HTMLCollection]"===t||"[object Object]"===t)&&null==e("")}catch(e){}return!1})}e.exports=i?function(e){if(d(e))return!0;if(!e)return!1;if("function"!=typeof e&&"object"!=typeof e)return!1;try{i(e,null,t)}catch(e){if(e!==n)return!1}return!a(e)&&s(e)}:function(e){if(d(e))return!0;if(!e)return!1;if("function"!=typeof e&&"object"!=typeof e)return!1;if(c)return s(e);if(a(e))return!1;var t=l.call(e);return!("[object Function]"!==t&&"[object GeneratorFunction]"!==t&&!/^\[object HTML/.test(t))&&s(e)}},(e,t,n)=>{"use strict";var r=n(80),i="undefined"==typeof globalThis?n.g:globalThis;e.exports=function(){for(var e=[],t=0;t<r.length;t++)"function"==typeof i[r[t]]&&(e[e.length]=r[t]);return e}},e=>{"use strict";e.exports=["Float16Array","Float32Array","Float64Array","Int8Array","Int16Array","Int32Array","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","BigInt64Array","BigUint64Array"]},(e,t,n)=>{"use strict";var r=n(82),i=n(59),o=n(65),a=n(85);e.exports=function(e){var t=o(arguments),n=e.length-(arguments.length-1);return r(t,1+(n>0?n:0),!0)},i?i(e.exports,"apply",{value:a}):e.exports.apply=a},(e,t,n)=>{"use strict";var r=n(40),i=n(83),o=n(84)(),a=n(57),s=n(47),l=r("%Math.floor%");e.exports=function(e,t){if("function"!=typeof e)throw new s("`fn` is not a function");if("number"!=typeof t||t<0||t>4294967295||l(t)!==t)throw new s("`length` must be a positive 32-bit integer");var n=arguments.length>2&&!!arguments[2],r=!0,c=!0;if("length"in e&&a){var u=a(e,"length");u&&!u.configurable&&(r=!1),u&&!u.writable&&(c=!1)}return(r||c||!n)&&(o?i(e,"length",t,!0,!0):i(e,"length",t)),e}},(e,t,n)=>{"use strict";var r=n(59),i=n(46),o=n(47),a=n(57);e.exports=function(e,t,n){if(!e||"object"!=typeof e&&"function"!=typeof e)throw new o("`obj` must be an object or a function`");if("string"!=typeof t&&"symbol"!=typeof t)throw new o("`property` must be a string or a symbol`");if(arguments.length>3&&"boolean"!=typeof arguments[3]&&null!==arguments[3])throw new o("`nonEnumerable`, if provided, must be a boolean or null");if(arguments.length>4&&"boolean"!=typeof arguments[4]&&null!==arguments[4])throw new o("`nonWritable`, if provided, must be a boolean or null");if(arguments.length>5&&"boolean"!=typeof arguments[5]&&null!==arguments[5])throw new o("`nonConfigurable`, if provided, must be a boolean or null");if(arguments.length>6&&"boolean"!=typeof arguments[6])throw new o("`loose`, if provided, must be a boolean");var s=arguments.length>3?arguments[3]:null,l=arguments.length>4?arguments[4]:null,c=arguments.length>5?arguments[5]:null,u=arguments.length>6&&arguments[6],d=!!a&&a(e,t);if(r)r(e,t,{configurable:null===c&&d?d.configurable:!c,enumerable:null===s&&d?d.enumerable:!s,value:n,writable:null===l&&d?d.writable:!l});else{if(!u&&(s||l||c))throw new i("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");e[t]=n}}},(e,t,n)=>{"use strict";var r=n(59),i=function(){return!!r};i.hasArrayLengthDefineBug=function(){if(!r)return null;try{return 1!==r([],"length",{value:1}).length}catch(e){return!0}},e.exports=i},(e,t,n)=>{"use strict";var r=n(66),i=n(70),o=n(69);e.exports=function(){return o(r,i,arguments)}},(e,t,n)=>{"use strict";var r=n(76);e.exports=function(e){return!!r(e)}},e=>{e.exports=function(e){return e&&"object"==typeof e&&"function"==typeof e.copy&&"function"==typeof e.fill&&"function"==typeof e.readUInt8}},e=>{"function"==typeof Object.create?e.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(e,t){if(t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}}},(e,t,n)=>{"use strict";function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach(function(t){o(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function o(e,t,n){return(t=s(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,s(r.key),r)}}function s(e){var t=function(e,t){if("object"!==y(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!==y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===y(t)?t:String(t)}function l(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return c(e)}function c(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function u(e){var t="function"==typeof Map?new Map:void 0;return u=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return d(e,arguments,f(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),h(r,e)},u(e)}function d(e,t,n){return d=p()?Reflect.construct.bind():function(e,t,n){var r=[null];r.push.apply(r,t);var i=new(Function.bind.apply(e,r));return n&&h(i,n.prototype),i},d.apply(null,arguments)}function p(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}function h(e,t){return h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},h(e,t)}function f(e){return f=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},f(e)}function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}var m=n(34).inspect,b=n(33).codes.ERR_INVALID_ARG_TYPE;function g(e,t,n){return(void 0===n||n>e.length)&&(n=e.length),e.substring(n-t.length,n)===t}var v="",E="",w="",S="",K={deepStrictEqual:"Expected values to be strictly deep-equal:",strictEqual:"Expected values to be strictly equal:",strictEqualObject:'Expected "actual" to be reference-equal to "expected":',deepEqual:"Expected values to be loosely deep-equal:",equal:"Expected values to be loosely equal:",notDeepStrictEqual:'Expected "actual" not to be strictly deep-equal to:',notStrictEqual:'Expected "actual" to be strictly unequal to:',notStrictEqualObject:'Expected "actual" not to be reference-equal to "expected":',notDeepEqual:'Expected "actual" not to be loosely deep-equal to:',notEqual:'Expected "actual" to be loosely unequal to:',notIdentical:"Values identical but not reference-equal:"};function I(e){var t=Object.keys(e),n=Object.create(Object.getPrototypeOf(e));return t.forEach(function(t){n[t]=e[t]}),Object.defineProperty(n,"message",{value:e.message}),n}function k(e){return m(e,{compact:!1,customInspect:!1,depth:1e3,maxArrayLength:1/0,showHidden:!1,breakLength:1/0,showProxy:!1,sorted:!0,getters:!0})}function j(e,t,n){var r="",i="",o=0,a="",s=!1,l=k(e),c=l.split("\n"),u=k(t).split("\n"),d=0,p="";if("strictEqual"===n&&"object"===y(e)&&"object"===y(t)&&null!==e&&null!==t&&(n="strictEqualObject"),1===c.length&&1===u.length&&c[0]!==u[0]){var h=c[0].length+u[0].length;if(h<=10){if(!("object"===y(e)&&null!==e||"object"===y(t)&&null!==t||0===e&&0===t))return"".concat(K[n],"\n\n")+"".concat(c[0]," !== ").concat(u[0],"\n")}else if("strictEqualObject"!==n){if(h<(process.stderr&&process.stderr.isTTY?process.stderr.columns:80)){for(;c[0][d]===u[0][d];)d++;d>2&&(p="\n  ".concat(function(e,t){if(t=Math.floor(t),0==e.length||0==t)return"";var n=e.length*t;for(t=Math.floor(Math.log(t)/Math.log(2));t;)e+=e,t--;return e+e.substring(0,n-e.length)}(" ",d),"^"),d=0)}}}for(var f=c[c.length-1],m=u[u.length-1];f===m&&(d++<2?a="\n  ".concat(f).concat(a):r=f,c.pop(),u.pop(),0!==c.length&&0!==u.length);)f=c[c.length-1],m=u[u.length-1];var b=Math.max(c.length,u.length);if(0===b){var I=l.split("\n");if(I.length>30)for(I[26]="".concat(v,"...").concat(S);I.length>27;)I.pop();return"".concat(K.notIdentical,"\n\n").concat(I.join("\n"),"\n")}d>3&&(a="\n".concat(v,"...").concat(S).concat(a),s=!0),""!==r&&(a="\n  ".concat(r).concat(a),r="");var j=0,x=K[n]+"\n".concat(E,"+ actual").concat(S," ").concat(w,"- expected").concat(S),A=" ".concat(v,"...").concat(S," Lines skipped");for(d=0;d<b;d++){var O=d-o;if(c.length<d+1)O>1&&d>2&&(O>4?(i+="\n".concat(v,"...").concat(S),s=!0):O>3&&(i+="\n  ".concat(u[d-2]),j++),i+="\n  ".concat(u[d-1]),j++),o=d,r+="\n".concat(w,"-").concat(S," ").concat(u[d]),j++;else if(u.length<d+1)O>1&&d>2&&(O>4?(i+="\n".concat(v,"...").concat(S),s=!0):O>3&&(i+="\n  ".concat(c[d-2]),j++),i+="\n  ".concat(c[d-1]),j++),o=d,i+="\n".concat(E,"+").concat(S," ").concat(c[d]),j++;else{var T=u[d],R=c[d],D=R!==T&&(!g(R,",")||R.slice(0,-1)!==T);D&&g(T,",")&&T.slice(0,-1)===R&&(D=!1,R+=","),D?(O>1&&d>2&&(O>4?(i+="\n".concat(v,"...").concat(S),s=!0):O>3&&(i+="\n  ".concat(c[d-2]),j++),i+="\n  ".concat(c[d-1]),j++),o=d,i+="\n".concat(E,"+").concat(S," ").concat(R),r+="\n".concat(w,"-").concat(S," ").concat(T),j+=2):(i+=r,r="",1!==O&&0!==d||(i+="\n  ".concat(R),j++))}if(j>20&&d<b-2)return"".concat(x).concat(A,"\n").concat(i,"\n").concat(v,"...").concat(S).concat(r,"\n")+"".concat(v,"...").concat(S)}return"".concat(x).concat(s?A:"","\n").concat(i).concat(r).concat(a).concat(p)}var x=function(e,t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(g,e);var n,r,o,s,u,d=(n=g,r=p(),function(){var e,t=f(n);if(r){var i=f(this).constructor;e=Reflect.construct(t,arguments,i)}else e=t.apply(this,arguments);return l(this,e)});function g(e){var t;if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,g),"object"!==y(e)||null===e)throw new b("options","Object",e);var n=e.message,r=e.operator,i=e.stackStartFn,o=e.actual,a=e.expected,s=Error.stackTraceLimit;if(Error.stackTraceLimit=0,null!=n)t=d.call(this,String(n));else if(process.stderr&&process.stderr.isTTY&&(process.stderr&&process.stderr.getColorDepth&&1!==process.stderr.getColorDepth()?(v="[34m",E="[32m",S="[39m",w="[31m"):(v="",E="",S="",w="")),"object"===y(o)&&null!==o&&"object"===y(a)&&null!==a&&"stack"in o&&o instanceof Error&&"stack"in a&&a instanceof Error&&(o=I(o),a=I(a)),"deepStrictEqual"===r||"strictEqual"===r)t=d.call(this,j(o,a,r));else if("notDeepStrictEqual"===r||"notStrictEqual"===r){var u=K[r],p=k(o).split("\n");if("notStrictEqual"===r&&"object"===y(o)&&null!==o&&(u=K.notStrictEqualObject),p.length>30)for(p[26]="".concat(v,"...").concat(S);p.length>27;)p.pop();t=1===p.length?d.call(this,"".concat(u," ").concat(p[0])):d.call(this,"".concat(u,"\n\n").concat(p.join("\n"),"\n"))}else{var h=k(o),f="",m=K[r];"notDeepEqual"===r||"notEqual"===r?(h="".concat(K[r],"\n\n").concat(h)).length>1024&&(h="".concat(h.slice(0,1021),"...")):(f="".concat(k(a)),h.length>512&&(h="".concat(h.slice(0,509),"...")),f.length>512&&(f="".concat(f.slice(0,509),"...")),"deepEqual"===r||"equal"===r?h="".concat(m,"\n\n").concat(h,"\n\nshould equal\n\n"):f=" ".concat(r," ").concat(f)),t=d.call(this,"".concat(h).concat(f))}return Error.stackTraceLimit=s,t.generatedMessage=!n,Object.defineProperty(c(t),"name",{value:"AssertionError [ERR_ASSERTION]",enumerable:!1,writable:!0,configurable:!0}),t.code="ERR_ASSERTION",t.actual=o,t.expected=a,t.operator=r,Error.captureStackTrace&&Error.captureStackTrace(c(t),i),t.stack,t.name="AssertionError",l(t)}return o=g,(s=[{key:"toString",value:function(){return"".concat(this.name," [").concat(this.code,"]: ").concat(this.message)}},{key:t,value:function(e,t){return m(this,i(i({},t),{},{customInspect:!1,depth:0}))}}])&&a(o.prototype,s),u&&a(o,u),Object.defineProperty(o,"prototype",{writable:!1}),g}(u(Error),m.custom);e.exports=x},(e,t,n)=>{"use strict";var r=n(91);e.exports=function(){return Object.assign?function(){if(!Object.assign)return!1;for(var e="abcdefghijklmnopqrst",t=e.split(""),n={},r=0;r<t.length;++r)n[t[r]]=t[r];var i=Object.assign({},n),o="";for(var a in i)o+=a;return e!==o}()||function(){if(!Object.assign||!Object.preventExtensions)return!1;var e=Object.preventExtensions({1:2});try{Object.assign(e,"xy")}catch(t){return"y"===e[1]}return!1}()?r:Object.assign:r}},(e,t,n)=>{"use strict";var r=n(92),i=n(38)(),o=n(39),a=n(41),s=o("Array.prototype.push"),l=o("Object.prototype.propertyIsEnumerable"),c=i?a.getOwnPropertySymbols:null;e.exports=function(e,t){if(null==e)throw new TypeError("target must be an object");var n=a(e);if(1===arguments.length)return n;for(var o=1;o<arguments.length;++o){var u=a(arguments[o]),d=r(u),p=i&&(a.getOwnPropertySymbols||c);if(p)for(var h=p(u),f=0;f<h.length;++f){var y=h[f];l(u,y)&&s(d,y)}for(var m=0;m<d.length;++m){var b=d[m];if(l(u,b)){var g=u[b];n[b]=g}}}return n}},(e,t,n)=>{"use strict";var r=Array.prototype.slice,i=n(93),o=Object.keys,a=o?function(e){return o(e)}:n(94),s=Object.keys;a.shim=function(){if(Object.keys){var e=function(){var e=Object.keys(arguments);return e&&e.length===arguments.length}(1,2);e||(Object.keys=function(e){return i(e)?s(r.call(e)):s(e)})}else Object.keys=a;return Object.keys||a},e.exports=a},e=>{"use strict";var t=Object.prototype.toString;e.exports=function(e){var n=t.call(e),r="[object Arguments]"===n;return r||(r="[object Array]"!==n&&null!==e&&"object"==typeof e&&"number"==typeof e.length&&e.length>=0&&"[object Function]"===t.call(e.callee)),r}},(e,t,n)=>{"use strict";var r;if(!Object.keys){var i=Object.prototype.hasOwnProperty,o=Object.prototype.toString,a=n(93),s=Object.prototype.propertyIsEnumerable,l=!s.call({toString:null},"toString"),c=s.call(function(){},"prototype"),u=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],d=function(e){var t=e.constructor;return t&&t.prototype===e},p={$applicationCache:!0,$console:!0,$external:!0,$frame:!0,$frameElement:!0,$frames:!0,$innerHeight:!0,$innerWidth:!0,$onmozfullscreenchange:!0,$onmozfullscreenerror:!0,$outerHeight:!0,$outerWidth:!0,$pageXOffset:!0,$pageYOffset:!0,$parent:!0,$scrollLeft:!0,$scrollTop:!0,$scrollX:!0,$scrollY:!0,$self:!0,$webkitIndexedDB:!0,$webkitStorageInfo:!0,$window:!0},h=function(){if("undefined"==typeof window)return!1;for(var e in window)try{if(!p["$"+e]&&i.call(window,e)&&null!==window[e]&&"object"==typeof window[e])try{d(window[e])}catch(e){return!0}}catch(e){return!0}return!1}();r=function(e){var t=null!==e&&"object"==typeof e,n="[object Function]"===o.call(e),r=a(e),s=t&&"[object String]"===o.call(e),p=[];if(!t&&!n&&!r)throw new TypeError("Object.keys called on a non-object");var f=c&&n;if(s&&e.length>0&&!i.call(e,0))for(var y=0;y<e.length;++y)p.push(String(y));if(r&&e.length>0)for(var m=0;m<e.length;++m)p.push(String(m));else for(var b in e)f&&"prototype"===b||!i.call(e,b)||p.push(String(b));if(l)for(var g=function(e){if("undefined"==typeof window||!h)return d(e);try{return d(e)}catch(e){return!1}}(e),v=0;v<u.length;++v)g&&"constructor"===u[v]||!i.call(e,u[v])||p.push(u[v]);return p}}e.exports=r},(e,t,n)=>{"use strict";var r=n(96);e.exports=function(){return"function"==typeof Object.is?Object.is:r}},e=>{"use strict";var t=function(e){return e!=e};e.exports=function(e,n){return 0===e&&0===n?1/e==1/n:e===n||!(!t(e)||!t(n))}},(e,t,n)=>{"use strict";var r=n(40),i=n(81),o=i(r("String.prototype.indexOf"));e.exports=function(e,t){var n=r(e,!!t);return"function"==typeof n&&o(e,".prototype.")>-1?i(n):n}},(e,t,n)=>{"use strict";function r(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,o,a,s=[],l=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw i}}return s}}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return i(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return i(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}var a=void 0!==/a/g.flags,s=function(e){var t=[];return e.forEach(function(e){return t.push(e)}),t},l=function(e){var t=[];return e.forEach(function(e,n){return t.push([n,e])}),t},c=Object.is?Object.is:n(99),u=Object.getOwnPropertySymbols?Object.getOwnPropertySymbols:function(){return[]},d=Number.isNaN?Number.isNaN:n(102);function p(e){return e.call.bind(e)}var h=p(Object.prototype.hasOwnProperty),f=p(Object.prototype.propertyIsEnumerable),y=p(Object.prototype.toString),m=n(34).types,b=m.isAnyArrayBuffer,g=m.isArrayBufferView,v=m.isDate,E=m.isMap,w=m.isRegExp,S=m.isSet,K=m.isNativeError,I=m.isBoxedPrimitive,k=m.isNumberObject,j=m.isStringObject,x=m.isBooleanObject,A=m.isBigIntObject,O=m.isSymbolObject,T=m.isFloat32Array,R=m.isFloat64Array;function D(e){if(0===e.length||e.length>10)return!0;for(var t=0;t<e.length;t++){var n=e.charCodeAt(t);if(n<48||n>57)return!0}return 10===e.length&&e>=Math.pow(2,32)}function C(e){return Object.keys(e).filter(D).concat(u(e).filter(Object.prototype.propertyIsEnumerable.bind(e)))}function P(e,t){if(e===t)return 0;for(var n=e.length,r=t.length,i=0,o=Math.min(n,r);i<o;++i)if(e[i]!==t[i]){n=e[i],r=t[i];break}return n<r?-1:r<n?1:0}function M(e,t,n,r){if(e===t)return 0!==e||(!n||c(e,t));if(n){if("object"!==o(e))return"number"==typeof e&&d(e)&&d(t);if("object"!==o(t)||null===e||null===t)return!1;if(Object.getPrototypeOf(e)!==Object.getPrototypeOf(t))return!1}else{if(null===e||"object"!==o(e))return(null===t||"object"!==o(t))&&e==t;if(null===t||"object"!==o(t))return!1}var i,s,l,u,p=y(e);if(p!==y(t))return!1;if(Array.isArray(e)){if(e.length!==t.length)return!1;var h=C(e),f=C(t);return h.length===f.length&&_(e,t,n,r,1,h)}if("[object Object]"===p&&(!E(e)&&E(t)||!S(e)&&S(t)))return!1;if(v(e)){if(!v(t)||Date.prototype.getTime.call(e)!==Date.prototype.getTime.call(t))return!1}else if(w(e)){if(!w(t)||(l=e,u=t,!(a?l.source===u.source&&l.flags===u.flags:RegExp.prototype.toString.call(l)===RegExp.prototype.toString.call(u))))return!1}else if(K(e)||e instanceof Error){if(e.message!==t.message||e.name!==t.name)return!1}else{if(g(e)){if(n||!T(e)&&!R(e)){if(!function(e,t){return e.byteLength===t.byteLength&&0===P(new Uint8Array(e.buffer,e.byteOffset,e.byteLength),new Uint8Array(t.buffer,t.byteOffset,t.byteLength))}(e,t))return!1}else if(!function(e,t){if(e.byteLength!==t.byteLength)return!1;for(var n=0;n<e.byteLength;n++)if(e[n]!==t[n])return!1;return!0}(e,t))return!1;var m=C(e),D=C(t);return m.length===D.length&&_(e,t,n,r,0,m)}if(S(e))return!(!S(t)||e.size!==t.size)&&_(e,t,n,r,2);if(E(e))return!(!E(t)||e.size!==t.size)&&_(e,t,n,r,3);if(b(e)){if(s=t,(i=e).byteLength!==s.byteLength||0!==P(new Uint8Array(i),new Uint8Array(s)))return!1}else if(I(e)&&!function(e,t){return k(e)?k(t)&&c(Number.prototype.valueOf.call(e),Number.prototype.valueOf.call(t)):j(e)?j(t)&&String.prototype.valueOf.call(e)===String.prototype.valueOf.call(t):x(e)?x(t)&&Boolean.prototype.valueOf.call(e)===Boolean.prototype.valueOf.call(t):A(e)?A(t)&&BigInt.prototype.valueOf.call(e)===BigInt.prototype.valueOf.call(t):O(t)&&Symbol.prototype.valueOf.call(e)===Symbol.prototype.valueOf.call(t)}(e,t))return!1}return _(e,t,n,r,0)}function N(e,t){return t.filter(function(t){return f(e,t)})}function _(e,t,n,i,a,c){if(5===arguments.length){c=Object.keys(e);var d=Object.keys(t);if(c.length!==d.length)return!1}for(var p=0;p<c.length;p++)if(!h(t,c[p]))return!1;if(n&&5===arguments.length){var y=u(e);if(0!==y.length){var m=0;for(p=0;p<y.length;p++){var b=y[p];if(f(e,b)){if(!f(t,b))return!1;c.push(b),m++}else if(f(t,b))return!1}var g=u(t);if(y.length!==g.length&&N(t,g).length!==m)return!1}else{var v=u(t);if(0!==v.length&&0!==N(t,v).length)return!1}}if(0===c.length&&(0===a||1===a&&0===e.length||0===e.size))return!0;if(void 0===i)i={val1:new Map,val2:new Map,position:0};else{var E=i.val1.get(e);if(void 0!==E){var w=i.val2.get(t);if(void 0!==w)return E===w}i.position++}i.val1.set(e,i.position),i.val2.set(t,i.position);var S=function(e,t,n,i,a,c){var u=0;if(2===c){if(!function(e,t,n,r){for(var i=null,a=s(e),l=0;l<a.length;l++){var c=a[l];if("object"===o(c)&&null!==c)null===i&&(i=new Set),i.add(c);else if(!t.has(c)){if(n)return!1;if(!F(e,t,c))return!1;null===i&&(i=new Set),i.add(c)}}if(null!==i){for(var u=s(t),d=0;d<u.length;d++){var p=u[d];if("object"===o(p)&&null!==p){if(!L(i,p,n,r))return!1}else if(!n&&!e.has(p)&&!L(i,p,n,r))return!1}return 0===i.size}return!0}(e,t,n,a))return!1}else if(3===c){if(!function(e,t,n,i){for(var a=null,s=l(e),c=0;c<s.length;c++){var u=r(s[c],2),d=u[0],p=u[1];if("object"===o(d)&&null!==d)null===a&&(a=new Set),a.add(d);else{var h=t.get(d);if(void 0===h&&!t.has(d)||!M(p,h,n,i)){if(n)return!1;if(!V(e,t,d,p,i))return!1;null===a&&(a=new Set),a.add(d)}}}if(null!==a){for(var f=l(t),y=0;y<f.length;y++){var m=r(f[y],2),b=m[0],g=m[1];if("object"===o(b)&&null!==b){if(!G(a,e,b,g,n,i))return!1}else if(!(n||e.has(b)&&M(e.get(b),g,!1,i)||G(a,e,b,g,!1,i)))return!1}return 0===a.size}return!0}(e,t,n,a))return!1}else if(1===c)for(;u<e.length;u++){if(!h(e,u)){if(h(t,u))return!1;for(var d=Object.keys(e);u<d.length;u++){var p=d[u];if(!h(t,p)||!M(e[p],t[p],n,a))return!1}return d.length===Object.keys(t).length}if(!h(t,u)||!M(e[u],t[u],n,a))return!1}for(u=0;u<i.length;u++){var f=i[u];if(!M(e[f],t[f],n,a))return!1}return!0}(e,t,n,c,i,a);return i.val1.delete(e),i.val2.delete(t),S}function L(e,t,n,r){for(var i=s(e),o=0;o<i.length;o++){var a=i[o];if(M(t,a,n,r))return e.delete(a),!0}return!1}function J(e){switch(o(e)){case"undefined":return null;case"object":return;case"symbol":return!1;case"string":e=+e;case"number":if(d(e))return!1}return!0}function F(e,t,n){var r=J(n);return null!=r?r:t.has(r)&&!e.has(r)}function V(e,t,n,r,i){var o=J(n);if(null!=o)return o;var a=t.get(o);return!(void 0===a&&!t.has(o)||!M(r,a,!1,i))&&(!e.has(o)&&M(r,a,!1,i))}function G(e,t,n,r,i,o){for(var a=s(e),l=0;l<a.length;l++){var c=a[l];if(M(n,c,i,o)&&M(r,t.get(c),i,o))return e.delete(c),!0}return!1}e.exports={isDeepEqual:function(e,t){return M(e,t,false)},isDeepStrictEqual:function(e,t){return M(e,t,true)}}},(e,t,n)=>{"use strict";var r=n(100),i=n(81),o=n(96),a=n(95),s=n(101),l=i(a(),Object);r(l,{getPolyfill:a,implementation:o,shim:s}),e.exports=l},(e,t,n)=>{"use strict";var r=n(92),i="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),o=Object.prototype.toString,a=Array.prototype.concat,s=n(83),l=n(84)(),c=function(e,t,n,r){if(t in e)if(!0===r){if(e[t]===n)return}else if("function"!=typeof(i=r)||"[object Function]"!==o.call(i)||!r())return;var i;l?s(e,t,n,!0):s(e,t,n)},u=function(e,t){var n=arguments.length>2?arguments[2]:{},o=r(t);i&&(o=a.call(o,Object.getOwnPropertySymbols(t)));for(var s=0;s<o.length;s+=1)c(e,o[s],t[o[s]],n[o[s]])};u.supportsDescriptors=!!l,e.exports=u},(e,t,n)=>{"use strict";var r=n(95),i=n(100);e.exports=function(){var e=r();return i(Object,{is:e},{is:function(){return Object.is!==e}}),e}},(e,t,n)=>{"use strict";var r=n(81),i=n(100),o=n(103),a=n(104),s=n(105),l=r(a(),Number);i(l,{getPolyfill:a,implementation:o,shim:s}),e.exports=l},e=>{"use strict";e.exports=function(e){return e!=e}},(e,t,n)=>{"use strict";var r=n(103);e.exports=function(){return Number.isNaN&&Number.isNaN(NaN)&&!Number.isNaN("a")?Number.isNaN:r}},(e,t,n)=>{"use strict";var r=n(100),i=n(104);e.exports=function(){var e=i();return r(Number,{isNaN:e},{isNaN:function(){return Number.isNaN!==e}}),e}},(e,t,n)=>{"use strict";const r=n(32);class i extends Error{get name(){return this.constructor.name}}class o extends i{get name(){return this.constructor.name}}e.exports={RedisError:i,ParserError:class extends i{constructor(e,t,n){r(t),r.strictEqual(typeof n,"number");const i=Error.stackTraceLimit;Error.stackTraceLimit=2,super(e),Error.stackTraceLimit=i,this.offset=n,this.buffer=t}get name(){return this.constructor.name}},ReplyError:class extends i{constructor(e){const t=Error.stackTraceLimit;Error.stackTraceLimit=2,super(e),Error.stackTraceLimit=t}get name(){return this.constructor.name}},AbortError:o,InterruptError:class extends o{get name(){return this.constructor.name}}}},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(25),i=n(108),o=n(27),a=n(109);class s{constructor(e,t=[],n={},r){if(this.name=e,this.inTransaction=!1,this.isResolved=!1,this.transformed=!1,this.replyEncoding=n.replyEncoding,this.errorStack=n.errorStack,this.args=t.flat(),this.callback=r,this.initPromise(),n.keyPrefix){const e=n.keyPrefix instanceof Buffer;let t=e?n.keyPrefix:null;this._iterateKeys(r=>r instanceof Buffer?(null===t&&(t=Buffer.from(n.keyPrefix)),Buffer.concat([t,r])):e?Buffer.concat([n.keyPrefix,Buffer.from(String(r))]):n.keyPrefix+r)}n.readOnly&&(this.isReadOnly=!0)}static checkFlag(e,t){return!!this.getFlagMap()[e][t]}static setArgumentTransformer(e,t){this._transformer.argument[e]=t}static setReplyTransformer(e,t){this._transformer.reply[e]=t}static getFlagMap(){return this.flagMap||(this.flagMap=Object.keys(s.FLAGS).reduce((e,t)=>(e[t]={},s.FLAGS[t].forEach(n=>{e[t][n]=!0}),e),{})),this.flagMap}getSlot(){if(void 0===this.slot){const e=this.getKeys()[0];this.slot=null==e?null:i(e)}return this.slot}getKeys(){return this._iterateKeys()}toWritable(e){let t;const n="*"+(this.args.length+1)+"\r\n$"+Buffer.byteLength(this.name)+"\r\n"+this.name+"\r\n";if(this.bufferMode){const e=new u;e.push(n);for(let t=0;t<this.args.length;++t){const n=this.args[t];n instanceof Buffer?0===n.length?e.push("$0\r\n\r\n"):(e.push("$"+n.length+"\r\n"),e.push(n),e.push("\r\n")):e.push("$"+Buffer.byteLength(n)+"\r\n"+n+"\r\n")}t=e.toBuffer()}else{t=n;for(let e=0;e<this.args.length;++e){const n=this.args[e];t+="$"+Buffer.byteLength(n)+"\r\n"+n+"\r\n"}}return t}stringifyArguments(){for(let e=0;e<this.args.length;++e){const t=this.args[e];"string"==typeof t||(t instanceof Buffer?this.bufferMode=!0:this.args[e]=(0,a.toArg)(t))}}transformReply(e){this.replyEncoding&&(e=(0,a.convertBufferToString)(e,this.replyEncoding));const t=s._transformer.reply[this.name];return t&&(e=t(e)),e}setTimeout(e){this._commandTimeoutTimer||(this._commandTimeoutTimer=setTimeout(()=>{this.isResolved||this.reject(new Error("Command timed out"))},e))}initPromise(){const e=new Promise((e,t)=>{if(!this.transformed){this.transformed=!0;const e=s._transformer.argument[this.name];e&&(this.args=e(this.args)),this.stringifyArguments()}this.resolve=this._convertValue(e),this.errorStack?this.reject=e=>{t((0,a.optimizeErrorStack)(e,this.errorStack.stack,"/"))}:this.reject=t});this.promise=(0,o.default)(e,this.callback)}_iterateKeys(e=e=>e){if(void 0===this.keys&&(this.keys=[],(0,r.exists)(this.name))){const t=(0,r.getKeyIndexes)(this.name,this.args);for(const n of t)this.args[n]=e(this.args[n]),this.keys.push(this.args[n])}return this.keys}_convertValue(e){return t=>{try{const n=this._commandTimeoutTimer;n&&(clearTimeout(n),delete this._commandTimeoutTimer),e(this.transformReply(t)),this.isResolved=!0}catch(e){this.reject(e)}return this.promise}}}t.default=s,s.FLAGS={VALID_IN_SUBSCRIBER_MODE:["subscribe","psubscribe","unsubscribe","punsubscribe","ssubscribe","sunsubscribe","ping","quit"],VALID_IN_MONITOR_MODE:["monitor","auth"],ENTER_SUBSCRIBER_MODE:["subscribe","psubscribe","ssubscribe"],EXIT_SUBSCRIBER_MODE:["unsubscribe","punsubscribe","sunsubscribe"],WILL_DISCONNECT:["quit"]},s._transformer={argument:{},reply:{}};const l=function(e){if(1===e.length){if(e[0]instanceof Map)return(0,a.convertMapToArray)(e[0]);if("object"==typeof e[0]&&null!==e[0])return(0,a.convertObjectToArray)(e[0])}return e},c=function(e){if(2===e.length){if(e[1]instanceof Map)return[e[0]].concat((0,a.convertMapToArray)(e[1]));if("object"==typeof e[1]&&null!==e[1])return[e[0]].concat((0,a.convertObjectToArray)(e[1]))}return e};s.setArgumentTransformer("mset",l),s.setArgumentTransformer("msetnx",l),s.setArgumentTransformer("hset",c),s.setArgumentTransformer("hmset",c),s.setReplyTransformer("hgetall",function(e){if(Array.isArray(e)){const t={};for(let n=0;n<e.length;n+=2){const r=e[n],i=e[n+1];r in t?Object.defineProperty(t,r,{value:i,configurable:!0,enumerable:!0,writable:!0}):t[r]=i}return t}return e});class u{constructor(){this.length=0,this.items=[]}push(e){this.length+=Buffer.byteLength(e),this.items.push(e)}toBuffer(){const e=Buffer.allocUnsafe(this.length);let t=0;for(const n of this.items){const r=Buffer.byteLength(n);Buffer.isBuffer(n)?n.copy(e,t):e.write(n,t,r),t+=r}return e}}},e=>{var t=[0,4129,8258,12387,16516,20645,24774,28903,33032,37161,41290,45419,49548,53677,57806,61935,4657,528,12915,8786,21173,17044,29431,25302,37689,33560,45947,41818,54205,50076,62463,58334,9314,13379,1056,5121,25830,29895,17572,21637,42346,46411,34088,38153,58862,62927,50604,54669,13907,9842,5649,1584,30423,26358,22165,18100,46939,42874,38681,34616,63455,59390,55197,51132,18628,22757,26758,30887,2112,6241,10242,14371,51660,55789,59790,63919,35144,39273,43274,47403,23285,19156,31415,27286,6769,2640,14899,10770,56317,52188,64447,60318,39801,35672,47931,43802,27814,31879,19684,23749,11298,15363,3168,7233,60846,64911,52716,56781,44330,48395,36200,40265,32407,28342,24277,20212,15891,11826,7761,3696,65439,61374,57309,53244,48923,44858,40793,36728,37256,33193,45514,41451,53516,49453,61774,57711,4224,161,12482,8419,20484,16421,28742,24679,33721,37784,41979,46042,49981,54044,58239,62302,689,4752,8947,13010,16949,21012,25207,29270,46570,42443,38312,34185,62830,58703,54572,50445,13538,9411,5280,1153,29798,25671,21540,17413,42971,47098,34713,38840,59231,63358,50973,55100,9939,14066,1681,5808,26199,30326,17941,22068,55628,51565,63758,59695,39368,35305,47498,43435,22596,18533,30726,26663,6336,2273,14466,10403,52093,56156,60223,64286,35833,39896,43963,48026,19061,23124,27191,31254,2801,6864,10931,14994,64814,60687,56684,52557,48554,44427,40424,36297,31782,27655,23652,19525,15522,11395,7392,3265,61215,65342,53085,57212,44955,49082,36825,40952,28183,32310,20053,24180,11923,16050,3793,7920],n=e.exports=function(e){for(var n,r=0,i=-1,o=0,a=0,s="string"==typeof e?function(e){for(var t,n=0,r=0,i=[],o=e.length;n<o;n++)(t=e.charCodeAt(n))<128?i[r++]=t:t<2048?(i[r++]=t>>6|192,i[r++]=63&t|128):55296==(64512&t)&&n+1<e.length&&56320==(64512&e.charCodeAt(n+1))?(t=65536+((1023&t)<<10)+(1023&e.charCodeAt(++n)),i[r++]=t>>18|240,i[r++]=t>>12&63|128,i[r++]=t>>6&63|128,i[r++]=63&t|128):(i[r++]=t>>12|224,i[r++]=t>>6&63|128,i[r++]=63&t|128);return i}(e):e,l=s.length;r<l;){if(n=s[r++],-1===i)123===n&&(i=r);else if(125!==n)a=t[255&(n^a>>8)]^a<<8;else if(r-1!==i)return 16383&a;o=t[255&(n^o>>8)]^o<<8}return 16383&o};e.exports.generateMulti=function(e){for(var t=1,r=e.length,i=n(e[0]);t<r;)if(n(e[t++])!==i)return-1;return i}},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.noop=t.defaults=t.Debug=t.zipMap=t.CONNECTION_CLOSED_ERROR_MSG=t.shuffle=t.sample=t.resolveTLSProfile=t.parseURL=t.optimizeErrorStack=t.toArg=t.convertMapToArray=t.convertObjectToArray=t.timeout=t.packObject=t.isInt=t.wrapMultiResult=t.convertBufferToString=void 0;const r=n(110),i=n(123);Object.defineProperty(t,"defaults",{enumerable:!0,get:function(){return i.defaults}}),Object.defineProperty(t,"noop",{enumerable:!0,get:function(){return i.noop}});const o=n(126);t.Debug=o.default;const a=n(130);function s(e){const t=parseFloat(e);return!isNaN(e)&&(0|t)===t}t.convertBufferToString=function e(t,n){if(t instanceof Buffer)return t.toString(n);if(Array.isArray(t)){const r=t.length,i=Array(r);for(let o=0;o<r;++o)i[o]=t[o]instanceof Buffer&&"utf8"===n?t[o].toString():e(t[o],n);return i}return t},t.wrapMultiResult=function(e){if(!e)return null;const t=[],n=e.length;for(let r=0;r<n;++r){const n=e[r];n instanceof Error?t.push([n]):t.push([null,n])}return t},t.isInt=s,t.packObject=function(e){const t={},n=e.length;for(let r=1;r<n;r+=2)t[e[r-1]]=e[r];return t},t.timeout=function(e,t){let n=null;const r=function(){n&&(clearTimeout(n),n=null,e.apply(this,arguments))};return n=setTimeout(r,t,new Error("timeout")),r},t.convertObjectToArray=function(e){const t=[],n=Object.keys(e);for(let r=0,i=n.length;r<i;r++)t.push(n[r],e[n[r]]);return t},t.convertMapToArray=function(e){const t=[];let n=0;return e.forEach(function(e,r){t[n]=r,t[n+1]=e,n+=2}),t},t.toArg=function(e){return null==e?"":String(e)},t.optimizeErrorStack=function(e,t,n){const r=t.split("\n");let i,o="";for(i=1;i<r.length&&-1!==r[i].indexOf(n);++i);for(let e=i;e<r.length;++e)o+="\n"+r[e];if(e.stack){const t=e.stack.indexOf("\n");e.stack=e.stack.slice(0,t)+o}return e},t.parseURL=function(e){if(s(e))return{port:e};let t=(0,r.parse)(e,!0,!0);t.slashes||"/"===e[0]||(e="//"+e,t=(0,r.parse)(e,!0,!0));const n=t.query||{},o={};if(t.auth){const e=t.auth.indexOf(":");o.username=-1===e?t.auth:t.auth.slice(0,e),o.password=-1===e?"":t.auth.slice(e+1)}if(t.pathname&&("redis:"===t.protocol||"rediss:"===t.protocol?t.pathname.length>1&&(o.db=t.pathname.slice(1)):o.path=t.pathname),t.host&&(o.host=t.hostname),t.port&&(o.port=t.port),"string"==typeof n.family){const e=Number.parseInt(n.family,10);Number.isNaN(e)||(o.family=e)}return(0,i.defaults)(o,n),o},t.resolveTLSProfile=function(e){let t=null==e?void 0:e.tls;"string"==typeof t&&(t={profile:t});const n=a.default[null==t?void 0:t.profile];return n&&(t=Object.assign({},n,t),delete t.profile,e=Object.assign({},e,{tls:t})),e},t.sample=function(e,t=0){const n=e.length;return t>=n?null:e[t+Math.floor(Math.random()*(n-t))]},t.shuffle=function(e){let t=e.length;for(;t>0;){const n=Math.floor(Math.random()*t);t--,[e[t],e[n]]=[e[n],e[t]]}return e},t.CONNECTION_CLOSED_ERROR_MSG="Connection is closed.",t.zipMap=function(e,t){const n=new Map;return e.forEach((e,r)=>{n.set(e,t[r])}),n}},(e,t,n)=>{"use strict";var r=n(111);function i(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}var o=/^([a-z0-9.+-]+:)/i,a=/:[0-9]*$/,s=/^(\/\/?(?!\/)[^?\s]*)(\?[^\s]*)?$/,l=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),c=["'"].concat(l),u=["%","/","?",";","#"].concat(c),d=["/","?","#"],p=/^[+a-z0-9A-Z_-]{0,63}$/,h=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,f={javascript:!0,"javascript:":!0},y={javascript:!0,"javascript:":!0},m={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},b=n(112);function g(e,t,n){if(e&&"object"==typeof e&&e instanceof i)return e;var r=new i;return r.parse(e,t,n),r}i.prototype.parse=function(e,t,n){if("string"!=typeof e)throw new TypeError("Parameter 'url' must be a string, not "+typeof e);var i=e.indexOf("?"),a=-1!==i&&i<e.indexOf("#")?"?":"#",l=e.split(a);l[0]=l[0].replace(/\\/g,"/");var g=e=l.join(a);if(g=g.trim(),!n&&1===e.split("#").length){var v=s.exec(g);if(v)return this.path=g,this.href=g,this.pathname=v[1],v[2]?(this.search=v[2],this.query=t?b.parse(this.search.substr(1)):this.search.substr(1)):t&&(this.search="",this.query={}),this}var E=o.exec(g);if(E){var w=(E=E[0]).toLowerCase();this.protocol=w,g=g.substr(E.length)}if(n||E||g.match(/^\/\/[^@/]+@[^@/]+/)){var S="//"===g.substr(0,2);!S||E&&y[E]||(g=g.substr(2),this.slashes=!0)}if(!y[E]&&(S||E&&!m[E])){for(var K,I,k=-1,j=0;j<d.length;j++){-1!==(x=g.indexOf(d[j]))&&(-1===k||x<k)&&(k=x)}-1!==(I=-1===k?g.lastIndexOf("@"):g.lastIndexOf("@",k))&&(K=g.slice(0,I),g=g.slice(I+1),this.auth=decodeURIComponent(K)),k=-1;for(j=0;j<u.length;j++){var x;-1!==(x=g.indexOf(u[j]))&&(-1===k||x<k)&&(k=x)}-1===k&&(k=g.length),this.host=g.slice(0,k),g=g.slice(k),this.parseHost(),this.hostname=this.hostname||"";var A="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!A)for(var O=this.hostname.split(/\./),T=(j=0,O.length);j<T;j++){var R=O[j];if(R&&!R.match(p)){for(var D="",C=0,P=R.length;C<P;C++)R.charCodeAt(C)>127?D+="x":D+=R[C];if(!D.match(p)){var M=O.slice(0,j),N=O.slice(j+1),_=R.match(h);_&&(M.push(_[1]),N.unshift(_[2])),N.length&&(g="/"+N.join(".")+g),this.hostname=M.join(".");break}}}this.hostname.length>255?this.hostname="":this.hostname=this.hostname.toLowerCase(),A||(this.hostname=r.toASCII(this.hostname));var L=this.port?":"+this.port:"",J=this.hostname||"";this.host=J+L,this.href+=this.host,A&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==g[0]&&(g="/"+g))}if(!f[w])for(j=0,T=c.length;j<T;j++){var F=c[j];if(-1!==g.indexOf(F)){var V=encodeURIComponent(F);V===F&&(V=escape(F)),g=g.split(F).join(V)}}var G=g.indexOf("#");-1!==G&&(this.hash=g.substr(G),g=g.slice(0,G));var q=g.indexOf("?");if(-1!==q?(this.search=g.substr(q),this.query=g.substr(q+1),t&&(this.query=b.parse(this.query)),g=g.slice(0,q)):t&&(this.search="",this.query={}),g&&(this.pathname=g),m[w]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){L=this.pathname||"";var B=this.search||"";this.path=L+B}return this.href=this.format(),this},i.prototype.format=function(){var e=this.auth||"";e&&(e=(e=encodeURIComponent(e)).replace(/%3A/i,":"),e+="@");var t=this.protocol||"",n=this.pathname||"",r=this.hash||"",i=!1,o="";this.host?i=e+this.host:this.hostname&&(i=e+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(i+=":"+this.port)),this.query&&"object"==typeof this.query&&Object.keys(this.query).length&&(o=b.stringify(this.query,{arrayFormat:"repeat",addQueryPrefix:!1}));var a=this.search||o&&"?"+o||"";return t&&":"!==t.substr(-1)&&(t+=":"),this.slashes||(!t||m[t])&&!1!==i?(i="//"+(i||""),n&&"/"!==n.charAt(0)&&(n="/"+n)):i||(i=""),r&&"#"!==r.charAt(0)&&(r="#"+r),a&&"?"!==a.charAt(0)&&(a="?"+a),t+i+(n=n.replace(/[?#]/g,function(e){return encodeURIComponent(e)}))+(a=a.replace("#","%23"))+r},i.prototype.resolve=function(e){return this.resolveObject(g(e,!1,!0)).format()},i.prototype.resolveObject=function(e){if("string"==typeof e){var t=new i;t.parse(e,!1,!0),e=t}for(var n=new i,r=Object.keys(this),o=0;o<r.length;o++){var a=r[o];n[a]=this[a]}if(n.hash=e.hash,""===e.href)return n.href=n.format(),n;if(e.slashes&&!e.protocol){for(var s=Object.keys(e),l=0;l<s.length;l++){var c=s[l];"protocol"!==c&&(n[c]=e[c])}return m[n.protocol]&&n.hostname&&!n.pathname&&(n.pathname="/",n.path=n.pathname),n.href=n.format(),n}if(e.protocol&&e.protocol!==n.protocol){if(!m[e.protocol]){for(var u=Object.keys(e),d=0;d<u.length;d++){var p=u[d];n[p]=e[p]}return n.href=n.format(),n}if(n.protocol=e.protocol,e.host||y[e.protocol])n.pathname=e.pathname;else{for(var h=(e.pathname||"").split("/");h.length&&!(e.host=h.shift()););e.host||(e.host=""),e.hostname||(e.hostname=""),""!==h[0]&&h.unshift(""),h.length<2&&h.unshift(""),n.pathname=h.join("/")}if(n.search=e.search,n.query=e.query,n.host=e.host||"",n.auth=e.auth,n.hostname=e.hostname||e.host,n.port=e.port,n.pathname||n.search){var f=n.pathname||"",b=n.search||"";n.path=f+b}return n.slashes=n.slashes||e.slashes,n.href=n.format(),n}var g=n.pathname&&"/"===n.pathname.charAt(0),v=e.host||e.pathname&&"/"===e.pathname.charAt(0),E=v||g||n.host&&e.pathname,w=E,S=n.pathname&&n.pathname.split("/")||[],K=(h=e.pathname&&e.pathname.split("/")||[],n.protocol&&!m[n.protocol]);if(K&&(n.hostname="",n.port=null,n.host&&(""===S[0]?S[0]=n.host:S.unshift(n.host)),n.host="",e.protocol&&(e.hostname=null,e.port=null,e.host&&(""===h[0]?h[0]=e.host:h.unshift(e.host)),e.host=null),E=E&&(""===h[0]||""===S[0])),v)n.host=e.host||""===e.host?e.host:n.host,n.hostname=e.hostname||""===e.hostname?e.hostname:n.hostname,n.search=e.search,n.query=e.query,S=h;else if(h.length)S||(S=[]),S.pop(),S=S.concat(h),n.search=e.search,n.query=e.query;else if(null!=e.search){if(K)n.host=S.shift(),n.hostname=n.host,(A=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@"))&&(n.auth=A.shift(),n.hostname=A.shift(),n.host=n.hostname);return n.search=e.search,n.query=e.query,null===n.pathname&&null===n.search||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.href=n.format(),n}if(!S.length)return n.pathname=null,n.search?n.path="/"+n.search:n.path=null,n.href=n.format(),n;for(var I=S.slice(-1)[0],k=(n.host||e.host||S.length>1)&&("."===I||".."===I)||""===I,j=0,x=S.length;x>=0;x--)"."===(I=S[x])?S.splice(x,1):".."===I?(S.splice(x,1),j++):j&&(S.splice(x,1),j--);if(!E&&!w)for(;j--;j)S.unshift("..");!E||""===S[0]||S[0]&&"/"===S[0].charAt(0)||S.unshift(""),k&&"/"!==S.join("/").substr(-1)&&S.push("");var A,O=""===S[0]||S[0]&&"/"===S[0].charAt(0);K&&(n.hostname=O?"":S.length?S.shift():"",n.host=n.hostname,(A=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@"))&&(n.auth=A.shift(),n.hostname=A.shift(),n.host=n.hostname));return(E=E||n.host&&S.length)&&!O&&S.unshift(""),S.length>0?n.pathname=S.join("/"):(n.pathname=null,n.path=null),null===n.pathname&&null===n.search||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.auth=e.auth||n.auth,n.slashes=n.slashes||e.slashes,n.href=n.format(),n},i.prototype.parseHost=function(){var e=this.host,t=a.exec(e);t&&(":"!==(t=t[0])&&(this.port=t.substr(1)),e=e.substr(0,e.length-t.length)),e&&(this.hostname=e)},t.parse=g,t.resolve=function(e,t){return g(e,!1,!0).resolve(t)},t.resolveObject=function(e,t){return e?g(e,!1,!0).resolveObject(t):t},t.format=function(e){return"string"==typeof e&&(e=g(e)),e instanceof i?e.format():i.prototype.format.call(e)},t.Url=i},function(e,t,n){var r;e=n.nmd(e),function(){t&&t.nodeType,e&&e.nodeType;var i="object"==typeof n.g&&n.g;i.global!==i&&i.window!==i&&i.self;var o,a=2147483647,s=36,l=/^xn--/,c=/[^\x20-\x7E]/,u=/[\x2E\u3002\uFF0E\uFF61]/g,d={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},p=Math.floor,h=String.fromCharCode;function f(e){throw new RangeError(d[e])}function y(e,t){for(var n=e.length,r=[];n--;)r[n]=t(e[n]);return r}function m(e,t){var n=e.split("@"),r="";return n.length>1&&(r=n[0]+"@",e=n[1]),r+y((e=e.replace(u,".")).split("."),t).join(".")}function b(e){for(var t,n,r=[],i=0,o=e.length;i<o;)(t=e.charCodeAt(i++))>=55296&&t<=56319&&i<o?56320==(64512&(n=e.charCodeAt(i++)))?r.push(((1023&t)<<10)+(1023&n)+65536):(r.push(t),i--):r.push(t);return r}function g(e){return y(e,function(e){var t="";return e>65535&&(t+=h((e-=65536)>>>10&1023|55296),e=56320|1023&e),t+=h(e)}).join("")}function v(e){return e-48<10?e-22:e-65<26?e-65:e-97<26?e-97:s}function E(e,t){return e+22+75*(e<26)-((0!=t)<<5)}function w(e,t,n){var r=0;for(e=n?p(e/700):e>>1,e+=p(e/t);e>455;r+=s)e=p(e/35);return p(r+36*e/(e+38))}function S(e){var t,n,r,i,o,l,c,u,d,h,y=[],m=e.length,b=0,E=128,S=72;for((n=e.lastIndexOf("-"))<0&&(n=0),r=0;r<n;++r)e.charCodeAt(r)>=128&&f("not-basic"),y.push(e.charCodeAt(r));for(i=n>0?n+1:0;i<m;){for(o=b,l=1,c=s;i>=m&&f("invalid-input"),((u=v(e.charCodeAt(i++)))>=s||u>p((a-b)/l))&&f("overflow"),b+=u*l,!(u<(d=c<=S?1:c>=S+26?26:c-S));c+=s)l>p(a/(h=s-d))&&f("overflow"),l*=h;S=w(b-o,t=y.length+1,0==o),p(b/t)>a-E&&f("overflow"),E+=p(b/t),b%=t,y.splice(b++,0,E)}return g(y)}function K(e){var t,n,r,i,o,l,c,u,d,y,m,g,v,S,K,I=[];for(g=(e=b(e)).length,t=128,n=0,o=72,l=0;l<g;++l)(m=e[l])<128&&I.push(h(m));for(r=i=I.length,i&&I.push("-");r<g;){for(c=a,l=0;l<g;++l)(m=e[l])>=t&&m<c&&(c=m);for(c-t>p((a-n)/(v=r+1))&&f("overflow"),n+=(c-t)*v,t=c,l=0;l<g;++l)if((m=e[l])<t&&++n>a&&f("overflow"),m==t){for(u=n,d=s;!(u<(y=d<=o?1:d>=o+26?26:d-o));d+=s)K=u-y,S=s-y,I.push(h(E(y+K%S,0))),u=p(K/S);I.push(h(E(u,0))),o=w(n,v,r==i),n=0,++r}++n,++t}return I.join("")}o={version:"1.4.1",ucs2:{decode:b,encode:g},decode:S,encode:K,toASCII:function(e){return m(e,function(e){return c.test(e)?"xn--"+K(e):e})},toUnicode:function(e){return m(e,function(e){return l.test(e)?S(e.slice(4).toLowerCase()):e})}},void 0===(r=function(){return o}.call(t,n,t,e))||(e.exports=r)}()},(e,t,n)=>{"use strict";var r=n(113),i=n(122),o=n(121);e.exports={formats:o,parse:i,stringify:r}},(e,t,n)=>{"use strict";var r=n(114),i=n(120),o=n(121),a=Object.prototype.hasOwnProperty,s={brackets:function(e){return e+"[]"},comma:"comma",indices:function(e,t){return e+"["+t+"]"},repeat:function(e){return e}},l=Array.isArray,c=Array.prototype.push,u=function(e,t){c.apply(e,l(t)?t:[t])},d=Date.prototype.toISOString,p=o.default,h={addQueryPrefix:!1,allowDots:!1,allowEmptyArrays:!1,arrayFormat:"indices",charset:"utf-8",charsetSentinel:!1,commaRoundTrip:!1,delimiter:"&",encode:!0,encodeDotInKeys:!1,encoder:i.encode,encodeValuesOnly:!1,filter:void 0,format:p,formatter:o.formatters[p],indices:!1,serializeDate:function(e){return d.call(e)},skipNulls:!1,strictNullHandling:!1},f={},y=function e(t,n,o,a,s,c,d,p,y,m,b,g,v,E,w,S,K,I){for(var k,j=t,x=I,A=0,O=!1;void 0!==(x=x.get(f))&&!O;){var T=x.get(t);if(A+=1,void 0!==T){if(T===A)throw new RangeError("Cyclic object value");O=!0}void 0===x.get(f)&&(A=0)}if("function"==typeof m?j=m(n,j):j instanceof Date?j=v(j):"comma"===o&&l(j)&&(j=i.maybeMap(j,function(e){return e instanceof Date?v(e):e})),null===j){if(c)return y&&!S?y(n,h.encoder,K,"key",E):n;j=""}if("string"==typeof(k=j)||"number"==typeof k||"boolean"==typeof k||"symbol"==typeof k||"bigint"==typeof k||i.isBuffer(j))return y?[w(S?n:y(n,h.encoder,K,"key",E))+"="+w(y(j,h.encoder,K,"value",E))]:[w(n)+"="+w(String(j))];var R,D=[];if(void 0===j)return D;if("comma"===o&&l(j))S&&y&&(j=i.maybeMap(j,y)),R=[{value:j.length>0?j.join(",")||null:void 0}];else if(l(m))R=m;else{var C=Object.keys(j);R=b?C.sort(b):C}var P=p?String(n).replace(/\./g,"%2E"):String(n),M=a&&l(j)&&1===j.length?P+"[]":P;if(s&&l(j)&&0===j.length)return M+"[]";for(var N=0;N<R.length;++N){var _=R[N],L="object"==typeof _&&_&&void 0!==_.value?_.value:j[_];if(!d||null!==L){var J=g&&p?String(_).replace(/\./g,"%2E"):String(_),F=l(j)?"function"==typeof o?o(M,J):M:M+(g?"."+J:"["+J+"]");I.set(t,A);var V=r();V.set(f,I),u(D,e(L,F,o,a,s,c,d,p,"comma"===o&&S&&l(j)?null:y,m,b,g,v,E,w,S,K,V))}}return D};e.exports=function(e,t){var n,i=e,c=function(e){if(!e)return h;if(void 0!==e.allowEmptyArrays&&"boolean"!=typeof e.allowEmptyArrays)throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");if(void 0!==e.encodeDotInKeys&&"boolean"!=typeof e.encodeDotInKeys)throw new TypeError("`encodeDotInKeys` option can only be `true` or `false`, when provided");if(null!==e.encoder&&void 0!==e.encoder&&"function"!=typeof e.encoder)throw new TypeError("Encoder has to be a function.");var t=e.charset||h.charset;if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var n=o.default;if(void 0!==e.format){if(!a.call(o.formatters,e.format))throw new TypeError("Unknown format option provided.");n=e.format}var r,i=o.formatters[n],c=h.filter;if(("function"==typeof e.filter||l(e.filter))&&(c=e.filter),r=e.arrayFormat in s?e.arrayFormat:"indices"in e?e.indices?"indices":"repeat":h.arrayFormat,"commaRoundTrip"in e&&"boolean"!=typeof e.commaRoundTrip)throw new TypeError("`commaRoundTrip` must be a boolean, or absent");var u=void 0===e.allowDots?!0===e.encodeDotInKeys||h.allowDots:!!e.allowDots;return{addQueryPrefix:"boolean"==typeof e.addQueryPrefix?e.addQueryPrefix:h.addQueryPrefix,allowDots:u,allowEmptyArrays:"boolean"==typeof e.allowEmptyArrays?!!e.allowEmptyArrays:h.allowEmptyArrays,arrayFormat:r,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:h.charsetSentinel,commaRoundTrip:!!e.commaRoundTrip,delimiter:void 0===e.delimiter?h.delimiter:e.delimiter,encode:"boolean"==typeof e.encode?e.encode:h.encode,encodeDotInKeys:"boolean"==typeof e.encodeDotInKeys?e.encodeDotInKeys:h.encodeDotInKeys,encoder:"function"==typeof e.encoder?e.encoder:h.encoder,encodeValuesOnly:"boolean"==typeof e.encodeValuesOnly?e.encodeValuesOnly:h.encodeValuesOnly,filter:c,format:n,formatter:i,serializeDate:"function"==typeof e.serializeDate?e.serializeDate:h.serializeDate,skipNulls:"boolean"==typeof e.skipNulls?e.skipNulls:h.skipNulls,sort:"function"==typeof e.sort?e.sort:null,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:h.strictNullHandling}}(t);"function"==typeof c.filter?i=(0,c.filter)("",i):l(c.filter)&&(n=c.filter);var d=[];if("object"!=typeof i||null===i)return"";var p=s[c.arrayFormat],f="comma"===p&&c.commaRoundTrip;n||(n=Object.keys(i)),c.sort&&n.sort(c.sort);for(var m=r(),b=0;b<n.length;++b){var g=n[b],v=i[g];c.skipNulls&&null===v||u(d,y(v,g,p,f,c.allowEmptyArrays,c.strictNullHandling,c.skipNulls,c.encodeDotInKeys,c.encode?c.encoder:null,c.filter,c.sort,c.allowDots,c.serializeDate,c.format,c.formatter,c.encodeValuesOnly,c.charset,m))}var E=d.join(c.delimiter),w=!0===c.addQueryPrefix?"?":"";return c.charsetSentinel&&("iso-8859-1"===c.charset?w+="utf8=%26%2310003%3B&":w+="utf8=%E2%9C%93&"),E.length>0?w+E:""}},(e,t,n)=>{"use strict";var r=n(47),i=n(115),o=n(117),a=n(118),s=n(119)||a||o;e.exports=function(){var e,t={assert:function(e){if(!t.has(e))throw new r("Side channel does not contain "+i(e))},delete:function(t){return!!e&&e.delete(t)},get:function(t){return e&&e.get(t)},has:function(t){return!!e&&e.has(t)},set:function(t,n){e||(e=s()),e.set(t,n)}};return t}},(e,t,n)=>{var r="function"==typeof Map&&Map.prototype,i=Object.getOwnPropertyDescriptor&&r?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null,o=r&&i&&"function"==typeof i.get?i.get:null,a=r&&Map.prototype.forEach,s="function"==typeof Set&&Set.prototype,l=Object.getOwnPropertyDescriptor&&s?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null,c=s&&l&&"function"==typeof l.get?l.get:null,u=s&&Set.prototype.forEach,d="function"==typeof WeakMap&&WeakMap.prototype?WeakMap.prototype.has:null,p="function"==typeof WeakSet&&WeakSet.prototype?WeakSet.prototype.has:null,h="function"==typeof WeakRef&&WeakRef.prototype?WeakRef.prototype.deref:null,f=Boolean.prototype.valueOf,y=Object.prototype.toString,m=Function.prototype.toString,b=String.prototype.match,g=String.prototype.slice,v=String.prototype.replace,E=String.prototype.toUpperCase,w=String.prototype.toLowerCase,S=RegExp.prototype.test,K=Array.prototype.concat,I=Array.prototype.join,k=Array.prototype.slice,j=Math.floor,x="function"==typeof BigInt?BigInt.prototype.valueOf:null,A=Object.getOwnPropertySymbols,O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?Symbol.prototype.toString:null,T="function"==typeof Symbol&&"object"==typeof Symbol.iterator,R="function"==typeof Symbol&&Symbol.toStringTag&&(typeof Symbol.toStringTag===T||"symbol")?Symbol.toStringTag:null,D=Object.prototype.propertyIsEnumerable,C=("function"==typeof Reflect?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(e){return e.__proto__}:null);function P(e,t){if(e===1/0||e===-1/0||e!=e||e&&e>-1e3&&e<1e3||S.call(/e/,t))return t;var n=/[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;if("number"==typeof e){var r=e<0?-j(-e):j(e);if(r!==e){var i=String(r),o=g.call(t,i.length+1);return v.call(i,n,"$&_")+"."+v.call(v.call(o,/([0-9]{3})/g,"$&_"),/_$/,"")}}return v.call(t,n,"$&_")}var M=n(116),N=M.custom,_=U(N)?N:null,L={__proto__:null,double:'"',single:"'"},J={__proto__:null,double:/(["\\])/g,single:/(['\\])/g};function F(e,t,n){var r=n.quoteStyle||t,i=L[r];return i+e+i}function V(e){return v.call(String(e),/"/g,"&quot;")}function G(e){return!R||!("object"==typeof e&&(R in e||void 0!==e[R]))}function q(e){return"[object Array]"===W(e)&&G(e)}function B(e){return"[object RegExp]"===W(e)&&G(e)}function U(e){if(T)return e&&"object"==typeof e&&e instanceof Symbol;if("symbol"==typeof e)return!0;if(!e||"object"!=typeof e||!O)return!1;try{return O.call(e),!0}catch(e){}return!1}e.exports=function e(t,r,i,s){var l=r||{};if(z(l,"quoteStyle")&&!z(L,l.quoteStyle))throw new TypeError('option "quoteStyle" must be "single" or "double"');if(z(l,"maxStringLength")&&("number"==typeof l.maxStringLength?l.maxStringLength<0&&l.maxStringLength!==1/0:null!==l.maxStringLength))throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');var y=!z(l,"customInspect")||l.customInspect;if("boolean"!=typeof y&&"symbol"!==y)throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");if(z(l,"indent")&&null!==l.indent&&"\t"!==l.indent&&!(parseInt(l.indent,10)===l.indent&&l.indent>0))throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');if(z(l,"numericSeparator")&&"boolean"!=typeof l.numericSeparator)throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');var E=l.numericSeparator;if(void 0===t)return"undefined";if(null===t)return"null";if("boolean"==typeof t)return t?"true":"false";if("string"==typeof t)return Q(t,l);if("number"==typeof t){if(0===t)return 1/0/t>0?"0":"-0";var S=String(t);return E?P(t,S):S}if("bigint"==typeof t){var j=String(t)+"n";return E?P(t,j):j}var A=void 0===l.depth?5:l.depth;if(void 0===i&&(i=0),i>=A&&A>0&&"object"==typeof t)return q(t)?"[Array]":"[Object]";var N=function(e,t){var n;if("\t"===e.indent)n="\t";else{if(!("number"==typeof e.indent&&e.indent>0))return null;n=I.call(Array(e.indent+1)," ")}return{base:n,prev:I.call(Array(t+1),n)}}(l,i);if(void 0===s)s=[];else if($(s,t)>=0)return"[Circular]";function J(t,n,r){if(n&&(s=k.call(s)).push(n),r){var o={depth:l.depth};return z(l,"quoteStyle")&&(o.quoteStyle=l.quoteStyle),e(t,o,i+1,s)}return e(t,l,i+1,s)}if("function"==typeof t&&!B(t)){var Y=function(e){if(e.name)return e.name;var t=b.call(m.call(e),/^function\s*([\w$]+)/);if(t)return t[1];return null}(t),H=ne(t,J);return"[Function"+(Y?": "+Y:" (anonymous)")+"]"+(H.length>0?" { "+I.call(H,", ")+" }":"")}if(U(t)){var re=T?v.call(String(t),/^(Symbol\(.*\))_[^)]*$/,"$1"):O.call(t);return"object"!=typeof t||T?re:Z(re)}if(function(e){if(!e||"object"!=typeof e)return!1;if("undefined"!=typeof HTMLElement&&e instanceof HTMLElement)return!0;return"string"==typeof e.nodeName&&"function"==typeof e.getAttribute}(t)){for(var ie="<"+w.call(String(t.nodeName)),oe=t.attributes||[],ae=0;ae<oe.length;ae++)ie+=" "+oe[ae].name+"="+F(V(oe[ae].value),"double",l);return ie+=">",t.childNodes&&t.childNodes.length&&(ie+="..."),ie+="</"+w.call(String(t.nodeName))+">"}if(q(t)){if(0===t.length)return"[]";var se=ne(t,J);return N&&!function(e){for(var t=0;t<e.length;t++)if($(e[t],"\n")>=0)return!1;return!0}(se)?"["+te(se,N)+"]":"[ "+I.call(se,", ")+" ]"}if(function(e){return"[object Error]"===W(e)&&G(e)}(t)){var le=ne(t,J);return"cause"in Error.prototype||!("cause"in t)||D.call(t,"cause")?0===le.length?"["+String(t)+"]":"{ ["+String(t)+"] "+I.call(le,", ")+" }":"{ ["+String(t)+"] "+I.call(K.call("[cause]: "+J(t.cause),le),", ")+" }"}if("object"==typeof t&&y){if(_&&"function"==typeof t[_]&&M)return M(t,{depth:A-i});if("symbol"!==y&&"function"==typeof t.inspect)return t.inspect()}if(function(e){if(!o||!e||"object"!=typeof e)return!1;try{o.call(e);try{c.call(e)}catch(e){return!0}return e instanceof Map}catch(e){}return!1}(t)){var ce=[];return a&&a.call(t,function(e,n){ce.push(J(n,t,!0)+" => "+J(e,t))}),ee("Map",o.call(t),ce,N)}if(function(e){if(!c||!e||"object"!=typeof e)return!1;try{c.call(e);try{o.call(e)}catch(e){return!0}return e instanceof Set}catch(e){}return!1}(t)){var ue=[];return u&&u.call(t,function(e){ue.push(J(e,t))}),ee("Set",c.call(t),ue,N)}if(function(e){if(!d||!e||"object"!=typeof e)return!1;try{d.call(e,d);try{p.call(e,p)}catch(e){return!0}return e instanceof WeakMap}catch(e){}return!1}(t))return X("WeakMap");if(function(e){if(!p||!e||"object"!=typeof e)return!1;try{p.call(e,p);try{d.call(e,d)}catch(e){return!0}return e instanceof WeakSet}catch(e){}return!1}(t))return X("WeakSet");if(function(e){if(!h||!e||"object"!=typeof e)return!1;try{return h.call(e),!0}catch(e){}return!1}(t))return X("WeakRef");if(function(e){return"[object Number]"===W(e)&&G(e)}(t))return Z(J(Number(t)));if(function(e){if(!e||"object"!=typeof e||!x)return!1;try{return x.call(e),!0}catch(e){}return!1}(t))return Z(J(x.call(t)));if(function(e){return"[object Boolean]"===W(e)&&G(e)}(t))return Z(f.call(t));if(function(e){return"[object String]"===W(e)&&G(e)}(t))return Z(J(String(t)));if("undefined"!=typeof window&&t===window)return"{ [object Window] }";if("undefined"!=typeof globalThis&&t===globalThis||void 0!==n.g&&t===n.g)return"{ [object globalThis] }";if(!function(e){return"[object Date]"===W(e)&&G(e)}(t)&&!B(t)){var de=ne(t,J),pe=C?C(t)===Object.prototype:t instanceof Object||t.constructor===Object,he=t instanceof Object?"":"null prototype",fe=!pe&&R&&Object(t)===t&&R in t?g.call(W(t),8,-1):he?"Object":"",ye=(pe||"function"!=typeof t.constructor?"":t.constructor.name?t.constructor.name+" ":"")+(fe||he?"["+I.call(K.call([],fe||[],he||[]),": ")+"] ":"");return 0===de.length?ye+"{}":N?ye+"{"+te(de,N)+"}":ye+"{ "+I.call(de,", ")+" }"}return String(t)};var Y=Object.prototype.hasOwnProperty||function(e){return e in this};function z(e,t){return Y.call(e,t)}function W(e){return y.call(e)}function $(e,t){if(e.indexOf)return e.indexOf(t);for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1}function Q(e,t){if(e.length>t.maxStringLength){var n=e.length-t.maxStringLength,r="... "+n+" more character"+(n>1?"s":"");return Q(g.call(e,0,t.maxStringLength),t)+r}var i=J[t.quoteStyle||"single"];return i.lastIndex=0,F(v.call(v.call(e,i,"\\$1"),/[\x00-\x1f]/g,H),"single",t)}function H(e){var t=e.charCodeAt(0),n={8:"b",9:"t",10:"n",12:"f",13:"r"}[t];return n?"\\"+n:"\\x"+(t<16?"0":"")+E.call(t.toString(16))}function Z(e){return"Object("+e+")"}function X(e){return e+" { ? }"}function ee(e,t,n,r){return e+" ("+t+") {"+(r?te(n,r):I.call(n,", "))+"}"}function te(e,t){if(0===e.length)return"";var n="\n"+t.prev+t.base;return n+I.call(e,","+n)+"\n"+t.prev}function ne(e,t){var n=q(e),r=[];if(n){r.length=e.length;for(var i=0;i<e.length;i++)r[i]=z(e,i)?t(e[i],e):""}var o,a="function"==typeof A?A(e):[];if(T){o={};for(var s=0;s<a.length;s++)o["$"+a[s]]=a[s]}for(var l in e)z(e,l)&&(n&&String(Number(l))===l&&l<e.length||T&&o["$"+l]instanceof Symbol||(S.call(/[^\w$]/,l)?r.push(t(l,e)+": "+t(e[l],e)):r.push(l+": "+t(e[l],e))));if("function"==typeof A)for(var c=0;c<a.length;c++)D.call(e,a[c])&&r.push("["+t(a[c])+"]: "+t(e[a[c]],e));return r}},()=>{},(e,t,n)=>{"use strict";var r=n(115),i=n(47),o=function(e,t,n){for(var r,i=e;null!=(r=i.next);i=r)if(r.key===t)return i.next=r.next,n||(r.next=e.next,e.next=r),r};e.exports=function(){var e,t={assert:function(e){if(!t.has(e))throw new i("Side channel does not contain "+r(e))},delete:function(t){var n=e&&e.next,r=function(e,t){if(e)return o(e,t,!0)}(e,t);return r&&n&&n===r&&(e=void 0),!!r},get:function(t){return function(e,t){if(e){var n=o(e,t);return n&&n.value}}(e,t)},has:function(t){return function(e,t){return!!e&&!!o(e,t)}(e,t)},set:function(t,n){e||(e={next:void 0}),function(e,t,n){var r=o(e,t);r?r.value=n:e.next={key:t,next:e.next,value:n}}(e,t,n)}};return t}},(e,t,n)=>{"use strict";var r=n(40),i=n(39),o=n(115),a=n(47),s=r("%Map%",!0),l=i("Map.prototype.get",!0),c=i("Map.prototype.set",!0),u=i("Map.prototype.has",!0),d=i("Map.prototype.delete",!0),p=i("Map.prototype.size",!0);e.exports=!!s&&function(){var e,t={assert:function(e){if(!t.has(e))throw new a("Side channel does not contain "+o(e))},delete:function(t){if(e){var n=d(e,t);return 0===p(e)&&(e=void 0),n}return!1},get:function(t){if(e)return l(e,t)},has:function(t){return!!e&&u(e,t)},set:function(t,n){e||(e=new s),c(e,t,n)}};return t}},(e,t,n)=>{"use strict";var r=n(40),i=n(39),o=n(115),a=n(118),s=n(47),l=r("%WeakMap%",!0),c=i("WeakMap.prototype.get",!0),u=i("WeakMap.prototype.set",!0),d=i("WeakMap.prototype.has",!0),p=i("WeakMap.prototype.delete",!0);e.exports=l?function(){var e,t,n={assert:function(e){if(!n.has(e))throw new s("Side channel does not contain "+o(e))},delete:function(n){if(l&&n&&("object"==typeof n||"function"==typeof n)){if(e)return p(e,n)}else if(a&&t)return t.delete(n);return!1},get:function(n){return l&&n&&("object"==typeof n||"function"==typeof n)&&e?c(e,n):t&&t.get(n)},has:function(n){return l&&n&&("object"==typeof n||"function"==typeof n)&&e?d(e,n):!!t&&t.has(n)},set:function(n,r){l&&n&&("object"==typeof n||"function"==typeof n)?(e||(e=new l),u(e,n,r)):a&&(t||(t=a()),t.set(n,r))}};return n}:a},(e,t,n)=>{"use strict";var r=n(121),i=Object.prototype.hasOwnProperty,o=Array.isArray,a=function(){for(var e=[],t=0;t<256;++t)e.push("%"+((t<16?"0":"")+t.toString(16)).toUpperCase());return e}(),s=function(e,t){for(var n=t&&t.plainObjects?{__proto__:null}:{},r=0;r<e.length;++r)void 0!==e[r]&&(n[r]=e[r]);return n},l=1024;e.exports={arrayToObject:s,assign:function(e,t){return Object.keys(t).reduce(function(e,n){return e[n]=t[n],e},e)},combine:function(e,t){return[].concat(e,t)},compact:function(e){for(var t=[{obj:{o:e},prop:"o"}],n=[],r=0;r<t.length;++r)for(var i=t[r],a=i.obj[i.prop],s=Object.keys(a),l=0;l<s.length;++l){var c=s[l],u=a[c];"object"==typeof u&&null!==u&&-1===n.indexOf(u)&&(t.push({obj:a,prop:c}),n.push(u))}return function(e){for(;e.length>1;){var t=e.pop(),n=t.obj[t.prop];if(o(n)){for(var r=[],i=0;i<n.length;++i)void 0!==n[i]&&r.push(n[i]);t.obj[t.prop]=r}}}(t),e},decode:function(e,t,n){var r=e.replace(/\+/g," ");if("iso-8859-1"===n)return r.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(r)}catch(e){return r}},encode:function(e,t,n,i,o){if(0===e.length)return e;var s=e;if("symbol"==typeof e?s=Symbol.prototype.toString.call(e):"string"!=typeof e&&(s=String(e)),"iso-8859-1"===n)return escape(s).replace(/%u[0-9a-f]{4}/gi,function(e){return"%26%23"+parseInt(e.slice(2),16)+"%3B"});for(var c="",u=0;u<s.length;u+=l){for(var d=s.length>=l?s.slice(u,u+l):s,p=[],h=0;h<d.length;++h){var f=d.charCodeAt(h);45===f||46===f||95===f||126===f||f>=48&&f<=57||f>=65&&f<=90||f>=97&&f<=122||o===r.RFC1738&&(40===f||41===f)?p[p.length]=d.charAt(h):f<128?p[p.length]=a[f]:f<2048?p[p.length]=a[192|f>>6]+a[128|63&f]:f<55296||f>=57344?p[p.length]=a[224|f>>12]+a[128|f>>6&63]+a[128|63&f]:(h+=1,f=65536+((1023&f)<<10|1023&d.charCodeAt(h)),p[p.length]=a[240|f>>18]+a[128|f>>12&63]+a[128|f>>6&63]+a[128|63&f])}c+=p.join("")}return c},isBuffer:function(e){return!(!e||"object"!=typeof e)&&!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))},isRegExp:function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},maybeMap:function(e,t){if(o(e)){for(var n=[],r=0;r<e.length;r+=1)n.push(t(e[r]));return n}return t(e)},merge:function e(t,n,r){if(!n)return t;if("object"!=typeof n&&"function"!=typeof n){if(o(t))t.push(n);else{if(!t||"object"!=typeof t)return[t,n];(r&&(r.plainObjects||r.allowPrototypes)||!i.call(Object.prototype,n))&&(t[n]=!0)}return t}if(!t||"object"!=typeof t)return[t].concat(n);var a=t;return o(t)&&!o(n)&&(a=s(t,r)),o(t)&&o(n)?(n.forEach(function(n,o){if(i.call(t,o)){var a=t[o];a&&"object"==typeof a&&n&&"object"==typeof n?t[o]=e(a,n,r):t.push(n)}else t[o]=n}),t):Object.keys(n).reduce(function(t,o){var a=n[o];return i.call(t,o)?t[o]=e(t[o],a,r):t[o]=a,t},a)}}},e=>{"use strict";var t=String.prototype.replace,n=/%20/g,r="RFC1738",i="RFC3986";e.exports={default:i,formatters:{RFC1738:function(e){return t.call(e,n,"+")},RFC3986:function(e){return String(e)}},RFC1738:r,RFC3986:i}},(e,t,n)=>{"use strict";var r=n(120),i=Object.prototype.hasOwnProperty,o=Array.isArray,a={allowDots:!1,allowEmptyArrays:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decodeDotInKeys:!1,decoder:r.decode,delimiter:"&",depth:5,duplicates:"combine",ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictDepth:!1,strictNullHandling:!1,throwOnLimitExceeded:!1},s=function(e){return e.replace(/&#(\d+);/g,function(e,t){return String.fromCharCode(parseInt(t,10))})},l=function(e,t,n){if(e&&"string"==typeof e&&t.comma&&e.indexOf(",")>-1)return e.split(",");if(t.throwOnLimitExceeded&&n>=t.arrayLimit)throw new RangeError("Array limit exceeded. Only "+t.arrayLimit+" element"+(1===t.arrayLimit?"":"s")+" allowed in an array.");return e},c=function(e,t,n,o){if(e){var a=n.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,s=/(\[[^[\]]*])/g,c=n.depth>0&&/(\[[^[\]]*])/.exec(a),u=c?a.slice(0,c.index):a,d=[];if(u){if(!n.plainObjects&&i.call(Object.prototype,u)&&!n.allowPrototypes)return;d.push(u)}for(var p=0;n.depth>0&&null!==(c=s.exec(a))&&p<n.depth;){if(p+=1,!n.plainObjects&&i.call(Object.prototype,c[1].slice(1,-1))&&!n.allowPrototypes)return;d.push(c[1])}if(c){if(!0===n.strictDepth)throw new RangeError("Input depth exceeded depth option of "+n.depth+" and strictDepth is true");d.push("["+a.slice(c.index)+"]")}return function(e,t,n,i){var o=0;if(e.length>0&&"[]"===e[e.length-1]){var a=e.slice(0,-1).join("");o=Array.isArray(t)&&t[a]?t[a].length:0}for(var s=i?t:l(t,n,o),c=e.length-1;c>=0;--c){var u,d=e[c];if("[]"===d&&n.parseArrays)u=n.allowEmptyArrays&&(""===s||n.strictNullHandling&&null===s)?[]:r.combine([],s);else{u=n.plainObjects?{__proto__:null}:{};var p="["===d.charAt(0)&&"]"===d.charAt(d.length-1)?d.slice(1,-1):d,h=n.decodeDotInKeys?p.replace(/%2E/g,"."):p,f=parseInt(h,10);n.parseArrays||""!==h?!isNaN(f)&&d!==h&&String(f)===h&&f>=0&&n.parseArrays&&f<=n.arrayLimit?(u=[])[f]=s:"__proto__"!==h&&(u[h]=s):u={0:s}}s=u}return s}(d,t,n,o)}};e.exports=function(e,t){var n=function(e){if(!e)return a;if(void 0!==e.allowEmptyArrays&&"boolean"!=typeof e.allowEmptyArrays)throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");if(void 0!==e.decodeDotInKeys&&"boolean"!=typeof e.decodeDotInKeys)throw new TypeError("`decodeDotInKeys` option can only be `true` or `false`, when provided");if(null!==e.decoder&&void 0!==e.decoder&&"function"!=typeof e.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");if(void 0!==e.throwOnLimitExceeded&&"boolean"!=typeof e.throwOnLimitExceeded)throw new TypeError("`throwOnLimitExceeded` option must be a boolean");var t=void 0===e.charset?a.charset:e.charset,n=void 0===e.duplicates?a.duplicates:e.duplicates;if("combine"!==n&&"first"!==n&&"last"!==n)throw new TypeError("The duplicates option must be either combine, first, or last");return{allowDots:void 0===e.allowDots?!0===e.decodeDotInKeys||a.allowDots:!!e.allowDots,allowEmptyArrays:"boolean"==typeof e.allowEmptyArrays?!!e.allowEmptyArrays:a.allowEmptyArrays,allowPrototypes:"boolean"==typeof e.allowPrototypes?e.allowPrototypes:a.allowPrototypes,allowSparse:"boolean"==typeof e.allowSparse?e.allowSparse:a.allowSparse,arrayLimit:"number"==typeof e.arrayLimit?e.arrayLimit:a.arrayLimit,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:a.charsetSentinel,comma:"boolean"==typeof e.comma?e.comma:a.comma,decodeDotInKeys:"boolean"==typeof e.decodeDotInKeys?e.decodeDotInKeys:a.decodeDotInKeys,decoder:"function"==typeof e.decoder?e.decoder:a.decoder,delimiter:"string"==typeof e.delimiter||r.isRegExp(e.delimiter)?e.delimiter:a.delimiter,depth:"number"==typeof e.depth||!1===e.depth?+e.depth:a.depth,duplicates:n,ignoreQueryPrefix:!0===e.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof e.interpretNumericEntities?e.interpretNumericEntities:a.interpretNumericEntities,parameterLimit:"number"==typeof e.parameterLimit?e.parameterLimit:a.parameterLimit,parseArrays:!1!==e.parseArrays,plainObjects:"boolean"==typeof e.plainObjects?e.plainObjects:a.plainObjects,strictDepth:"boolean"==typeof e.strictDepth?!!e.strictDepth:a.strictDepth,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:a.strictNullHandling,throwOnLimitExceeded:"boolean"==typeof e.throwOnLimitExceeded&&e.throwOnLimitExceeded}}(t);if(""===e||null==e)return n.plainObjects?{__proto__:null}:{};for(var u="string"==typeof e?function(e,t){var n={__proto__:null},c=t.ignoreQueryPrefix?e.replace(/^\?/,""):e;c=c.replace(/%5B/gi,"[").replace(/%5D/gi,"]");var u=t.parameterLimit===1/0?void 0:t.parameterLimit,d=c.split(t.delimiter,t.throwOnLimitExceeded?u+1:u);if(t.throwOnLimitExceeded&&d.length>u)throw new RangeError("Parameter limit exceeded. Only "+u+" parameter"+(1===u?"":"s")+" allowed.");var p,h=-1,f=t.charset;if(t.charsetSentinel)for(p=0;p<d.length;++p)0===d[p].indexOf("utf8=")&&("utf8=%E2%9C%93"===d[p]?f="utf-8":"utf8=%26%2310003%3B"===d[p]&&(f="iso-8859-1"),h=p,p=d.length);for(p=0;p<d.length;++p)if(p!==h){var y,m,b=d[p],g=b.indexOf("]="),v=-1===g?b.indexOf("="):g+1;-1===v?(y=t.decoder(b,a.decoder,f,"key"),m=t.strictNullHandling?null:""):(y=t.decoder(b.slice(0,v),a.decoder,f,"key"),m=r.maybeMap(l(b.slice(v+1),t,o(n[y])?n[y].length:0),function(e){return t.decoder(e,a.decoder,f,"value")})),m&&t.interpretNumericEntities&&"iso-8859-1"===f&&(m=s(String(m))),b.indexOf("[]=")>-1&&(m=o(m)?[m]:m);var E=i.call(n,y);E&&"combine"===t.duplicates?n[y]=r.combine(n[y],m):E&&"last"!==t.duplicates||(n[y]=m)}return n}(e,n):e,d=n.plainObjects?{__proto__:null}:{},p=Object.keys(u),h=0;h<p.length;++h){var f=p[h],y=c(f,u[f],n,"string"==typeof e);d=r.merge(d,y,n)}return!0===n.allowSparse?d:r.compact(d)}},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isArguments=t.defaults=t.noop=void 0;const r=n(124);t.defaults=r;const i=n(125);t.isArguments=i,t.noop=function(){}},e=>{var t=9007199254740991,n="[object Arguments]",r="[object Function]",i="[object GeneratorFunction]",o=/^(?:0|[1-9]\d*)$/;function a(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}var s=Object.prototype,l=s.hasOwnProperty,c=s.toString,u=s.propertyIsEnumerable,d=Math.max;function p(e,t){var r=v(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&E(e)}(e)&&l.call(e,"callee")&&(!u.call(e,"callee")||c.call(e)==n)}(e)?function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}(e.length,String):[],i=r.length,o=!!i;for(var a in e)!t&&!l.call(e,a)||o&&("length"==a||b(a,i))||r.push(a);return r}function h(e,t,n,r){return void 0===e||g(e,s[n])&&!l.call(r,n)?t:e}function f(e,t,n){var r=e[t];l.call(e,t)&&g(r,n)&&(void 0!==n||t in e)||(e[t]=n)}function y(e){if(!w(e))return function(e){var t=[];if(null!=e)for(var n in Object(e))t.push(n);return t}(e);var t,n,r,i=(n=(t=e)&&t.constructor,r="function"==typeof n&&n.prototype||s,t===r),o=[];for(var a in e)("constructor"!=a||!i&&l.call(e,a))&&o.push(a);return o}function m(e,t){return t=d(void 0===t?e.length-1:t,0),function(){for(var n=arguments,r=-1,i=d(n.length-t,0),o=Array(i);++r<i;)o[r]=n[t+r];r=-1;for(var s=Array(t+1);++r<t;)s[r]=n[r];return s[t]=o,a(e,this,s)}}function b(e,n){return!!(n=null==n?t:n)&&("number"==typeof e||o.test(e))&&e>-1&&e%1==0&&e<n}function g(e,t){return e===t||e!=e&&t!=t}var v=Array.isArray;function E(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=t}(e.length)&&!function(e){var t=w(e)?c.call(e):"";return t==r||t==i}(e)}function w(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}var S,K=(S=function(e,t,n,r){!function(e,t,n,r){n||(n={});for(var i=-1,o=t.length;++i<o;){var a=t[i],s=r?r(n[a],e[a],a,n,e):void 0;f(n,a,void 0===s?e[a]:s)}}(t,function(e){return E(e)?p(e,!0):y(e)}(t),e,r)},m(function(e,t){var n=-1,r=t.length,i=r>1?t[r-1]:void 0,o=r>2?t[2]:void 0;for(i=S.length>3&&"function"==typeof i?(r--,i):void 0,o&&function(e,t,n){if(!w(n))return!1;var r=typeof t;return!!("number"==r?E(n)&&b(t,n.length):"string"==r&&t in n)&&g(n[t],e)}(t[0],t[1],o)&&(i=r<3?void 0:i,r=1),e=Object(e);++n<r;){var a=t[n];a&&S(e,a,n,i)}return e})),I=m(function(e){return e.push(void 0,h),a(K,void 0,e)});e.exports=I},e=>{var t=9007199254740991,n="[object Function]",r="[object GeneratorFunction]",i=Object.prototype,o=i.hasOwnProperty,a=i.toString,s=i.propertyIsEnumerable;e.exports=function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&function(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=t}(e.length)&&!function(e){var t=function(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}(e)?a.call(e):"";return t==n||t==r}(e)}(e)}(e)&&o.call(e,"callee")&&(!s.call(e,"callee")||"[object Arguments]"==a.call(e))}},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.genRedactedString=t.getStringValue=t.MAX_ARGUMENT_LENGTH=void 0;const r=n(127);t.MAX_ARGUMENT_LENGTH=200;function i(e){if(null!==e)switch(typeof e){case"boolean":case"number":return;case"object":if(Buffer.isBuffer(e))return e.toString("hex");if(Array.isArray(e))return e.join(",");try{return JSON.stringify(e)}catch(e){return}case"string":return e}}function o(e,t){const{length:n}=e;return n<=t?e:e.slice(0,t)+' ... <REDACTED full-length="'+n+'">'}t.getStringValue=i,t.genRedactedString=o,t.default=function(e){const t=(0,r.default)(`ioredis:${e}`);function n(...e){if(t.enabled){for(let t=1;t<e.length;t++){const n=i(e[t]);"string"==typeof n&&n.length>200&&(e[t]=o(n,200))}return t.apply(null,e)}}return Object.defineProperties(n,{namespace:{get:()=>t.namespace},enabled:{get:()=>t.enabled},destroy:{get:()=>t.destroy},log:{get:()=>t.log,set(e){t.log=e}}}),n}},(e,t,n)=>{t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const n="color: "+this.color;t.splice(1,0,n,"color: inherit");let r=0,i=0;t[0].replace(/%[a-zA-Z%]/g,e=>{"%%"!==e&&(r++,"%c"===e&&(i=r))}),t.splice(i,0,n)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")||t.storage.getItem("DEBUG")}catch(e){}!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG);return e},t.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;let e;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&(e=navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/))&&parseInt(e[1],10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=n(128)(t);const{formatters:r}=e.exports;r.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},(e,t,n)=>{e.exports=function(e){function t(e){let n,i,o,a=null;function s(...e){if(!s.enabled)return;const r=s,i=Number(new Date),o=i-(n||i);r.diff=o,r.prev=n,r.curr=i,n=i,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let a=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,(n,i)=>{if("%%"===n)return"%";a++;const o=t.formatters[i];if("function"==typeof o){const t=e[a];n=o.call(r,t),e.splice(a,1),a--}return n}),t.formatArgs.call(r,e);(r.log||t.log).apply(r,e)}return s.namespace=e,s.useColors=t.useColors(),s.color=t.selectColor(e),s.extend=r,s.destroy=t.destroy,Object.defineProperty(s,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==a?a:(i!==t.namespaces&&(i=t.namespaces,o=t.enabled(e)),o),set:e=>{a=e}}),"function"==typeof t.init&&t.init(s),s}function r(e,n){const r=t(this.namespace+(void 0===n?":":n)+e);return r.log=this.log,r}function i(e,t){let n=0,r=0,i=-1,o=0;for(;n<e.length;)if(r<t.length&&(t[r]===e[n]||"*"===t[r]))"*"===t[r]?(i=r,o=n,r++):(n++,r++);else{if(-1===i)return!1;r=i+1,o++,n=o}for(;r<t.length&&"*"===t[r];)r++;return r===t.length}return t.debug=t,t.default=t,t.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},t.disable=function(){const e=[...t.names,...t.skips.map(e=>"-"+e)].join(",");return t.enable(""),e},t.enable=function(e){t.save(e),t.namespaces=e,t.names=[],t.skips=[];const n=("string"==typeof e?e:"").trim().replace(/\s+/g,",").split(",").filter(Boolean);for(const e of n)"-"===e[0]?t.skips.push(e.slice(1)):t.names.push(e)},t.enabled=function(e){for(const n of t.skips)if(i(e,n))return!1;for(const n of t.names)if(i(e,n))return!0;return!1},t.humanize=n(129),t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach(n=>{t[n]=e[n]}),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return t.colors[Math.abs(n)%t.colors.length]},t.enable(t.load()),t}},e=>{var t=1e3,n=60*t,r=60*n,i=24*r,o=7*i,a=365.25*i;function s(e,t,n,r){var i=t>=1.5*n;return Math.round(e/n)+" "+r+(i?"s":"")}e.exports=function(e,l){l=l||{};var c=typeof e;if("string"===c&&e.length>0)return function(e){if((e=String(e)).length>100)return;var s=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!s)return;var l=parseFloat(s[1]);switch((s[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return l*a;case"weeks":case"week":case"w":return l*o;case"days":case"day":case"d":return l*i;case"hours":case"hour":case"hrs":case"hr":case"h":return l*r;case"minutes":case"minute":case"mins":case"min":case"m":return l*n;case"seconds":case"second":case"secs":case"sec":case"s":return l*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return l;default:return}}(e);if("number"===c&&isFinite(e))return l.long?function(e){var o=Math.abs(e);if(o>=i)return s(e,o,i,"day");if(o>=r)return s(e,o,r,"hour");if(o>=n)return s(e,o,n,"minute");if(o>=t)return s(e,o,t,"second");return e+" ms"}(e):function(e){var o=Math.abs(e);if(o>=i)return Math.round(e/i)+"d";if(o>=r)return Math.round(e/r)+"h";if(o>=n)return Math.round(e/n)+"m";if(o>=t)return Math.round(e/t)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n="-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIJAKSVpiDswLcwMA0GCSqGSIb3DQEBBQUAMD4xFjAUBgNV\nBAoMDUdhcmFudGlhIERhdGExJDAiBgNVBAMMG1NTTCBDZXJ0aWZpY2F0aW9uIEF1\ndGhvcml0eTAeFw0xMzEwMDExMjE0NTVaFw0yMzA5MjkxMjE0NTVaMD4xFjAUBgNV\nBAoMDUdhcmFudGlhIERhdGExJDAiBgNVBAMMG1NTTCBDZXJ0aWZpY2F0aW9uIEF1\ndGhvcml0eTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALZqkh/DczWP\nJnxnHLQ7QL0T4B4CDKWBKCcisriGbA6ZePWVNo4hfKQC6JrzfR+081NeD6VcWUiz\nrmd+jtPhIY4c+WVQYm5PKaN6DT1imYdxQw7aqO5j2KUCEh/cznpLxeSHoTxlR34E\nQwF28Wl3eg2vc5ct8LjU3eozWVk3gb7alx9mSA2SgmuX5lEQawl++rSjsBStemY2\nBDwOpAMXIrdEyP/cVn8mkvi/BDs5M5G+09j0gfhyCzRWMQ7Hn71u1eolRxwVxgi3\nTMn+/vTaFSqxKjgck6zuAYjBRPaHe7qLxHNr1So/Mc9nPy+3wHebFwbIcnUojwbp\n4nctkWbjb2cCAwEAAaNQME4wHQYDVR0OBBYEFP1whtcrydmW3ZJeuSoKZIKjze3w\nMB8GA1UdIwQYMBaAFP1whtcrydmW3ZJeuSoKZIKjze3wMAwGA1UdEwQFMAMBAf8w\nDQYJKoZIhvcNAQEFBQADggEBAG2erXhwRAa7+ZOBs0B6X57Hwyd1R4kfmXcs0rta\nlbPpvgULSiB+TCbf3EbhJnHGyvdCY1tvlffLjdA7HJ0PCOn+YYLBA0pTU/dyvrN6\nSu8NuS5yubnt9mb13nDGYo1rnt0YRfxN+8DM3fXIVr038A30UlPX2Ou1ExFJT0MZ\nuFKY6ZvLdI6/1cbgmguMlAhM+DhKyV6Sr5699LM3zqeI816pZmlREETYkGr91q7k\nBpXJu/dtHaGxg1ZGu6w/PCsYGUcECWENYD4VQPd8N32JjOfu6vEgoEAwfPP+3oGp\nZ4m3ewACcWOAenqflb+cQYC4PsF7qbXDmRaWrbKntOlZ3n0=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGMTCCBBmgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwajELMAkGA1UEBhMCVVMx\nCzAJBgNVBAgMAkNBMQswCQYDVQQHDAJDQTESMBAGA1UECgwJUmVkaXNMYWJzMS0w\nKwYDVQQDDCRSZWRpc0xhYnMgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcN\nMTgwMjI1MTUzNzM3WhcNMjgwMjIzMTUzNzM3WjBfMQswCQYDVQQGEwJVUzELMAkG\nA1UECAwCQ0ExEjAQBgNVBAoMCVJlZGlzTGFiczEvMC0GA1UEAwwmUkNQIEludGVy\nbWVkaWF0ZSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUA\nA4ICDwAwggIKAoICAQDf9dqbxc8Bq7Ctq9rWcxrGNKKHivqLAFpPq02yLPx6fsOv\nTq7GsDChAYBBc4v7Y2Ap9RD5Vs3dIhEANcnolf27QwrG9RMnnvzk8pCvp1o6zSU4\nVuOE1W66/O1/7e2rVxyrnTcP7UgK43zNIXu7+tiAqWsO92uSnuMoGPGpeaUm1jym\nhjWKtkAwDFSqvHY+XL5qDVBEjeUe+WHkYUg40cAXjusAqgm2hZt29c2wnVrxW25W\nP0meNlzHGFdA2AC5z54iRiqj57dTfBTkHoBczQxcyw6hhzxZQ4e5I5zOKjXXEhZN\nr0tA3YC14CTabKRus/JmZieyZzRgEy2oti64tmLYTqSlAD78pRL40VNoaSYetXLw\nhhNsXCHgWaY6d5bLOc/aIQMAV5oLvZQKvuXAF1IDmhPA+bZbpWipp0zagf1P1H3s\nUzsMdn2KM0ejzgotbtNlj5TcrVwpmvE3ktvUAuA+hi3FkVx1US+2Gsp5x4YOzJ7u\nP1WPk6ShF0JgnJH2ILdj6kttTWwFzH17keSFICWDfH/+kM+k7Y1v3EXMQXE7y0T9\nMjvJskz6d/nv+sQhY04xt64xFMGTnZjlJMzfQNi7zWFLTZnDD0lPowq7l3YiPoTT\nt5Xky83lu0KZsZBo0WlWaDG00gLVdtRgVbcuSWxpi5BdLb1kRab66JptWjxwXQID\nAQABo4HrMIHoMDoGA1UdHwQzMDEwL6AtoCuGKWh0dHBzOi8vcmwtY2Etc2VydmVy\nLnJlZGlzbGFicy5jb20vdjEvY3JsMEYGCCsGAQUFBwEBBDowODA2BggrBgEFBQcw\nAYYqaHR0cHM6Ly9ybC1jYS1zZXJ2ZXIucmVkaXNsYWJzLmNvbS92MS9vY3NwMB0G\nA1UdDgQWBBQHar5OKvQUpP2qWt6mckzToeCOHDAfBgNVHSMEGDAWgBQi42wH6hM4\nL2sujEvLM0/u8lRXTzASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIB\nhjANBgkqhkiG9w0BAQsFAAOCAgEAirEn/iTsAKyhd+pu2W3Z5NjCko4NPU0EYUbr\nAP7+POK2rzjIrJO3nFYQ/LLuC7KCXG+2qwan2SAOGmqWst13Y+WHp44Kae0kaChW\nvcYLXXSoGQGC8QuFSNUdaeg3RbMDYFT04dOkqufeWVccoHVxyTSg9eD8LZuHn5jw\n7QDLiEECBmIJHk5Eeo2TAZrx4Yx6ufSUX5HeVjlAzqwtAqdt99uCJ/EL8bgpWbe+\nXoSpvUv0SEC1I1dCAhCKAvRlIOA6VBcmzg5Am12KzkqTul12/VEFIgzqu0Zy2Jbc\nAUPrYVu/+tOGXQaijy7YgwH8P8n3s7ZeUa1VABJHcxrxYduDDJBLZi+MjheUDaZ1\njQRHYevI2tlqeSBqdPKG4zBY5lS0GiAlmuze5oENt0P3XboHoZPHiqcK3VECgTVh\n/BkJcuudETSJcZDmQ8YfoKfBzRQNg2sv/hwvUv73Ss51Sco8GEt2lD8uEdib1Q6z\nzDT5lXJowSzOD5ZA9OGDjnSRL+2riNtKWKEqvtEG3VBJoBzu9GoxbAc7wIZLxmli\niF5a/Zf5X+UXD3s4TMmy6C4QZJpAA2egsSQCnraWO2ULhh7iXMysSkF/nzVfZn43\niqpaB8++9a37hWq14ZmOv0TJIDz//b2+KC4VFXWQ5W5QC6whsjT+OlG4p5ZYG0jo\n616pxqo=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFujCCA6KgAwIBAgIJAJ1aTT1lu2ScMA0GCSqGSIb3DQEBCwUAMGoxCzAJBgNV\nBAYTAlVTMQswCQYDVQQIDAJDQTELMAkGA1UEBwwCQ0ExEjAQBgNVBAoMCVJlZGlz\nTGFiczEtMCsGA1UEAwwkUmVkaXNMYWJzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9y\naXR5MB4XDTE4MDIyNTE1MjA0MloXDTM4MDIyMDE1MjA0MlowajELMAkGA1UEBhMC\nVVMxCzAJBgNVBAgMAkNBMQswCQYDVQQHDAJDQTESMBAGA1UECgwJUmVkaXNMYWJz\nMS0wKwYDVQQDDCRSZWRpc0xhYnMgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkw\nggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDLEjXy7YrbN5Waau5cd6g1\nG5C2tMmeTpZ0duFAPxNU4oE3RHS5gGiok346fUXuUxbZ6QkuzeN2/2Z+RmRcJhQY\nDm0ZgdG4x59An1TJfnzKKoWj8ISmoHS/TGNBdFzXV7FYNLBuqZouqePI6ReC6Qhl\npp45huV32Q3a6IDrrvx7Wo5ZczEQeFNbCeCOQYNDdTmCyEkHqc2AGo8eoIlSTutT\nULOC7R5gzJVTS0e1hesQ7jmqHjbO+VQS1NAL4/5K6cuTEqUl+XhVhPdLWBXJQ5ag\n54qhX4v+ojLzeU1R/Vc6NjMvVtptWY6JihpgplprN0Yh2556ewcXMeturcKgXfGJ\nxeYzsjzXerEjrVocX5V8BNrg64NlifzTMKNOOv4fVZszq1SIHR8F9ROrqiOdh8iC\nJpUbLpXH9hWCSEO6VRMB2xJoKu3cgl63kF30s77x7wLFMEHiwsQRKxooE1UhgS9K\n2sO4TlQ1eWUvFvHSTVDQDlGQ6zu4qjbOpb3Q8bQwoK+ai2alkXVR4Ltxe9QlgYK3\nStsnPhruzZGA0wbXdpw0bnM+YdlEm5ffSTpNIfgHeaa7Dtb801FtA71ZlH7A6TaI\nSIQuUST9EKmv7xrJyx0W1pGoPOLw5T029aTjnICSLdtV9bLwysrLhIYG5bnPq78B\ncS+jZHFGzD7PUVGQD01nOQIDAQABo2MwYTAdBgNVHQ4EFgQUIuNsB+oTOC9rLoxL\nyzNP7vJUV08wHwYDVR0jBBgwFoAUIuNsB+oTOC9rLoxLyzNP7vJUV08wDwYDVR0T\nAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIBAHfg\nz5pMNUAKdMzK1aS1EDdK9yKz4qicILz5czSLj1mC7HKDRy8cVADUxEICis++CsCu\nrYOvyCVergHQLREcxPq4rc5Nq1uj6J6649NEeh4WazOOjL4ZfQ1jVznMbGy+fJm3\n3Hoelv6jWRG9iqeJZja7/1s6YC6bWymI/OY1e4wUKeNHAo+Vger7MlHV+RuabaX+\nhSJ8bJAM59NCM7AgMTQpJCncrcdLeceYniGy5Q/qt2b5mJkQVkIdy4TPGGB+AXDJ\nD0q3I/JDRkDUFNFdeW0js7fHdsvCR7O3tJy5zIgEV/o/BCkmJVtuwPYOrw/yOlKj\nTY/U7ATAx9VFF6/vYEOMYSmrZlFX+98L6nJtwDqfLB5VTltqZ4H/KBxGE3IRSt9l\nFXy40U+LnXzhhW+7VBAvyYX8GEXhHkKU8Gqk1xitrqfBXY74xKgyUSTolFSfFVgj\nmcM/X4K45bka+qpkj7Kfv/8D4j6aZekwhN2ly6hhC1SmQ8qjMjpG/mrWOSSHZFmf\nybu9iD2AYHeIOkshIl6xYIa++Q/00/vs46IzAbQyriOi0XxlSMMVtPx0Q3isp+ji\nn8Mq9eOuxYOEQ4of8twUkUDd528iwGtEdwf0Q01UyT84S62N8AySl1ZBKXJz6W4F\nUhWfa/HQYOAPDdEjNgnVwLI23b8t0TozyCWw7q8h\n-----END CERTIFICATE-----\n\n-----BEGIN CERTIFICATE-----\nMIIEjzCCA3egAwIBAgIQe55B/ALCKJDZtdNT8kD6hTANBgkqhkiG9w0BAQsFADBM\nMSAwHgYDVQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSMzETMBEGA1UEChMKR2xv\nYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjAeFw0yMjAxMjYxMjAwMDBaFw0y\nNTAxMjYwMDAwMDBaMFgxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9iYWxTaWdu\nIG52LXNhMS4wLAYDVQQDEyVHbG9iYWxTaWduIEF0bGFzIFIzIE9WIFRMUyBDQSAy\nMDIyIFEyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmGmg1LW9b7Lf\n8zDD83yBDTEkt+FOxKJZqF4veWc5KZsQj9HfnUS2e5nj/E+JImlGPsQuoiosLuXD\nBVBNAMcUFa11buFMGMeEMwiTmCXoXRrXQmH0qjpOfKgYc5gHG3BsRGaRrf7VR4eg\nofNMG9wUBw4/g/TT7+bQJdA4NfE7Y4d5gEryZiBGB/swaX6Jp/8MF4TgUmOWmalK\ndZCKyb4sPGQFRTtElk67F7vU+wdGcrcOx1tDcIB0ncjLPMnaFicagl+daWGsKqTh\ncounQb6QJtYHa91KvCfKWocMxQ7OIbB5UARLPmC4CJ1/f8YFm35ebfzAeULYdGXu\njE9CLor0OwIDAQABo4IBXzCCAVswDgYDVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQG\nCCsGAQUFBwMBBggrBgEFBQcDAjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQW\nBBSH5Zq7a7B/t95GfJWkDBpA8HHqdjAfBgNVHSMEGDAWgBSP8Et/qC5FJK5NUPpj\nmove4t0bvDB7BggrBgEFBQcBAQRvMG0wLgYIKwYBBQUHMAGGImh0dHA6Ly9vY3Nw\nMi5nbG9iYWxzaWduLmNvbS9yb290cjMwOwYIKwYBBQUHMAKGL2h0dHA6Ly9zZWN1\ncmUuZ2xvYmFsc2lnbi5jb20vY2FjZXJ0L3Jvb3QtcjMuY3J0MDYGA1UdHwQvMC0w\nK6ApoCeGJWh0dHA6Ly9jcmwuZ2xvYmFsc2lnbi5jb20vcm9vdC1yMy5jcmwwIQYD\nVR0gBBowGDAIBgZngQwBAgIwDAYKKwYBBAGgMgoBAjANBgkqhkiG9w0BAQsFAAOC\nAQEAKRic9/f+nmhQU/wz04APZLjgG5OgsuUOyUEZjKVhNGDwxGTvKhyXGGAMW2B/\n3bRi+aElpXwoxu3pL6fkElbX3B0BeS5LoDtxkyiVEBMZ8m+sXbocwlPyxrPbX6mY\n0rVIvnuUeBH8X0L5IwfpNVvKnBIilTbcebfHyXkPezGwz7E1yhUULjJFm2bt0SdX\ny+4X/WeiiYIv+fTVgZZgl+/2MKIsu/qdBJc3f3TvJ8nz+Eax1zgZmww+RSQWeOj3\n15Iw6Z5FX+NwzY/Ab+9PosR5UosSeq+9HhtaxZttXG1nVh+avYPGYddWmiMT90J5\nZgKnO/Fx2hBgTxhOTMYaD312kg==\n-----END CERTIFICATE-----\n\n-----BEGIN CERTIFICATE-----\nMIIDXzCCAkegAwIBAgILBAAAAAABIVhTCKIwDQYJKoZIhvcNAQELBQAwTDEgMB4G\nA1UECxMXR2xvYmFsU2lnbiBSb290IENBIC0gUjMxEzARBgNVBAoTCkdsb2JhbFNp\nZ24xEzARBgNVBAMTCkdsb2JhbFNpZ24wHhcNMDkwMzE4MTAwMDAwWhcNMjkwMzE4\nMTAwMDAwWjBMMSAwHgYDVQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSMzETMBEG\nA1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjCCASIwDQYJKoZI\nhvcNAQEBBQADggEPADCCAQoCggEBAMwldpB5BngiFvXAg7aEyiie/QV2EcWtiHL8\nRgJDx7KKnQRfJMsuS+FggkbhUqsMgUdwbN1k0ev1LKMPgj0MK66X17YUhhB5uzsT\ngHeMCOFJ0mpiLx9e+pZo34knlTifBtc+ycsmWQ1z3rDI6SYOgxXG71uL0gRgykmm\nKPZpO/bLyCiR5Z2KYVc3rHQU3HTgOu5yLy6c+9C7v/U9AOEGM+iCK65TpjoWc4zd\nQQ4gOsC0p6Hpsk+QLjJg6VfLuQSSaGjlOCZgdbKfd/+RFO+uIEn8rUAVSNECMWEZ\nXriX7613t2Saer9fwRPvm2L7DWzgVGkWqQPabumDk3F2xmmFghcCAwEAAaNCMEAw\nDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFI/wS3+o\nLkUkrk1Q+mOai97i3Ru8MA0GCSqGSIb3DQEBCwUAA4IBAQBLQNvAUKr+yAzv95ZU\nRUm7lgAJQayzE4aGKAczymvmdLm6AC2upArT9fHxD4q/c2dKg8dEe3jgr25sbwMp\njjM5RcOO5LlXbKr8EpbsU8Yt5CRsuZRj+9xTaGdWPoO4zzUhw8lo/s7awlOqzJCK\n6fBdRoyV3XpYKBovHd7NADdBj+1EbddTKJd+82cEHhXXipa0095MJ6RMG3NzdvQX\nmcIfeg7jLQitChws/zyrVQ4PkX4268NXSb7hLi18YIvDQVETI53O9zJrlAGomecs\nMx86OyXShkDOOyyGeMlhLxS67ttVb9+E7gUJTb0o2HLO02JQZR7rkpeDMdmztcpH\nWD9f\n-----END CERTIFICATE-----",r={RedisCloudFixed:{ca:n},RedisCloudFlexible:{ca:n}};t.default=r},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(30);class i extends r.RedisError{constructor(e,t){super(e),this.lastNodeError=t,Error.captureStackTrace(this,this.constructor)}get name(){return this.constructor.name}}t.default=i,i.defaultMessage="Failed to refresh slots cache."},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(133);class i extends r.Readable{constructor(e){super(e),this.opt=e,this._redisCursor="0",this._redisDrained=!1}_read(){if(this._redisDrained)return void this.push(null);const e=[this._redisCursor];this.opt.key&&e.unshift(this.opt.key),this.opt.match&&e.push("MATCH",this.opt.match),this.opt.type&&e.push("TYPE",this.opt.type),this.opt.count&&e.push("COUNT",String(this.opt.count)),this.opt.noValues&&e.push("NOVALUES"),this.opt.redis[this.opt.command](e,(e,t)=>{e?this.emit("error",e):(this._redisCursor=t[0]instanceof Buffer?t[0].toString():t[0],"0"===this._redisCursor&&(this._redisDrained=!0),this.push(t[1]))})}close(){this._redisDrained=!0}}t.default=i},()=>{},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addTransactionSupport=void 0;const r=n(109),i=n(27),o=n(135);t.addTransactionSupport=function(e){e.pipeline=function(e){const t=new o.default(this);return Array.isArray(e)&&t.addBatch(e),t};const{multi:t}=e;e.multi=function(e,n){if(void 0!==n||Array.isArray(e)||(n=e,e=null),n&&!1===n.pipeline)return t.call(this);const a=new o.default(this);a.multi(),Array.isArray(e)&&a.addBatch(e);const s=a.exec;a.exec=function(e){if(this.isCluster&&!this.redis.slots.length)return"wait"===this.redis.status&&this.redis.connect().catch(r.noop),(0,i.default)(new Promise((e,t)=>{this.redis.delayUntilReady(n=>{n?t(n):this.exec(a).then(e,t)})}),e);if(this._transactions>0&&s.call(a),this.nodeifiedPromise)return s.call(a);const t=s.call(a);return(0,i.default)(t.then(function(e){const t=e[e.length-1];if(void 0===t)throw new Error("Pipeline cannot be used to send any commands when the `exec()` has been called on it.");if(t[0]){t[0].previousErrors=[];for(let n=0;n<e.length-1;++n)e[n][0]&&t[0].previousErrors.push(e[n][0]);throw t[0]}return(0,r.wrapMultiResult)(t[1])}),e)};const{execBuffer:l}=a;return a.execBuffer=function(e){return this._transactions>0&&l.call(a),a.exec(e)},a};const{exec:n}=e;e.exec=function(e){return(0,i.default)(n.call(this).then(function(e){return Array.isArray(e)&&(e=(0,r.wrapMultiResult)(e)),e}),e)}}},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(108),i=n(25),o=n(27),a=n(34),s=n(107),l=n(109),c=n(136);class u extends c.default{constructor(e){super(),this.redis=e,this.isPipeline=!0,this.replyPending=0,this._queue=[],this._result=[],this._transactions=0,this._shaToScript={},this.isCluster="Cluster"===this.redis.constructor.name||this.redis.isCluster,this.options=e.options,Object.keys(e.scriptsSet).forEach(t=>{const n=e.scriptsSet[t];this._shaToScript[n.sha]=n,this[t]=e[t],this[t+"Buffer"]=e[t+"Buffer"]}),e.addedBuiltinSet.forEach(t=>{this[t]=e[t],this[t+"Buffer"]=e[t+"Buffer"]}),this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t});const t=this;Object.defineProperty(this,"length",{get:function(){return t._queue.length}})}fillResult(e,t){if("exec"===this._queue[t].name&&Array.isArray(e[1])){const n=e[1].length;for(let r=0;r<n;r++){if(e[1][r]instanceof Error)continue;const i=this._queue[t-(n-r)];try{e[1][r]=i.transformReply(e[1][r])}catch(t){e[1][r]=t}}}if(this._result[t]=e,--this.replyPending)return;if(this.isCluster){let e,t=!0;for(let n=0;n<this._result.length;++n){const r=this._result[n][0],o=this._queue[n];if(r){if("exec"===o.name&&"EXECABORT Transaction discarded because of previous errors."===r.message)continue;if(e){if(e.name!==r.name||e.message!==r.message){t=!1;break}}else e={name:r.name,message:r.message}}else if(!o.inTransaction){if(!((0,i.exists)(o.name)&&(0,i.hasFlag)(o.name,"readonly"))){t=!1;break}}}if(e&&t){const t=this,n=e.message.split(" "),r=this._queue;let i=!1;this._queue=[];for(let e=0;e<r.length;++e){if(!("ASK"!==n[0]||i||"asking"===r[e].name||r[e-1]&&"asking"===r[e-1].name)){const e=new s.default("asking");e.ignore=!0,this.sendCommand(e)}r[e].initPromise(),this.sendCommand(r[e]),i=r[e].inTransaction}let o=!0;void 0===this.leftRedirections&&(this.leftRedirections={});const a=function(){t.exec()},l=this.redis;if(l.handleError(e,this.leftRedirections,{moved:function(e,r){t.preferKey=r,l.slots[n[1]]=[r],l._groupsBySlot[n[1]]=l._groupsIds[l.slots[n[1]].join(";")],l.refreshSlotsCache(),t.exec()},ask:function(e,n){t.preferKey=n,t.exec()},tryagain:a,clusterDown:a,connectionClosed:a,maxRedirections:()=>{o=!1},defaults:()=>{o=!1}}),o)return}}let n=0;for(let e=0;e<this._queue.length-n;++e)this._queue[e+n].ignore&&(n+=1),this._result[e]=this._result[e+n];this.resolve(this._result.slice(0,this._result.length-n))}sendCommand(e){this._transactions>0&&(e.inTransaction=!0);const t=this._queue.length;return e.pipelineIndex=t,e.promise.then(e=>{this.fillResult([null,e],t)}).catch(e=>{this.fillResult([e],t)}),this._queue.push(e),this}addBatch(e){let t,n,r;for(let i=0;i<e.length;++i)t=e[i],n=t[0],r=t.slice(1),this[n].apply(this,r);return this}}t.default=u;const d=u.prototype.multi;u.prototype.multi=function(){return this._transactions+=1,d.apply(this,arguments)};const p=u.prototype.execBuffer;u.prototype.execBuffer=(0,a.deprecate)(function(){return this._transactions>0&&(this._transactions-=1),p.apply(this,arguments)},"Pipeline#execBuffer: Use Pipeline#exec instead"),u.prototype.exec=function(e){if(this.isCluster&&!this.redis.slots.length)return"wait"===this.redis.status&&this.redis.connect().catch(l.noop),e&&!this.nodeifiedPromise&&(this.nodeifiedPromise=!0,(0,o.default)(this.promise,e)),this.redis.delayUntilReady(t=>{t?this.reject(t):this.exec(e)}),this.promise;if(this._transactions>0)return this._transactions-=1,p.apply(this,arguments);let t;if(this.nodeifiedPromise||(this.nodeifiedPromise=!0,(0,o.default)(this.promise,e)),this._queue.length||this.resolve([]),this.isCluster){const e=[];for(let t=0;t<this._queue.length;t++){const n=this._queue[t].getKeys();if(n.length&&e.push(n[0]),n.length&&r.generateMulti(n)<0)return this.reject(new Error("All the keys in a pipeline command should belong to the same slot")),this.promise}if(e.length){if(t=function(e,t){const n=r(t[0]),i=e._groupsBySlot[n];for(let n=1;n<t.length;n++)if(e._groupsBySlot[r(t[n])]!==i)return-1;return n}(this.redis,e),t<0)return this.reject(new Error("All keys in the pipeline should belong to the same slots allocation group")),this.promise}else t=16384*Math.random()|0}const n=this;return function(){let e,r=n.replyPending=n._queue.length;n.isCluster&&(e={slot:t,redis:n.redis.connectionPool.nodes.all[n.preferKey]});let i,o="";const a={isPipeline:!0,destination:n.isCluster?e:{redis:n.redis},write(e){"string"!=typeof e?(i||(i=[]),o&&(i.push(Buffer.from(o,"utf8")),o=""),i.push(e)):o+=e,--r||(i?(o&&i.push(Buffer.from(o,"utf8")),a.destination.redis.stream.write(Buffer.concat(i))):a.destination.redis.stream.write(o),r=n._queue.length,o="",i=void 0)}};for(let t=0;t<n._queue.length;++t)n.redis.sendCommand(n._queue[t],a,e);n.promise}(),this.promise}},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(25),i=n(137),o=n(107),a=n(138);class s{constructor(){this.options={},this.scriptsSet={},this.addedBuiltinSet=new Set}getBuiltinCommands(){return l.slice(0)}createBuiltinCommand(e){return{string:c(null,e,"utf8"),buffer:c(null,e,null)}}addBuiltinCommand(e){this.addedBuiltinSet.add(e),this[e]=c(e,e,"utf8"),this[e+"Buffer"]=c(e+"Buffer",e,null)}defineCommand(e,t){const n=new a.default(t.lua,t.numberOfKeys,this.options.keyPrefix,t.readOnly);this.scriptsSet[e]=n,this[e]=u(e,e,n,"utf8"),this[e+"Buffer"]=u(e+"Buffer",e,n,null)}sendCommand(e,t,n){throw new Error('"sendCommand" is not implemented')}}const l=r.list.filter(e=>"monitor"!==e);function c(e,t,n){return void 0===n&&(n=t,t=null),function(...r){const a=t||r.shift();let s=r[r.length-1];"function"==typeof s?r.pop():s=void 0;const l={errorStack:this.options.showFriendlyErrorStack?new Error:void 0,keyPrefix:this.options.keyPrefix,replyEncoding:n};return(0,i.shouldUseAutoPipelining)(this,e,a)?(0,i.executeWithAutoPipelining)(this,e,a,r,s):this.sendCommand(new o.default(a,r,l,s))}}function u(e,t,n,r){return function(...o){const a="function"==typeof o[o.length-1]?o.pop():void 0,s={replyEncoding:r};return this.options.showFriendlyErrorStack&&(s.errorStack=new Error),(0,i.shouldUseAutoPipelining)(this,e,t)?(0,i.executeWithAutoPipelining)(this,e,t,o,a):n.execute(this,o,s,a)}}l.push("sentinel"),l.forEach(function(e){s.prototype[e]=c(e,e,"utf8"),s.prototype[e+"Buffer"]=c(e+"Buffer",e,null)}),s.prototype.call=c("call","utf8"),s.prototype.callBuffer=c("callBuffer",null),s.prototype.send_command=s.prototype.call,t.default=s},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.executeWithAutoPipelining=t.getFirstValueInFlattenedArray=t.shouldUseAutoPipelining=t.notAllowedAutoPipelineCommands=t.kCallbacks=t.kExec=void 0;const r=n(123),i=n(108),o=n(27);function a(e,n){if(e._runningAutoPipelines.has(n))return;if(!e._autoPipelines.has(n))return;e._runningAutoPipelines.add(n);const r=e._autoPipelines.get(n);e._autoPipelines.delete(n);const i=r[t.kCallbacks];r[t.kCallbacks]=null,r.exec(function(t,r){if(e._runningAutoPipelines.delete(n),t)for(let e=0;e<i.length;e++)process.nextTick(i[e],t);else for(let e=0;e<i.length;e++)process.nextTick(i[e],...r[e]);e._autoPipelines.has(n)&&a(e,n)})}function s(e){for(let t=0;t<e.length;t++){const n=e[t];if("string"==typeof n)return n;if(Array.isArray(n)||(0,r.isArguments)(n)){if(0===n.length)continue;return n[0]}const i=[n].flat();if(i.length>0)return i[0]}}t.kExec=Symbol("exec"),t.kCallbacks=Symbol("callbacks"),t.notAllowedAutoPipelineCommands=["auth","info","script","quit","cluster","pipeline","multi","subscribe","psubscribe","unsubscribe","unpsubscribe","select"],t.shouldUseAutoPipelining=function(e,n,r){return n&&e.options.enableAutoPipelining&&!e.isPipeline&&!t.notAllowedAutoPipelineCommands.includes(r)&&!e.options.autoPipeliningIgnoredCommands.includes(r)},t.getFirstValueInFlattenedArray=s,t.executeWithAutoPipelining=function e(n,l,c,u,d){if(n.isCluster&&!n.slots.length)return"wait"===n.status&&n.connect().catch(r.noop),(0,o.default)(new Promise(function(t,r){n.delayUntilReady(i=>{i?r(i):e(n,l,c,u,null).then(t,r)})}),d);const p=n.options.keyPrefix||"",h=n.isCluster?n.slots[i(`${p}${s(u)}`)].join(","):"main";if(!n._autoPipelines.has(h)){const e=n.pipeline();e[t.kExec]=!1,e[t.kCallbacks]=[],n._autoPipelines.set(h,e)}const f=n._autoPipelines.get(h);f[t.kExec]||(f[t.kExec]=!0,setImmediate(a,n,h));const y=new Promise(function(e,n){f[t.kCallbacks].push(function(t,r){t?n(t):e(r)}),"call"===l&&u.unshift(c),f[l](...u)});return(0,o.default)(y,d)}},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(139),i=n(107),o=n(27);t.default=class{constructor(e,t=null,n="",o=!1){this.lua=e,this.numberOfKeys=t,this.keyPrefix=n,this.readOnly=o,this.sha=(0,r.createHash)("sha1").update(e).digest("hex");const a=this.sha,s=new WeakSet;this.Command=class extends i.default{toWritable(t){const n=this.reject;return this.reject=e=>{-1!==e.message.indexOf("NOSCRIPT")&&s.delete(t),n.call(this,e)},s.has(t)?"eval"===this.name&&(this.name="evalsha",this.args[0]=a):(s.add(t),this.name="eval",this.args[0]=e),super.toWritable(t)}}}execute(e,t,n,r){"number"==typeof this.numberOfKeys&&t.unshift(this.numberOfKeys),this.keyPrefix&&(n.keyPrefix=this.keyPrefix),this.readOnly&&(n.readOnly=!0);const i=new this.Command("evalsha",[this.sha,...t],n);return i.promise=i.promise.catch(r=>{if(-1===r.message.indexOf("NOSCRIPT"))throw r;const i=new this.Command("evalsha",[this.sha,...t],n);return(e.isPipeline?e.redis:e).sendCommand(i)}),(0,o.default)(i.promise,r),e.sendCommand(i)}}},()=>{},(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){Object.getOwnPropertyNames(t.prototype).forEach(n=>{Object.defineProperty(e.prototype,n,Object.getOwnPropertyDescriptor(t.prototype,n))})}},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DEFAULT_CLUSTER_OPTIONS=void 0;const r=n(142);t.DEFAULT_CLUSTER_OPTIONS={clusterRetryStrategy:e=>Math.min(100+2*e,2e3),enableOfflineQueue:!0,enableReadyCheck:!0,scaleReads:"master",maxRedirections:16,retryDelayOnMoved:0,retryDelayOnFailover:100,retryDelayOnClusterDown:100,retryDelayOnTryAgain:100,slotsRefreshTimeout:1e3,useSRVRecords:!1,resolveSrv:r.resolveSrv,dnsLookup:r.lookup,enableAutoPipelining:!1,autoPipeliningIgnoredCommands:[],shardedSubscribers:!1}},()=>{},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(144),i=n(109),o=n(24),a=(0,i.Debug)("cluster:subscriber");t.default=class{constructor(e,t,n=!1){this.connectionPool=e,this.emitter=t,this.isSharded=n,this.started=!1,this.subscriber=null,this.slotRange=[],this.onSubscriberEnd=()=>{this.started?(a("subscriber has disconnected, selecting a new one..."),this.selectSubscriber()):a("subscriber has disconnected, but ClusterSubscriber is not started, so not reconnecting.")},this.connectionPool.on("-node",(e,t)=>{this.started&&this.subscriber&&(0,r.getNodeKey)(this.subscriber.options)===t&&(a("subscriber has left, selecting a new one..."),this.selectSubscriber())}),this.connectionPool.on("+node",()=>{this.started&&!this.subscriber&&(a("a new node is discovered and there is no subscriber, selecting a new one..."),this.selectSubscriber())})}getInstance(){return this.subscriber}associateSlotRange(e){return this.isSharded&&(this.slotRange=e),this.slotRange}start(){this.started=!0,this.selectSubscriber(),a("started")}stop(){this.started=!1,this.subscriber&&(this.subscriber.disconnect(),this.subscriber=null)}isStarted(){return this.started}selectSubscriber(){const e=this.lastActiveSubscriber;e&&(e.off("end",this.onSubscriberEnd),e.disconnect()),this.subscriber&&(this.subscriber.off("end",this.onSubscriberEnd),this.subscriber.disconnect());const t=(0,i.sample)(this.connectionPool.getNodes());if(!t)return a("selecting subscriber failed since there is no node discovered in the cluster yet"),void(this.subscriber=null);const{options:n}=t;a("selected a subscriber %s:%s",n.host,n.port);let s="subscriber";this.isSharded&&(s="ssubscriber"),this.subscriber=new o.default({port:n.port,host:n.host,username:n.username,password:n.password,enableReadyCheck:!0,connectionName:(0,r.getConnectionName)(s,n.connectionName),lazyConnect:!0,tls:n.tls,retryStrategy:null}),this.subscriber.on("error",i.noop),this.subscriber.once("end",this.onSubscriberEnd);const l={subscribe:[],psubscribe:[],ssubscribe:[]};if(e){const t=e.condition||e.prevCondition;t&&t.subscriber&&(l.subscribe=t.subscriber.channels("subscribe"),l.psubscribe=t.subscriber.channels("psubscribe"),l.ssubscribe=t.subscriber.channels("ssubscribe"))}if(l.subscribe.length||l.psubscribe.length||l.ssubscribe.length){let e=0;for(const t of["subscribe","psubscribe","ssubscribe"]){const n=l[t];n.length&&(e+=1,a("%s %d channels",t,n.length),this.subscriber[t](n).then(()=>{--e||(this.lastActiveSubscriber=this.subscriber)}).catch(()=>{a("failed to %s %d channels",t,n.length)}))}}else this.lastActiveSubscriber=this.subscriber;for(const e of["message","messageBuffer"])this.subscriber.on(e,(t,n)=>{this.emitter.emit(e,t,n)});for(const e of["pmessage","pmessageBuffer"])this.subscriber.on(e,(t,n,r)=>{this.emitter.emit(e,t,n,r)});if(1==this.isSharded)for(const e of["smessage","smessageBuffer"])this.subscriber.on(e,(t,n)=>{this.emitter.emit(e,t,n)})}}},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getConnectionName=t.weightSrvRecords=t.groupSrvRecords=t.getUniqueHostnamesFromOptions=t.normalizeNodeOptions=t.nodeKeyToRedisOptions=t.getNodeKey=void 0;const r=n(109),i=n(145);t.getNodeKey=function(e){return e.port=e.port||6379,e.host=e.host||"127.0.0.1",e.host+":"+e.port},t.nodeKeyToRedisOptions=function(e){const t=e.lastIndexOf(":");if(-1===t)throw new Error(`Invalid node key ${e}`);return{host:e.slice(0,t),port:Number(e.slice(t+1))}},t.normalizeNodeOptions=function(e){return e.map(e=>{const t={};if("object"==typeof e)Object.assign(t,e);else if("string"==typeof e)Object.assign(t,(0,r.parseURL)(e));else{if("number"!=typeof e)throw new Error("Invalid argument "+e);t.port=e}return"string"==typeof t.port&&(t.port=parseInt(t.port,10)),delete t.db,t.port||(t.port=6379),t.host||(t.host="127.0.0.1"),(0,r.resolveTLSProfile)(t)})},t.getUniqueHostnamesFromOptions=function(e){const t={};return e.forEach(e=>{t[e.host]=!0}),Object.keys(t).filter(e=>!(0,i.isIP)(e))},t.groupSrvRecords=function(e){const t={};for(const n of e)t.hasOwnProperty(n.priority)?(t[n.priority].totalWeight+=n.weight,t[n.priority].records.push(n)):t[n.priority]={totalWeight:n.weight,records:[n]};return t},t.weightSrvRecords=function(e){if(1===e.records.length)return e.totalWeight=0,e.records.shift();const t=Math.floor(Math.random()*(e.totalWeight+e.records.length));let n=0;for(const[r,i]of e.records.entries())if(n+=1+i.weight,n>t)return e.totalWeight-=i.weight,e.records.splice(r,1),i},t.getConnectionName=function(e,t){const n=`ioredis-cluster(${e})`;return t?`${n}:${t}`:n}},()=>{},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(18),i=n(109),o=n(144),a=n(24),s=(0,i.Debug)("cluster:connectionPool");class l extends r.EventEmitter{constructor(e){super(),this.redisOptions=e,this.nodes={all:{},master:{},slave:{}},this.specifiedOptions={}}getNodes(e="all"){const t=this.nodes[e];return Object.keys(t).map(e=>t[e])}getInstanceByKey(e){return this.nodes.all[e]}getSampleInstance(e){const t=Object.keys(this.nodes[e]),n=(0,i.sample)(t);return this.nodes[e][n]}addMasterNode(e){const t=(0,o.getNodeKey)(e.options),n=this.createRedisFromOptions(e,e.options.readOnly);return!e.options.readOnly&&(this.nodes.all[t]=n,this.nodes.master[t]=n,!0)}createRedisFromOptions(e,t){return new a.default((0,i.defaults)({retryStrategy:null,enableOfflineQueue:!0,readOnly:t},e,this.redisOptions,{lazyConnect:!0}))}findOrCreate(e,t=!1){const n=(0,o.getNodeKey)(e);let r;return t=Boolean(t),this.specifiedOptions[n]?Object.assign(e,this.specifiedOptions[n]):this.specifiedOptions[n]=e,this.nodes.all[n]?(r=this.nodes.all[n],r.options.readOnly!==t&&(r.options.readOnly=t,s("Change role of %s to %s",n,t?"slave":"master"),r[t?"readonly":"readwrite"]().catch(i.noop),t?(delete this.nodes.master[n],this.nodes.slave[n]=r):(delete this.nodes.slave[n],this.nodes.master[n]=r))):(s("Connecting to %s as %s",n,t?"slave":"master"),r=this.createRedisFromOptions(e,t),this.nodes.all[n]=r,this.nodes[t?"slave":"master"][n]=r,r.once("end",()=>{this.removeNode(n),this.emit("-node",r,n),Object.keys(this.nodes.all).length||this.emit("drain")}),this.emit("+node",r,n),r.on("error",function(e){this.emit("nodeError",e,n)})),r}reset(e){s("Reset with %O",e);const t={};e.forEach(e=>{const n=(0,o.getNodeKey)(e);e.readOnly&&t[n]||(t[n]=e)}),Object.keys(this.nodes.all).forEach(e=>{t[e]||(s("Disconnect %s because the node does not hold any slot",e),this.nodes.all[e].disconnect(),this.removeNode(e))}),Object.keys(t).forEach(e=>{const n=t[e];this.findOrCreate(n,n.readOnly)})}removeNode(e){const{nodes:t}=this;t.all[e]&&(s("Remove %s from the pool",e),delete t.all[e]),delete t.master[e],delete t.slave[e]}}t.default=l},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(109),i=n(148),o=(0,r.Debug)("delayqueue");t.default=class{constructor(){this.queues={},this.timeouts={}}push(e,t,n){const r=n.callback||process.nextTick;this.queues[e]||(this.queues[e]=new i);this.queues[e].push(t),this.timeouts[e]||(this.timeouts[e]=setTimeout(()=>{r(()=>{this.timeouts[e]=null,this.execute(e)})},n.timeout))}execute(e){const t=this.queues[e];if(!t)return;const{length:n}=t;if(n)for(o("send %d commands in %s queue",n,e),this.queues[e]=null;t.length>0;)t.shift()()}}},e=>{"use strict";function t(e,t){t=t||{};this._capacity=t.capacity,this._head=0,this._tail=0,Array.isArray(e)?this._fromArray(e):(this._capacityMask=3,this._list=new Array(4))}t.prototype.peekAt=function(e){var t=e;if(t===(0|t)){var n=this.size();if(!(t>=n||t<-n))return t<0&&(t+=n),t=this._head+t&this._capacityMask,this._list[t]}},t.prototype.get=function(e){return this.peekAt(e)},t.prototype.peek=function(){if(this._head!==this._tail)return this._list[this._head]},t.prototype.peekFront=function(){return this.peek()},t.prototype.peekBack=function(){return this.peekAt(-1)},Object.defineProperty(t.prototype,"length",{get:function(){return this.size()}}),t.prototype.size=function(){return this._head===this._tail?0:this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)},t.prototype.unshift=function(e){if(0===arguments.length)return this.size();var t=this._list.length;return this._head=this._head-1+t&this._capacityMask,this._list[this._head]=e,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.pop(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)},t.prototype.shift=function(){var e=this._head;if(e!==this._tail){var t=this._list[e];return this._list[e]=void 0,this._head=e+1&this._capacityMask,e<2&&this._tail>1e4&&this._tail<=this._list.length>>>2&&this._shrinkArray(),t}},t.prototype.push=function(e){if(0===arguments.length)return this.size();var t=this._tail;return this._list[t]=e,this._tail=t+1&this._capacityMask,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.shift(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)},t.prototype.pop=function(){var e=this._tail;if(e!==this._head){var t=this._list.length;this._tail=e-1+t&this._capacityMask;var n=this._list[this._tail];return this._list[this._tail]=void 0,this._head<2&&e>1e4&&e<=t>>>2&&this._shrinkArray(),n}},t.prototype.removeOne=function(e){var t=e;if(t===(0|t)&&this._head!==this._tail){var n=this.size(),r=this._list.length;if(!(t>=n||t<-n)){t<0&&(t+=n),t=this._head+t&this._capacityMask;var i,o=this._list[t];if(e<n/2){for(i=e;i>0;i--)this._list[t]=this._list[t=t-1+r&this._capacityMask];this._list[t]=void 0,this._head=this._head+1+r&this._capacityMask}else{for(i=n-1-e;i>0;i--)this._list[t]=this._list[t=t+1+r&this._capacityMask];this._list[t]=void 0,this._tail=this._tail-1+r&this._capacityMask}return o}}},t.prototype.remove=function(e,t){var n,r=e,i=t;if(r===(0|r)&&this._head!==this._tail){var o=this.size(),a=this._list.length;if(!(r>=o||r<-o||t<1)){if(r<0&&(r+=o),1===t||!t)return(n=new Array(1))[0]=this.removeOne(r),n;if(0===r&&r+t>=o)return n=this.toArray(),this.clear(),n;var s;for(r+t>o&&(t=o-r),n=new Array(t),s=0;s<t;s++)n[s]=this._list[this._head+r+s&this._capacityMask];if(r=this._head+r&this._capacityMask,e+t===o){for(this._tail=this._tail-t+a&this._capacityMask,s=t;s>0;s--)this._list[r=r+1+a&this._capacityMask]=void 0;return n}if(0===e){for(this._head=this._head+t+a&this._capacityMask,s=t-1;s>0;s--)this._list[r=r+1+a&this._capacityMask]=void 0;return n}if(r<o/2){for(this._head=this._head+e+t+a&this._capacityMask,s=e;s>0;s--)this.unshift(this._list[r=r-1+a&this._capacityMask]);for(r=this._head-1+a&this._capacityMask;i>0;)this._list[r=r-1+a&this._capacityMask]=void 0,i--;e<0&&(this._tail=r)}else{for(this._tail=r,r=r+t+a&this._capacityMask,s=o-(t+e);s>0;s--)this.push(this._list[r++]);for(r=this._tail;i>0;)this._list[r=r+1+a&this._capacityMask]=void 0,i--}return this._head<2&&this._tail>1e4&&this._tail<=a>>>2&&this._shrinkArray(),n}}},t.prototype.splice=function(e,t){var n=e;if(n===(0|n)){var r=this.size();if(n<0&&(n+=r),!(n>r)){if(arguments.length>2){var i,o,a,s=arguments.length,l=this._list.length,c=2;if(!r||n<r/2){for(o=new Array(n),i=0;i<n;i++)o[i]=this._list[this._head+i&this._capacityMask];for(0===t?(a=[],n>0&&(this._head=this._head+n+l&this._capacityMask)):(a=this.remove(n,t),this._head=this._head+n+l&this._capacityMask);s>c;)this.unshift(arguments[--s]);for(i=n;i>0;i--)this.unshift(o[i-1])}else{var u=(o=new Array(r-(n+t))).length;for(i=0;i<u;i++)o[i]=this._list[this._head+n+t+i&this._capacityMask];for(0===t?(a=[],n!=r&&(this._tail=this._head+n+l&this._capacityMask)):(a=this.remove(n,t),this._tail=this._tail-u+l&this._capacityMask);c<s;)this.push(arguments[c++]);for(i=0;i<u;i++)this.push(o[i])}return a}return this.remove(n,t)}}},t.prototype.clear=function(){this._list=new Array(this._list.length),this._head=0,this._tail=0},t.prototype.isEmpty=function(){return this._head===this._tail},t.prototype.toArray=function(){return this._copyArray(!1)},t.prototype._fromArray=function(e){var t=e.length,n=this._nextPowerOf2(t);this._list=new Array(n),this._capacityMask=n-1,this._tail=t;for(var r=0;r<t;r++)this._list[r]=e[r]},t.prototype._copyArray=function(e,t){var n=this._list,r=n.length,i=this.length;if((t|=i)==i&&this._head<this._tail)return this._list.slice(this._head,this._tail);var o,a=new Array(t),s=0;if(e||this._head>this._tail){for(o=this._head;o<r;o++)a[s++]=n[o];for(o=0;o<this._tail;o++)a[s++]=n[o]}else for(o=this._head;o<this._tail;o++)a[s++]=n[o];return a},t.prototype._growArray=function(){if(0!=this._head){var e=this._copyArray(!0,this._list.length<<1);this._tail=this._list.length,this._head=0,this._list=e}else this._tail=this._list.length,this._list.length<<=1;this._capacityMask=this._capacityMask<<1|1},t.prototype._shrinkArray=function(){this._list.length>>>=1,this._capacityMask>>>=1},t.prototype._nextPowerOf2=function(e){var t=1<<Math.log(e)/Math.log(2)+1;return Math.max(t,4)},e.exports=t},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(109),i=n(143),o=n(146),a=n(144),s=n(108),l=(0,r.Debug)("cluster:subscriberGroup");t.default=class{constructor(e){this.cluster=e,this.shardedSubscribers=new Map,this.clusterSlots=[],this.subscriberToSlotsIndex=new Map,this.channels=new Map,e.on("+node",e=>{this._addSubscriber(e)}),e.on("-node",e=>{this._removeSubscriber(e)}),e.on("refresh",()=>{this._refreshSlots(e)})}getResponsibleSubscriber(e){const t=this.clusterSlots[e][0];return this.shardedSubscribers.get(t)}addChannels(e){const t=s(e[0]);e.forEach(e=>{if(s(e)!=t)return-1});const n=this.channels.get(t);return n?this.channels.set(t,n.concat(e)):this.channels.set(t,e),[...this.channels.values()].flatMap(e=>e).length}removeChannels(e){const t=s(e[0]);e.forEach(e=>{if(s(e)!=t)return-1});const n=this.channels.get(t);if(n){const r=n.filter(t=>!e.includes(t));this.channels.set(t,r)}return[...this.channels.values()].flatMap(e=>e).length}stop(){for(const e of this.shardedSubscribers.values())e.stop()}start(){for(const e of this.shardedSubscribers.values())e.isStarted()||e.start()}_addSubscriber(e){const t=new o.default(e.options);if(t.addMasterNode(e)){const n=new i.default(t,this.cluster,!0),r=(0,a.getNodeKey)(e.options);return this.shardedSubscribers.set(r,n),n.start(),this._resubscribe(),this.cluster.emit("+subscriber"),n}return null}_removeSubscriber(e){const t=(0,a.getNodeKey)(e.options),n=this.shardedSubscribers.get(t);return n&&(n.stop(),this.shardedSubscribers.delete(t),this._resubscribe(),this.cluster.emit("-subscriber")),this.shardedSubscribers}_refreshSlots(e){if(!this._slotsAreEqual(e.slots)){l("Refreshing the slots of the subscriber group."),this.subscriberToSlotsIndex=new Map;for(let t=0;t<e.slots.length;t++){const n=e.slots[t][0];this.subscriberToSlotsIndex.has(n)||this.subscriberToSlotsIndex.set(n,[]),this.subscriberToSlotsIndex.get(n).push(Number(t))}return this._resubscribe(),this.clusterSlots=JSON.parse(JSON.stringify(e.slots)),this.cluster.emit("subscribersReady"),!0}return l("Nothing to refresh because the new cluster map is equal to the previous one."),!1}_resubscribe(){this.shardedSubscribers&&this.shardedSubscribers.forEach((e,t)=>{const n=this.subscriberToSlotsIndex.get(t);n&&(e.associateSlotRange(n),n.forEach(t=>{const n=e.getInstance(),r=this.channels.get(t);r&&r.length>0&&n&&(n.ssubscribe(r),n.on("ready",()=>{n.ssubscribe(r)}))}))})}_slotsAreEqual(e){return void 0!==this.clusterSlots&&JSON.stringify(this.clusterSlots)===JSON.stringify(e)}}},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SentinelConnector=t.StandaloneConnector=void 0;const r=n(151);t.StandaloneConnector=r.default;const i=n(155);t.SentinelConnector=i.default},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(152),i=n(153),o=n(109),a=n(154);class s extends a.default{constructor(e){super(e.disconnectTimeout),this.options=e}connect(e){const{options:t}=this;let n;return this.connecting=!0,"path"in t&&t.path?n={path:t.path}:(n={},"port"in t&&null!=t.port&&(n.port=t.port),"host"in t&&null!=t.host&&(n.host=t.host),"family"in t&&null!=t.family&&(n.family=t.family)),t.tls&&Object.assign(n,t.tls),new Promise((e,a)=>{process.nextTick(()=>{if(this.connecting){try{t.tls?this.stream=(0,i.connect)(n):this.stream=(0,r.createConnection)(n)}catch(e){return void a(e)}this.stream.once("error",e=>{this.firstError=e}),e(this.stream)}else a(new Error(o.CONNECTION_CLOSED_ERROR_MSG))})})}}t.default=s},()=>{},()=>{},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=(0,n(109).Debug)("AbstractConnector");t.default=class{constructor(e){this.connecting=!1,this.disconnectTimeout=e}check(e){return!0}disconnect(){if(this.connecting=!1,this.stream){const e=this.stream,t=setTimeout(()=>{r("stream %s:%s still open, destroying it",e.remoteAddress,e.remotePort),e.destroy()},this.disconnectTimeout);e.on("close",()=>clearTimeout(t)),e.end()}}}},(e,t,n)=>{"use strict";var r=n(1);function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}Object.defineProperty(t,"__esModule",{value:!0}),t.SentinelIterator=void 0;const o=n(156),a=n(109),s=n(157),l=n(158);t.SentinelIterator=l.default;const c=n(154),u=n(24),d=n(159),p=(0,a.Debug)("SentinelConnector");class h extends c.default{constructor(e){if(super(e.disconnectTimeout),this.options=e,this.emitter=null,this.failoverDetector=null,!this.options.sentinels.length)throw new Error("Requires at least one sentinel to connect to.");if(!this.options.name)throw new Error("Requires the name of master.");this.sentinelIterator=new l.default(this.options.sentinels)}check(e){const t=!e.role||this.options.role===e.role;return t||(p("role invalid, expected %s, but got %s",this.options.role,e.role),this.sentinelIterator.next(),this.sentinelIterator.next(),this.sentinelIterator.reset(!0)),t}disconnect(){super.disconnect(),this.failoverDetector&&this.failoverDetector.cleanup()}connect(e){let t;this.connecting=!0,this.retryAttempts=0;const n=async()=>{const r=this.sentinelIterator.next();if(r.done){this.sentinelIterator.reset(!1);const r="function"==typeof this.options.sentinelRetryStrategy?this.options.sentinelRetryStrategy(++this.retryAttempts):null;let i="number"!=typeof r?"All sentinels are unreachable and retry is disabled.":`All sentinels are unreachable. Retrying from scratch after ${r}ms.`;t&&(i+=` Last error: ${t.message}`),p(i);const o=new Error(i);if("number"==typeof r)return e("error",o),await new Promise(e=>setTimeout(e,r)),n();throw o}let i=null,l=null;try{i=await this.resolve(r.value)}catch(e){l=e}if(!this.connecting)throw new Error(a.CONNECTION_CLOSED_ERROR_MSG);const c=r.value.host+":"+r.value.port;if(i)return p("resolved: %s:%s from sentinel %s",i.host,i.port,c),this.options.enableTLSForSentinelMode&&this.options.tls?(Object.assign(i,this.options.tls),this.stream=(0,s.connect)(i),this.stream.once("secureConnect",this.initFailoverDetector.bind(this))):(this.stream=(0,o.createConnection)(i),this.stream.once("connect",this.initFailoverDetector.bind(this))),this.stream.once("error",e=>{this.firstError=e}),this.stream;{const r=l?"failed to connect to sentinel "+c+" because "+l.message:"connected to sentinel "+c+" successfully, but got an invalid reply: "+i;return p(r),e("sentinelError",new Error(r)),l&&(t=l),n()}};return n()}async updateSentinels(e){if(!this.options.updateSentinels)return;const t=await e.sentinel("sentinels",this.options.name);Array.isArray(t)&&(t.map(a.packObject).forEach(e=>{if(-1===(e.flags?e.flags.split(","):[]).indexOf("disconnected")&&e.ip&&e.port){const t=this.sentinelNatResolve(f(e));this.sentinelIterator.add(t)&&p("adding sentinel %s:%s",t.host,t.port)}}),p("Updated internal sentinels: %s",this.sentinelIterator))}async resolveMaster(e){const t=await e.sentinel("get-master-addr-by-name",this.options.name);return await this.updateSentinels(e),this.sentinelNatResolve(Array.isArray(t)?{host:t[0],port:Number(t[1])}:null)}async resolveSlave(e){const t=await e.sentinel("slaves",this.options.name);if(!Array.isArray(t))return null;const n=t.map(a.packObject).filter(e=>e.flags&&!e.flags.match(/(disconnected|s_down|o_down)/));return this.sentinelNatResolve(function(e,t){if(0===e.length)return null;let n;if("function"==typeof t)n=t(e);else if(null!==t&&"object"==typeof t){const r=Array.isArray(t)?t:[t];r.sort((e,t)=>(e.prio||(e.prio=1),t.prio||(t.prio=1),e.prio<t.prio?-1:e.prio>t.prio?1:0));for(let t=0;t<r.length;t++){for(let i=0;i<e.length;i++){const o=e[i];if(o.ip===r[t].ip&&o.port===r[t].port){n=o;break}}if(n)break}}n||(n=(0,a.sample)(e));return f(n)}(n,this.options.preferredSlaves))}sentinelNatResolve(e){if(!e||!this.options.natMap)return e;const t=`${e.host}:${e.port}`;let n=e;return"function"==typeof this.options.natMap?n=this.options.natMap(t)||e:"object"==typeof this.options.natMap&&(n=this.options.natMap[t]||e),n}connectToSentinel(e,t){const n=new u.default(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach(function(t){r(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}({port:e.port||26379,host:e.host,username:this.options.sentinelUsername||null,password:this.options.sentinelPassword||null,family:e.family||("path"in this.options&&this.options.path?void 0:this.options.family),tls:this.options.sentinelTLS,retryStrategy:null,enableReadyCheck:!1,connectTimeout:this.options.connectTimeout,commandTimeout:this.options.sentinelCommandTimeout},t));return n}async resolve(e){const t=this.connectToSentinel(e);t.on("error",y);try{return"slave"===this.options.role?await this.resolveSlave(t):await this.resolveMaster(t)}finally{t.disconnect()}}async initFailoverDetector(){var e;if(!this.options.failoverDetector)return;this.sentinelIterator.reset(!0);const t=[];for(;t.length<this.options.sentinelMaxConnections;){const{done:e,value:n}=this.sentinelIterator.next();if(e)break;const r=this.connectToSentinel(n,{lazyConnect:!0,retryStrategy:this.options.sentinelReconnectStrategy});r.on("reconnecting",()=>{var e;null===(e=this.emitter)||void 0===e||e.emit("sentinelReconnecting")}),t.push({address:n,client:r})}this.sentinelIterator.reset(!1),this.failoverDetector&&this.failoverDetector.cleanup(),this.failoverDetector=new d.FailoverDetector(this,t),await this.failoverDetector.subscribe(),null===(e=this.emitter)||void 0===e||e.emit("failoverSubscribed")}}function f(e){return{host:e.ip,port:Number(e.port)}}function y(){}t.default=h},()=>{},()=>{},(e,t)=>{"use strict";function n(e,t){return(e.host||"127.0.0.1")===(t.host||"127.0.0.1")&&(e.port||26379)===(t.port||26379)}Object.defineProperty(t,"__esModule",{value:!0});t.default=class{constructor(e){this.cursor=0,this.sentinels=e.slice(0)}next(){const e=this.cursor>=this.sentinels.length;return{done:e,value:e?void 0:this.sentinels[this.cursor++]}}reset(e){e&&this.sentinels.length>1&&1!==this.cursor&&this.sentinels.unshift(...this.sentinels.splice(this.cursor-1)),this.cursor=0}add(e){for(let t=0;t<this.sentinels.length;t++)if(n(e,this.sentinels[t]))return!1;return this.sentinels.push(e),!0}toString(){return`${JSON.stringify(this.sentinels)} @${this.cursor}`}}},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FailoverDetector=void 0;const r=(0,n(109).Debug)("FailoverDetector"),i="+switch-master";t.FailoverDetector=class{constructor(e,t){this.isDisconnected=!1,this.connector=e,this.sentinels=t}cleanup(){this.isDisconnected=!0;for(const e of this.sentinels)e.client.disconnect()}async subscribe(){r("Starting FailoverDetector");const e=[];for(const t of this.sentinels){const n=t.client.subscribe(i).catch(e=>{r("Failed to subscribe to failover messages on sentinel %s:%s (%s)",t.address.host||"127.0.0.1",t.address.port||26739,e.message)});e.push(n),t.client.on("message",e=>{this.isDisconnected||e!==i||this.disconnect()})}await Promise.all(e)}disconnect(){this.isDisconnected=!0,r("Failover detected, disconnecting"),this.connector.disconnect()}}},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.readyHandler=t.errorHandler=t.closeHandler=t.connectHandler=void 0;const r=n(30),i=n(107),o=n(161),a=n(109),s=n(163),l=(0,a.Debug)("connection");function c(e){const t=new r.AbortError("Command aborted due to connection close");return t.command={name:e.name,args:e.args},t}t.connectHandler=function(e){return function(){e.setStatus("connect"),e.resetCommandQueue();let n=!1;const{connectionEpoch:r}=e;e.condition.auth&&e.auth(e.condition.auth,function(t){r===e.connectionEpoch&&t&&(-1!==t.message.indexOf("no password is set")?console.warn("[WARN] Redis server does not require a password, but a password was supplied."):-1!==t.message.indexOf("without any password configured for the default user")?console.warn("[WARN] This Redis server's `default` user does not require a password, but a password was supplied"):-1!==t.message.indexOf("wrong number of arguments for 'auth' command")?console.warn("[ERROR] The server returned \"wrong number of arguments for 'auth' command\". You are probably passing both username and password to Redis version 5 or below. You should only pass the 'password' option for Redis version 5 and under."):(n=!0,e.recoverFromFatalError(t,t)))}),e.condition.select&&e.select(e.condition.select).catch(t=>{e.silentEmit("error",t)}),e.options.enableReadyCheck||t.readyHandler(e)(),new s.default(e,{stringNumbers:e.options.stringNumbers}),e.options.enableReadyCheck&&e._readyCheck(function(i,o){r===e.connectionEpoch&&(i?n||e.recoverFromFatalError(new Error("Ready check failed: "+i.message),i):e.connector.check(o)?t.readyHandler(e)():e.disconnect(!0))})}},t.closeHandler=function(e){return function(){const n=e.status;if(e.setStatus("close"),e.commandQueue.length&&function(e){var t;let n=0;for(let r=0;r<e.length;){const i=null===(t=e.peekAt(r))||void 0===t?void 0:t.command,o=i.pipelineIndex;void 0!==o&&0!==o||(n=0),void 0===o||o===n++?r++:(e.remove(r,1),i.reject(c(i)))}}(e.commandQueue),e.offlineQueue.length&&function(e){var t;for(let n=0;n<e.length;){const r=null===(t=e.peekAt(n))||void 0===t?void 0:t.command;if("multi"===r.name)break;if("exec"===r.name){e.remove(n,1),r.reject(c(r));break}r.inTransaction?(e.remove(n,1),r.reject(c(r))):n++}}(e.offlineQueue),"ready"===n&&(e.prevCondition||(e.prevCondition=e.condition),e.commandQueue.length&&(e.prevCommandQueue=e.commandQueue)),e.manuallyClosing)return e.manuallyClosing=!1,l("skip reconnecting since the connection is manually closed."),t();if("function"!=typeof e.options.retryStrategy)return l("skip reconnecting because `retryStrategy` is not a function"),t();const r=e.options.retryStrategy(++e.retryAttempts);if("number"!=typeof r)return l("skip reconnecting because `retryStrategy` doesn't return a number"),t();l("reconnect in %sms",r),e.setStatus("reconnecting",r),e.reconnectTimeout=setTimeout(function(){e.reconnectTimeout=null,e.connect().catch(a.noop)},r);const{maxRetriesPerRequest:i}=e.options;if("number"==typeof i)if(i<0)l("maxRetriesPerRequest is negative, ignoring...");else{0===e.retryAttempts%(i+1)&&(l("reach maxRetriesPerRequest limitation, flushing command queue..."),e.flushQueue(new o.MaxRetriesPerRequestError(i)))}};function t(){e.setStatus("end"),e.flushQueue(new Error(a.CONNECTION_CLOSED_ERROR_MSG))}},t.errorHandler=function(e){return function(t){l("error: %s",t),e.silentEmit("error",t)}},t.readyHandler=function(e){return function(){if(e.setStatus("ready"),e.retryAttempts=0,e.options.monitor){e.call("monitor").then(()=>e.setStatus("monitoring"),t=>e.emit("error",t));const{sendCommand:t}=e;return e.sendCommand=function(n){return i.default.checkFlag("VALID_IN_MONITOR_MODE",n.name)?t.call(e,n):(n.reject(new Error("Connection is in monitoring mode, can't process commands.")),n.promise)},void e.once("close",function(){delete e.sendCommand})}const t=e.prevCondition?e.prevCondition.select:e.condition.select;if(e.options.connectionName&&(l("set the connection name [%s]",e.options.connectionName),e.client("setname",e.options.connectionName).catch(a.noop)),e.options.readOnly&&(l("set the connection to readonly mode"),e.readonly().catch(a.noop)),e.prevCondition){const n=e.prevCondition;if(e.prevCondition=null,n.subscriber&&e.options.autoResubscribe){e.condition.select!==t&&(l("connect to db [%d]",t),e.select(t));const r=n.subscriber.channels("subscribe");r.length&&(l("subscribe %d channels",r.length),e.subscribe(r));const i=n.subscriber.channels("psubscribe");i.length&&(l("psubscribe %d channels",i.length),e.psubscribe(i));const o=n.subscriber.channels("ssubscribe");o.length&&(l("ssubscribe %d channels",o.length),e.ssubscribe(o))}}if(e.prevCommandQueue)if(e.options.autoResendUnfulfilledCommands)for(l("resend %d unfulfilled commands",e.prevCommandQueue.length);e.prevCommandQueue.length>0;){const t=e.prevCommandQueue.shift();t.select!==e.condition.select&&"select"!==t.command.name&&e.select(t.select),e.sendCommand(t.command,t.stream)}else e.prevCommandQueue=null;if(e.offlineQueue.length){l("send %d commands in offline queue",e.offlineQueue.length);const t=e.offlineQueue;for(e.resetOfflineQueue();t.length>0;){const n=t.shift();n.select!==e.condition.select&&"select"!==n.command.name&&e.select(n.select),e.sendCommand(n.command,n.stream)}}e.condition.select!==t&&(l("connect to db [%d]",t),e.select(t))}}},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MaxRetriesPerRequestError=void 0;const r=n(162);t.MaxRetriesPerRequestError=r.default},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(30);class i extends r.AbortError{constructor(e){super(`Reached the max retries per request limit (which is ${e}). Refer to "maxRetriesPerRequest" option for details.`),Error.captureStackTrace(this,this.constructor)}get name(){return this.constructor.name}}t.default=i},(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(107),i=n(109),o=n(164),a=n(171),s=(0,i.Debug)("dataHandler");t.default=class{constructor(e,t){this.redis=e;const n=new o({stringNumbers:t.stringNumbers,returnBuffers:!0,returnError:e=>{this.returnError(e)},returnFatalError:e=>{this.returnFatalError(e)},returnReply:e=>{this.returnReply(e)}});e.stream.prependListener("data",e=>{n.execute(e)}),e.stream.resume()}returnFatalError(e){e.message+=". Please report this.",this.redis.recoverFromFatalError(e,e,{offlineQueue:!1})}returnError(e){const t=this.shiftCommand(e);t&&(e.command={name:t.command.name,args:t.command.args},this.redis.handleReconnection(e,t))}returnReply(e){if(this.handleMonitorReply(e))return;if(this.handleSubscriberReply(e))return;const t=this.shiftCommand(e);t&&(r.default.checkFlag("ENTER_SUBSCRIBER_MODE",t.command.name)?(this.redis.condition.subscriber=new a.default,this.redis.condition.subscriber.add(t.command.name,e[1].toString()),c(t.command,e[2])||this.redis.commandQueue.unshift(t)):r.default.checkFlag("EXIT_SUBSCRIBER_MODE",t.command.name)?u(t.command,e[2])||this.redis.commandQueue.unshift(t):t.command.resolve(e))}handleSubscriberReply(e){if(!this.redis.condition.subscriber)return!1;const t=Array.isArray(e)?e[0].toString():null;switch(s('receive reply "%s" in subscriber mode',t),t){case"message":this.redis.listeners("message").length>0&&this.redis.emit("message",e[1].toString(),e[2]?e[2].toString():""),this.redis.emit("messageBuffer",e[1],e[2]);break;case"pmessage":{const t=e[1].toString();this.redis.listeners("pmessage").length>0&&this.redis.emit("pmessage",t,e[2].toString(),e[3].toString()),this.redis.emit("pmessageBuffer",t,e[2],e[3]);break}case"smessage":this.redis.listeners("smessage").length>0&&this.redis.emit("smessage",e[1].toString(),e[2]?e[2].toString():""),this.redis.emit("smessageBuffer",e[1],e[2]);break;case"ssubscribe":case"subscribe":case"psubscribe":{const n=e[1].toString();this.redis.condition.subscriber.add(t,n);const r=this.shiftCommand(e);if(!r)return;c(r.command,e[2])||this.redis.commandQueue.unshift(r);break}case"sunsubscribe":case"unsubscribe":case"punsubscribe":{const n=e[1]?e[1].toString():null;n&&this.redis.condition.subscriber.del(t,n);const r=e[2];0===Number(r)&&(this.redis.condition.subscriber=!1);const i=this.shiftCommand(e);if(!i)return;u(i.command,r)||this.redis.commandQueue.unshift(i);break}default:{const t=this.shiftCommand(e);if(!t)return;t.command.resolve(e)}}return!0}handleMonitorReply(e){if("monitoring"!==this.redis.status)return!1;const t=e.toString();if("OK"===t)return!1;const n=t.indexOf(" "),r=t.slice(0,n),i=t.indexOf('"'),o=t.slice(i+1,-1).split('" "').map(e=>e.replace(/\\"/g,'"')),a=t.slice(n+2,i-2).split(" ");return this.redis.emit("monitor",r,o,a[1],a[0]),!0}shiftCommand(e){const t=this.redis.commandQueue.shift();if(!t){const t=new Error("Command queue state error. If you can reproduce this, please report it."+(e instanceof Error?` Last error: ${e.message}`:` Last reply: ${e.toString()}`));return this.redis.emit("error",t),null}return t}};const l=new WeakMap;function c(e,t){let n=l.has(e)?l.get(e):e.args.length;return n-=1,n<=0?(e.resolve(t),l.delete(e),!0):(l.set(e,n),!1)}function u(e,t){let n=l.has(e)?l.get(e):e.args.length;return 0===n?0===Number(t)&&(l.delete(e),e.resolve(t),!0):(n-=1,n<=0?(e.resolve(t),!0):(l.set(e,n),!1))}},(e,t,n)=>{"use strict";e.exports=n(165)},(e,t,n)=>{"use strict";const r=n(166).Buffer,i=new(0,n(169).StringDecoder),o=n(30),a=o.ReplyError,s=o.ParserError;var l=r.allocUnsafe(32768),c=0,u=null,d=0,p=0;function h(e){const t=e.offset,n=e.buffer,r=n.length-1;for(var i=t;i<r;)if(13===n[i++])return e.offset=i+1,!0===e.optionReturnBuffers?e.buffer.slice(t,i-1):e.buffer.toString("utf8",t,i-1)}function f(e){const t=e.buffer.length-1;for(var n=e.offset,r=0;n<t;){const t=e.buffer[n++];if(13===t)return e.offset=n+1,r;r=10*r+(t-48)}}function y(e,t,n){e.arrayCache.push(t),e.arrayPos.push(n)}function m(e){const t=e.arrayCache.pop();var n=e.arrayPos.pop();if(e.arrayCache.length){const r=m(e);if(void 0===r)return void y(e,t,n);t[n++]=r}return b(e,t,n)}function b(e,t,n){const r=e.buffer.length;for(;n<t.length;){const i=e.offset;if(e.offset>=r)return void y(e,t,n);const o=g(e,e.buffer[e.offset++]);if(void 0===o)return e.arrayCache.length||e.bufferCache.length||(e.offset=i),void y(e,t,n);t[n]=o,n++}return t}function g(e,t){switch(t){case 36:return function(e){const t=f(e);if(void 0===t)return;if(t<0)return null;const n=e.offset+t;if(n+2>e.buffer.length)return e.bigStrSize=n+2,e.totalChunkSize=e.buffer.length,void e.bufferCache.push(e.buffer);const r=e.offset;return e.offset=n+2,!0===e.optionReturnBuffers?e.buffer.slice(r,n):e.buffer.toString("utf8",r,n)}(e);case 43:return h(e);case 42:return function(e){const t=f(e);if(void 0===t)return;return t<0?null:b(e,new Array(t),0)}(e);case 58:return function(e){return!0===e.optionStringNumbers?function(e){const t=e.buffer.length-1;var n=e.offset,r=0,i="";for(45===e.buffer[n]&&(i+="-",n++);n<t;){var o=e.buffer[n++];if(13===o)return e.offset=n+1,0!==r&&(i+=r),i;r>429496728?(i+=10*r+(o-48),r=0):48===o&&0===r?i+=0:r=10*r+(o-48)}}(e):function(e){const t=e.buffer.length-1;var n=e.offset,r=0,i=1;for(45===e.buffer[n]&&(i=-1,n++);n<t;){const t=e.buffer[n++];if(13===t)return e.offset=n+1,i*r;r=10*r+(t-48)}}(e)}(e);case 45:return function(e){var t=h(e);if(void 0!==t)return!0===e.optionReturnBuffers&&(t=t.toString()),new a(t)}(e);default:return function(e,t){const n=new s("Protocol error, got "+JSON.stringify(String.fromCharCode(t))+" as reply type byte",JSON.stringify(e.buffer),e.offset);e.buffer=null,e.returnFatalError(n)}(e,t)}}function v(){if(l.length>51200)if(1===d||p>2*d){const e=Math.floor(l.length/10),t=e<c?c:e;c=0,l=l.slice(t,l.length)}else p++,d--;else clearInterval(u),d=0,p=0,u=null}function E(e){const t=e.bufferCache,n=e.offset,i=e.bigStrSize-n-2;var o=t.length,a=e.bigStrSize-e.totalChunkSize;if(e.offset=a,a<=2){if(2===o)return t[0].slice(n,t[0].length+a-2);o--,a=t[t.length-2].length+a}!function(e){if(l.length<e+c){const t=e>78643200?2:3;c>116391936&&(c=52428800),l=r.allocUnsafe(e*t+c),c=0,d++,null===u&&(u=setInterval(v,50))}}(i);const s=c;t[0].copy(l,s,n,t[0].length),c+=t[0].length-n;for(var p=1;p<o-1;p++)t[p].copy(l,c),c+=t[p].length;return t[p].copy(l,c,0,a-2),c+=a-2,l.slice(s,c)}e.exports=class{constructor(e){if(!e)throw new TypeError("Options are mandatory.");if("function"!=typeof e.returnError||"function"!=typeof e.returnReply)throw new TypeError("The returnReply and returnError options have to be functions.");this.setReturnBuffers(!!e.returnBuffers),this.setStringNumbers(!!e.stringNumbers),this.returnError=e.returnError,this.returnFatalError=e.returnFatalError||e.returnError,this.returnReply=e.returnReply,this.reset()}reset(){this.offset=0,this.buffer=null,this.bigStrSize=0,this.totalChunkSize=0,this.bufferCache=[],this.arrayCache=[],this.arrayPos=[]}setReturnBuffers(e){if("boolean"!=typeof e)throw new TypeError("The returnBuffers argument has to be a boolean");this.optionReturnBuffers=e}setStringNumbers(e){if("boolean"!=typeof e)throw new TypeError("The stringNumbers argument has to be a boolean");this.optionStringNumbers=e}execute(e){if(null===this.buffer)this.buffer=e,this.offset=0;else if(0===this.bigStrSize){const t=this.buffer.length,n=t-this.offset,i=r.allocUnsafe(n+e.length);if(this.buffer.copy(i,0,this.offset,t),e.copy(i,n,0,e.length),this.buffer=i,this.offset=0,this.arrayCache.length){const e=m(this);if(void 0===e)return;this.returnReply(e)}}else{if(!(this.totalChunkSize+e.length>=this.bigStrSize))return this.bufferCache.push(e),void(this.totalChunkSize+=e.length);this.bufferCache.push(e);var t=this.optionReturnBuffers?E(this):function(e){const t=e.bufferCache,n=e.offset;var r=t.length,o=e.bigStrSize-e.totalChunkSize;if(e.offset=o,o<=2){if(2===r)return t[0].toString("utf8",n,t[0].length+o-2);r--,o=t[t.length-2].length+o}for(var a=i.write(t[0].slice(n)),s=1;s<r-1;s++)a+=i.write(t[s]);return a+i.end(t[s].slice(0,o-2))}(this);if(this.bigStrSize=0,this.bufferCache=[],this.buffer=e,this.arrayCache.length&&(this.arrayCache[0][this.arrayPos[0]++]=t,void 0===(t=m(this))))return;this.returnReply(t)}for(;this.offset<this.buffer.length;){const e=this.offset,t=this.buffer[this.offset++],n=g(this,t);if(void 0===n)return void(this.arrayCache.length||this.bufferCache.length||(this.offset=e));45===t?this.returnError(n):this.returnReply(n)}this.buffer=null}}},(e,t,n)=>{"use strict";const r=n(167),i=n(168),o="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=l,t.SlowBuffer=function(e){+e!=e&&(e=0);return l.alloc(+e)},t.INSPECT_MAX_BYTES=50;const a=2147483647;function s(e){if(e>a)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,l.prototype),t}function l(e,t,n){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return d(e)}return c(e,t,n)}function c(e,t,n){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!l.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const n=0|y(e,t);let r=s(n);const i=r.write(e,t);i!==n&&(r=r.slice(0,i));return r}(e,t);if(ArrayBuffer.isView(e))return function(e){if($(e,Uint8Array)){const t=new Uint8Array(e);return h(t.buffer,t.byteOffset,t.byteLength)}return p(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if($(e,ArrayBuffer)||e&&$(e.buffer,ArrayBuffer))return h(e,t,n);if("undefined"!=typeof SharedArrayBuffer&&($(e,SharedArrayBuffer)||e&&$(e.buffer,SharedArrayBuffer)))return h(e,t,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return l.from(r,t,n);const i=function(e){if(l.isBuffer(e)){const t=0|f(e.length),n=s(t);return 0===n.length||e.copy(n,0,0,t),n}if(void 0!==e.length)return"number"!=typeof e.length||Q(e.length)?s(0):p(e);if("Buffer"===e.type&&Array.isArray(e.data))return p(e.data)}(e);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return l.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function u(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function d(e){return u(e),s(e<0?0:0|f(e))}function p(e){const t=e.length<0?0:0|f(e.length),n=s(t);for(let r=0;r<t;r+=1)n[r]=255&e[r];return n}function h(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');let r;return r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),Object.setPrototypeOf(r,l.prototype),r}function f(e){if(e>=a)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+a.toString(16)+" bytes");return 0|e}function y(e,t){if(l.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||$(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const n=e.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;let i=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return Y(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return z(e).length;default:if(i)return r?-1:Y(e).length;t=(""+t).toLowerCase(),i=!0}}function m(e,t,n){let r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return T(this,t,n);case"utf8":case"utf-8":return j(this,t,n);case"ascii":return A(this,t,n);case"latin1":case"binary":return O(this,t,n);case"base64":return k(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function b(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function g(e,t,n,r,i){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),Q(n=+n)&&(n=i?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(i)return-1;n=e.length-1}else if(n<0){if(!i)return-1;n=0}if("string"==typeof t&&(t=l.from(t,r)),l.isBuffer(t))return 0===t.length?-1:v(e,t,n,r,i);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):v(e,[t],n,r,i);throw new TypeError("val must be string, number or Buffer")}function v(e,t,n,r,i){let o,a=1,s=e.length,l=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;a=2,s/=2,l/=2,n/=2}function c(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(i){let r=-1;for(o=n;o<s;o++)if(c(e,o)===c(t,-1===r?0:o-r)){if(-1===r&&(r=o),o-r+1===l)return r*a}else-1!==r&&(o-=o-r),r=-1}else for(n+l>s&&(n=s-l),o=n;o>=0;o--){let n=!0;for(let r=0;r<l;r++)if(c(e,o+r)!==c(t,r)){n=!1;break}if(n)return o}return-1}function E(e,t,n,r){n=Number(n)||0;const i=e.length-n;r?(r=Number(r))>i&&(r=i):r=i;const o=t.length;let a;for(r>o/2&&(r=o/2),a=0;a<r;++a){const r=parseInt(t.substr(2*a,2),16);if(Q(r))return a;e[n+a]=r}return a}function w(e,t,n,r){return W(Y(t,e.length-n),e,n,r)}function S(e,t,n,r){return W(function(e){const t=[];for(let n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function K(e,t,n,r){return W(z(t),e,n,r)}function I(e,t,n,r){return W(function(e,t){let n,r,i;const o=[];for(let a=0;a<e.length&&!((t-=2)<0);++a)n=e.charCodeAt(a),r=n>>8,i=n%256,o.push(i),o.push(r);return o}(t,e.length-n),e,n,r)}function k(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function j(e,t,n){n=Math.min(e.length,n);const r=[];let i=t;for(;i<n;){const t=e[i];let o=null,a=t>239?4:t>223?3:t>191?2:1;if(i+a<=n){let n,r,s,l;switch(a){case 1:t<128&&(o=t);break;case 2:n=e[i+1],128==(192&n)&&(l=(31&t)<<6|63&n,l>127&&(o=l));break;case 3:n=e[i+1],r=e[i+2],128==(192&n)&&128==(192&r)&&(l=(15&t)<<12|(63&n)<<6|63&r,l>2047&&(l<55296||l>57343)&&(o=l));break;case 4:n=e[i+1],r=e[i+2],s=e[i+3],128==(192&n)&&128==(192&r)&&128==(192&s)&&(l=(15&t)<<18|(63&n)<<12|(63&r)<<6|63&s,l>65535&&l<1114112&&(o=l))}}null===o?(o=65533,a=1):o>65535&&(o-=65536,r.push(o>>>10&1023|55296),o=56320|1023&o),r.push(o),i+=a}return function(e){const t=e.length;if(t<=x)return String.fromCharCode.apply(String,e);let n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=x));return n}(r)}t.kMaxLength=a,l.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),l.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(l.prototype,"parent",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.buffer}}),Object.defineProperty(l.prototype,"offset",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.byteOffset}}),l.poolSize=8192,l.from=function(e,t,n){return c(e,t,n)},Object.setPrototypeOf(l.prototype,Uint8Array.prototype),Object.setPrototypeOf(l,Uint8Array),l.alloc=function(e,t,n){return function(e,t,n){return u(e),e<=0?s(e):void 0!==t?"string"==typeof n?s(e).fill(t,n):s(e).fill(t):s(e)}(e,t,n)},l.allocUnsafe=function(e){return d(e)},l.allocUnsafeSlow=function(e){return d(e)},l.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==l.prototype},l.compare=function(e,t){if($(e,Uint8Array)&&(e=l.from(e,e.offset,e.byteLength)),$(t,Uint8Array)&&(t=l.from(t,t.offset,t.byteLength)),!l.isBuffer(e)||!l.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let n=e.length,r=t.length;for(let i=0,o=Math.min(n,r);i<o;++i)if(e[i]!==t[i]){n=e[i],r=t[i];break}return n<r?-1:r<n?1:0},l.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return l.alloc(0);let n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;const r=l.allocUnsafe(t);let i=0;for(n=0;n<e.length;++n){let t=e[n];if($(t,Uint8Array))i+t.length>r.length?(l.isBuffer(t)||(t=l.from(t)),t.copy(r,i)):Uint8Array.prototype.set.call(r,t,i);else{if(!l.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(r,i)}i+=t.length}return r},l.byteLength=y,l.prototype._isBuffer=!0,l.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)b(this,t,t+1);return this},l.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)b(this,t,t+3),b(this,t+1,t+2);return this},l.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)b(this,t,t+7),b(this,t+1,t+6),b(this,t+2,t+5),b(this,t+3,t+4);return this},l.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?j(this,0,e):m.apply(this,arguments)},l.prototype.toLocaleString=l.prototype.toString,l.prototype.equals=function(e){if(!l.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===l.compare(this,e)},l.prototype.inspect=function(){let e="";const n=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,n).replace(/(.{2})/g,"$1 ").trim(),this.length>n&&(e+=" ... "),"<Buffer "+e+">"},o&&(l.prototype[o]=l.prototype.inspect),l.prototype.compare=function(e,t,n,r,i){if($(e,Uint8Array)&&(e=l.from(e,e.offset,e.byteLength)),!l.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===i&&(i=this.length),t<0||n>e.length||r<0||i>this.length)throw new RangeError("out of range index");if(r>=i&&t>=n)return 0;if(r>=i)return-1;if(t>=n)return 1;if(this===e)return 0;let o=(i>>>=0)-(r>>>=0),a=(n>>>=0)-(t>>>=0);const s=Math.min(o,a),c=this.slice(r,i),u=e.slice(t,n);for(let e=0;e<s;++e)if(c[e]!==u[e]){o=c[e],a=u[e];break}return o<a?-1:a<o?1:0},l.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},l.prototype.indexOf=function(e,t,n){return g(this,e,t,n,!0)},l.prototype.lastIndexOf=function(e,t,n){return g(this,e,t,n,!1)},l.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}const i=this.length-t;if((void 0===n||n>i)&&(n=i),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");let o=!1;for(;;)switch(r){case"hex":return E(this,e,t,n);case"utf8":case"utf-8":return w(this,e,t,n);case"ascii":case"latin1":case"binary":return S(this,e,t,n);case"base64":return K(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return I(this,e,t,n);default:if(o)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),o=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const x=4096;function A(e,t,n){let r="";n=Math.min(e.length,n);for(let i=t;i<n;++i)r+=String.fromCharCode(127&e[i]);return r}function O(e,t,n){let r="";n=Math.min(e.length,n);for(let i=t;i<n;++i)r+=String.fromCharCode(e[i]);return r}function T(e,t,n){const r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);let i="";for(let r=t;r<n;++r)i+=H[e[r]];return i}function R(e,t,n){const r=e.slice(t,n);let i="";for(let e=0;e<r.length-1;e+=2)i+=String.fromCharCode(r[e]+256*r[e+1]);return i}function D(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function C(e,t,n,r,i,o){if(!l.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<o)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function P(e,t,n,r,i){G(t,r,i,e,n,7);let o=Number(t&BigInt(4294967295));e[n++]=o,o>>=8,e[n++]=o,o>>=8,e[n++]=o,o>>=8,e[n++]=o;let a=Number(t>>BigInt(32)&BigInt(4294967295));return e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a,n}function M(e,t,n,r,i){G(t,r,i,e,n,7);let o=Number(t&BigInt(4294967295));e[n+7]=o,o>>=8,e[n+6]=o,o>>=8,e[n+5]=o,o>>=8,e[n+4]=o;let a=Number(t>>BigInt(32)&BigInt(4294967295));return e[n+3]=a,a>>=8,e[n+2]=a,a>>=8,e[n+1]=a,a>>=8,e[n]=a,n+8}function N(e,t,n,r,i,o){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function _(e,t,n,r,o){return t=+t,n>>>=0,o||N(e,0,n,4),i.write(e,t,n,r,23,4),n+4}function L(e,t,n,r,o){return t=+t,n>>>=0,o||N(e,0,n,8),i.write(e,t,n,r,52,8),n+8}l.prototype.slice=function(e,t){const n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);const r=this.subarray(e,t);return Object.setPrototypeOf(r,l.prototype),r},l.prototype.readUintLE=l.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||D(e,t,this.length);let r=this[e],i=1,o=0;for(;++o<t&&(i*=256);)r+=this[e+o]*i;return r},l.prototype.readUintBE=l.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||D(e,t,this.length);let r=this[e+--t],i=1;for(;t>0&&(i*=256);)r+=this[e+--t]*i;return r},l.prototype.readUint8=l.prototype.readUInt8=function(e,t){return e>>>=0,t||D(e,1,this.length),this[e]},l.prototype.readUint16LE=l.prototype.readUInt16LE=function(e,t){return e>>>=0,t||D(e,2,this.length),this[e]|this[e+1]<<8},l.prototype.readUint16BE=l.prototype.readUInt16BE=function(e,t){return e>>>=0,t||D(e,2,this.length),this[e]<<8|this[e+1]},l.prototype.readUint32LE=l.prototype.readUInt32LE=function(e,t){return e>>>=0,t||D(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},l.prototype.readUint32BE=l.prototype.readUInt32BE=function(e,t){return e>>>=0,t||D(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},l.prototype.readBigUInt64LE=Z(function(e){q(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||B(e,this.length-8);const r=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,i=this[++e]+256*this[++e]+65536*this[++e]+n*2**24;return BigInt(r)+(BigInt(i)<<BigInt(32))}),l.prototype.readBigUInt64BE=Z(function(e){q(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||B(e,this.length-8);const r=t*2**24+65536*this[++e]+256*this[++e]+this[++e],i=this[++e]*2**24+65536*this[++e]+256*this[++e]+n;return(BigInt(r)<<BigInt(32))+BigInt(i)}),l.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||D(e,t,this.length);let r=this[e],i=1,o=0;for(;++o<t&&(i*=256);)r+=this[e+o]*i;return i*=128,r>=i&&(r-=Math.pow(2,8*t)),r},l.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||D(e,t,this.length);let r=t,i=1,o=this[e+--r];for(;r>0&&(i*=256);)o+=this[e+--r]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*t)),o},l.prototype.readInt8=function(e,t){return e>>>=0,t||D(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},l.prototype.readInt16LE=function(e,t){e>>>=0,t||D(e,2,this.length);const n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt16BE=function(e,t){e>>>=0,t||D(e,2,this.length);const n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt32LE=function(e,t){return e>>>=0,t||D(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},l.prototype.readInt32BE=function(e,t){return e>>>=0,t||D(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},l.prototype.readBigInt64LE=Z(function(e){q(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||B(e,this.length-8);const r=this[e+4]+256*this[e+5]+65536*this[e+6]+(n<<24);return(BigInt(r)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)}),l.prototype.readBigInt64BE=Z(function(e){q(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||B(e,this.length-8);const r=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(r)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+n)}),l.prototype.readFloatLE=function(e,t){return e>>>=0,t||D(e,4,this.length),i.read(this,e,!0,23,4)},l.prototype.readFloatBE=function(e,t){return e>>>=0,t||D(e,4,this.length),i.read(this,e,!1,23,4)},l.prototype.readDoubleLE=function(e,t){return e>>>=0,t||D(e,8,this.length),i.read(this,e,!0,52,8)},l.prototype.readDoubleBE=function(e,t){return e>>>=0,t||D(e,8,this.length),i.read(this,e,!1,52,8)},l.prototype.writeUintLE=l.prototype.writeUIntLE=function(e,t,n,r){if(e=+e,t>>>=0,n>>>=0,!r){C(this,e,t,n,Math.pow(2,8*n)-1,0)}let i=1,o=0;for(this[t]=255&e;++o<n&&(i*=256);)this[t+o]=e/i&255;return t+n},l.prototype.writeUintBE=l.prototype.writeUIntBE=function(e,t,n,r){if(e=+e,t>>>=0,n>>>=0,!r){C(this,e,t,n,Math.pow(2,8*n)-1,0)}let i=n-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+n},l.prototype.writeUint8=l.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||C(this,e,t,1,255,0),this[t]=255&e,t+1},l.prototype.writeUint16LE=l.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||C(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},l.prototype.writeUint16BE=l.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||C(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},l.prototype.writeUint32LE=l.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||C(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},l.prototype.writeUint32BE=l.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||C(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},l.prototype.writeBigUInt64LE=Z(function(e,t=0){return P(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),l.prototype.writeBigUInt64BE=Z(function(e,t=0){return M(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),l.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);C(this,e,t,n,r-1,-r)}let i=0,o=1,a=0;for(this[t]=255&e;++i<n&&(o*=256);)e<0&&0===a&&0!==this[t+i-1]&&(a=1),this[t+i]=(e/o|0)-a&255;return t+n},l.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);C(this,e,t,n,r-1,-r)}let i=n-1,o=1,a=0;for(this[t+i]=255&e;--i>=0&&(o*=256);)e<0&&0===a&&0!==this[t+i+1]&&(a=1),this[t+i]=(e/o|0)-a&255;return t+n},l.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||C(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},l.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||C(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},l.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||C(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},l.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||C(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},l.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||C(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},l.prototype.writeBigInt64LE=Z(function(e,t=0){return P(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),l.prototype.writeBigInt64BE=Z(function(e,t=0){return M(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),l.prototype.writeFloatLE=function(e,t,n){return _(this,e,t,!0,n)},l.prototype.writeFloatBE=function(e,t,n){return _(this,e,t,!1,n)},l.prototype.writeDoubleLE=function(e,t,n){return L(this,e,t,!0,n)},l.prototype.writeDoubleBE=function(e,t,n){return L(this,e,t,!1,n)},l.prototype.copy=function(e,t,n,r){if(!l.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);const i=r-n;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,n,r):Uint8Array.prototype.set.call(e,this.subarray(n,r),t),i},l.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!l.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===e.length){const t=e.charCodeAt(0);("utf8"===r&&t<128||"latin1"===r)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;let i;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(i=t;i<n;++i)this[i]=e;else{const o=l.isBuffer(e)?e:l.from(e,r),a=o.length;if(0===a)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(i=0;i<n-t;++i)this[i+t]=o[i%a]}return this};const J={};function F(e,t,n){J[e]=class extends n{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function V(e){let t="",n=e.length;const r="-"===e[0]?1:0;for(;n>=r+4;n-=3)t=`_${e.slice(n-3,n)}${t}`;return`${e.slice(0,n)}${t}`}function G(e,t,n,r,i,o){if(e>n||e<t){const r="bigint"==typeof t?"n":"";let i;throw i=o>3?0===t||t===BigInt(0)?`>= 0${r} and < 2${r} ** ${8*(o+1)}${r}`:`>= -(2${r} ** ${8*(o+1)-1}${r}) and < 2 ** ${8*(o+1)-1}${r}`:`>= ${t}${r} and <= ${n}${r}`,new J.ERR_OUT_OF_RANGE("value",i,e)}!function(e,t,n){q(t,"offset"),void 0!==e[t]&&void 0!==e[t+n]||B(t,e.length-(n+1))}(r,i,o)}function q(e,t){if("number"!=typeof e)throw new J.ERR_INVALID_ARG_TYPE(t,"number",e)}function B(e,t,n){if(Math.floor(e)!==e)throw q(e,n),new J.ERR_OUT_OF_RANGE(n||"offset","an integer",e);if(t<0)throw new J.ERR_BUFFER_OUT_OF_BOUNDS;throw new J.ERR_OUT_OF_RANGE(n||"offset",`>= ${n?1:0} and <= ${t}`,e)}F("ERR_BUFFER_OUT_OF_BOUNDS",function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),F("ERR_INVALID_ARG_TYPE",function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`},TypeError),F("ERR_OUT_OF_RANGE",function(e,t,n){let r=`The value of "${e}" is out of range.`,i=n;return Number.isInteger(n)&&Math.abs(n)>2**32?i=V(String(n)):"bigint"==typeof n&&(i=String(n),(n>BigInt(2)**BigInt(32)||n<-(BigInt(2)**BigInt(32)))&&(i=V(i)),i+="n"),r+=` It must be ${t}. Received ${i}`,r},RangeError);const U=/[^+/0-9A-Za-z-_]/g;function Y(e,t){let n;t=t||1/0;const r=e.length;let i=null;const o=[];for(let a=0;a<r;++a){if(n=e.charCodeAt(a),n>55295&&n<57344){if(!i){if(n>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(a+1===r){(t-=3)>-1&&o.push(239,191,189);continue}i=n;continue}if(n<56320){(t-=3)>-1&&o.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(t-=3)>-1&&o.push(239,191,189);if(i=null,n<128){if((t-=1)<0)break;o.push(n)}else if(n<2048){if((t-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function z(e){return r.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(U,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function W(e,t,n,r){let i;for(i=0;i<r&&!(i+n>=t.length||i>=e.length);++i)t[i+n]=e[i];return i}function $(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function Q(e){return e!=e}const H=function(){const e="0123456789abcdef",t=new Array(256);for(let n=0;n<16;++n){const r=16*n;for(let i=0;i<16;++i)t[r+i]=e[n]+e[i]}return t}();function Z(e){return"undefined"==typeof BigInt?X:e}function X(){throw new Error("BigInt not supported")}},(e,t)=>{"use strict";t.byteLength=function(e){var t=s(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,n,o=s(e),a=o[0],l=o[1],c=new i(function(e,t,n){return 3*(t+n)/4-n}(0,a,l)),u=0,d=l>0?a-4:a;for(n=0;n<d;n+=4)t=r[e.charCodeAt(n)]<<18|r[e.charCodeAt(n+1)]<<12|r[e.charCodeAt(n+2)]<<6|r[e.charCodeAt(n+3)],c[u++]=t>>16&255,c[u++]=t>>8&255,c[u++]=255&t;2===l&&(t=r[e.charCodeAt(n)]<<2|r[e.charCodeAt(n+1)]>>4,c[u++]=255&t);1===l&&(t=r[e.charCodeAt(n)]<<10|r[e.charCodeAt(n+1)]<<4|r[e.charCodeAt(n+2)]>>2,c[u++]=t>>8&255,c[u++]=255&t);return c},t.fromByteArray=function(e){for(var t,r=e.length,i=r%3,o=[],a=16383,s=0,l=r-i;s<l;s+=a)o.push(c(e,s,s+a>l?l:s+a));1===i?(t=e[r-1],o.push(n[t>>2]+n[t<<4&63]+"==")):2===i&&(t=(e[r-2]<<8)+e[r-1],o.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"="));return o.join("")};for(var n=[],r=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",a=0;a<64;++a)n[a]=o[a],r[o.charCodeAt(a)]=a;function s(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function l(e){return n[e>>18&63]+n[e>>12&63]+n[e>>6&63]+n[63&e]}function c(e,t,n){for(var r,i=[],o=t;o<n;o+=3)r=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),i.push(l(r));return i.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},(e,t)=>{t.read=function(e,t,n,r,i){var o,a,s=8*i-r-1,l=(1<<s)-1,c=l>>1,u=-7,d=n?i-1:0,p=n?-1:1,h=e[t+d];for(d+=p,o=h&(1<<-u)-1,h>>=-u,u+=s;u>0;o=256*o+e[t+d],d+=p,u-=8);for(a=o&(1<<-u)-1,o>>=-u,u+=r;u>0;a=256*a+e[t+d],d+=p,u-=8);if(0===o)o=1-c;else{if(o===l)return a?NaN:1/0*(h?-1:1);a+=Math.pow(2,r),o-=c}return(h?-1:1)*a*Math.pow(2,o-r)},t.write=function(e,t,n,r,i,o){var a,s,l,c=8*o-i-1,u=(1<<c)-1,d=u>>1,p=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:o-1,f=r?1:-1,y=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,a=u):(a=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-a))<1&&(a--,l*=2),(t+=a+d>=1?p/l:p*Math.pow(2,1-d))*l>=2&&(a++,l/=2),a+d>=u?(s=0,a=u):a+d>=1?(s=(t*l-1)*Math.pow(2,i),a+=d):(s=t*Math.pow(2,d-1)*Math.pow(2,i),a=0));i>=8;e[n+h]=255&s,h+=f,s/=256,i-=8);for(a=a<<i|s,c+=i;c>0;e[n+h]=255&a,h+=f,a/=256,c-=8);e[n+h-f]|=128*y}},(e,t,n)=>{"use strict";var r=n(170).Buffer,i=r.isEncoding||function(e){switch((e=""+e)&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function o(e){var t;switch(this.encoding=function(e){var t=function(e){if(!e)return"utf8";for(var t;;)switch(e){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return e;default:if(t)return;e=(""+e).toLowerCase(),t=!0}}(e);if("string"!=typeof t&&(r.isEncoding===i||!i(e)))throw new Error("Unknown encoding: "+e);return t||e}(e),this.encoding){case"utf16le":this.text=l,this.end=c,t=4;break;case"utf8":this.fillLast=s,t=4;break;case"base64":this.text=u,this.end=d,t=3;break;default:return this.write=p,void(this.end=h)}this.lastNeed=0,this.lastTotal=0,this.lastChar=r.allocUnsafe(t)}function a(e){return e<=127?0:e>>5==6?2:e>>4==14?3:e>>3==30?4:e>>6==2?-1:-2}function s(e){var t=this.lastTotal-this.lastNeed,n=function(e,t){if(128!=(192&t[0]))return e.lastNeed=0,"�";if(e.lastNeed>1&&t.length>1){if(128!=(192&t[1]))return e.lastNeed=1,"�";if(e.lastNeed>2&&t.length>2&&128!=(192&t[2]))return e.lastNeed=2,"�"}}(this,e);return void 0!==n?n:this.lastNeed<=e.length?(e.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(e.copy(this.lastChar,t,0,e.length),void(this.lastNeed-=e.length))}function l(e,t){if((e.length-t)%2==0){var n=e.toString("utf16le",t);if(n){var r=n.charCodeAt(n.length-1);if(r>=55296&&r<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],n.slice(0,-1)}return n}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString("utf16le",t,e.length-1)}function c(e){var t=e&&e.length?this.write(e):"";if(this.lastNeed){var n=this.lastTotal-this.lastNeed;return t+this.lastChar.toString("utf16le",0,n)}return t}function u(e,t){var n=(e.length-t)%3;return 0===n?e.toString("base64",t):(this.lastNeed=3-n,this.lastTotal=3,1===n?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString("base64",t,e.length-n))}function d(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+this.lastChar.toString("base64",0,3-this.lastNeed):t}function p(e){return e.toString(this.encoding)}function h(e){return e&&e.length?this.write(e):""}t.StringDecoder=o,o.prototype.write=function(e){if(0===e.length)return"";var t,n;if(this.lastNeed){if(void 0===(t=this.fillLast(e)))return"";n=this.lastNeed,this.lastNeed=0}else n=0;return n<e.length?t?t+this.text(e,n):this.text(e,n):t||""},o.prototype.end=function(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+"�":t},o.prototype.text=function(e,t){var n=function(e,t,n){var r=t.length-1;if(r<n)return 0;var i=a(t[r]);if(i>=0)return i>0&&(e.lastNeed=i-1),i;if(--r<n||-2===i)return 0;if(i=a(t[r]),i>=0)return i>0&&(e.lastNeed=i-2),i;if(--r<n||-2===i)return 0;if(i=a(t[r]),i>=0)return i>0&&(2===i?i=0:e.lastNeed=i-3),i;return 0}(this,e,t);if(!this.lastNeed)return e.toString("utf8",t);this.lastTotal=n;var r=e.length-(n-this.lastNeed);return e.copy(this.lastChar,0,r),e.toString("utf8",t,r)},o.prototype.fillLast=function(e){if(this.lastNeed<=e.length)return e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length}},(e,t,n)=>{var r=n(166),i=r.Buffer;function o(e,t){for(var n in e)t[n]=e[n]}function a(e,t,n){return i(e,t,n)}i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?e.exports=r:(o(r,t),t.Buffer=a),a.prototype=Object.create(i.prototype),o(i,a),a.from=function(e,t,n){if("number"==typeof e)throw new TypeError("Argument must not be a number");return i(e,t,n)},a.alloc=function(e,t,n){if("number"!=typeof e)throw new TypeError("Argument must be a number");var r=i(e);return void 0!==t?"string"==typeof n?r.fill(t,n):r.fill(t):r.fill(0),r},a.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return i(e)},a.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return r.SlowBuffer(e)}},(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});function n(e){return"unsubscribe"===e?"subscribe":"punsubscribe"===e?"psubscribe":"sunsubscribe"===e?"ssubscribe":e}t.default=class{constructor(){this.set={subscribe:{},psubscribe:{},ssubscribe:{}}}add(e,t){this.set[n(e)][t]=!0}del(e,t){delete this.set[n(e)][t]}channels(e){return Object.keys(this.set[n(e)])}isEmpty(){return 0===this.channels("subscribe").length&&0===this.channels("psubscribe").length&&0===this.channels("ssubscribe").length}}},(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DEFAULT_REDIS_OPTIONS=void 0,t.DEFAULT_REDIS_OPTIONS={port:6379,host:"localhost",family:4,connectTimeout:1e4,disconnectTimeout:2e3,retryStrategy:function(e){return Math.min(50*e,2e3)},keepAlive:0,noDelay:!0,connectionName:null,sentinels:null,name:null,role:"master",sentinelRetryStrategy:function(e){return Math.min(10*e,1e3)},sentinelReconnectStrategy:function(){return 6e4},natMap:null,enableTLSForSentinelMode:!1,updateSentinels:!0,failoverDetector:!1,username:null,password:null,db:0,enableOfflineQueue:!0,enableReadyCheck:!0,autoResubscribe:!0,autoResendUnfulfilledCommands:!0,lazyConnect:!1,keyPrefix:"",reconnectOnError:null,readOnly:!1,stringNumbers:!1,maxRetriesPerRequest:20,maxLoadingRetryTime:1e4,enableAutoPipelining:!1,autoPipeliningIgnoredCommands:[],sentinelMaxConnections:10}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{Scripts:()=>c,raw2NextJobData:()=>u});var r=n(174),i=n(12),o=n(22),a=n(183),s=n(184);const l=new r.Packr({useRecords:!1,encodeUndefinedAsNil:!0}).pack;class c{constructor(e){this.queue=e,this.version=a.version;const t=this.queue.keys;this.moveToFinishedKeys=[t.wait,t.active,t.prioritized,t.events,t.stalled,t.limiter,t.delayed,t.paused,t.meta,t.pc,void 0,void 0,void 0,void 0]}execCommand(e,t,n){return e[`${t}:${this.version}`](n)}async isJobInList(e,t){const n=await this.queue.client;let r;return r=(0,o.isRedisVersionLowerThan)(this.queue.redisVersion,"6.0.6")?await this.execCommand(n,"isJobInList",[e,t]):await n.lpos(e,t),Number.isInteger(r)}addDelayedJobArgs(e,t,n){const r=this.queue.keys,i=[r.marker,r.meta,r.id,r.delayed,r.completed,r.events];return i.push(l(n),e.data,t),i}addDelayedJob(e,t,n,r){const i=this.addDelayedJobArgs(t,n,r);return this.execCommand(e,"addDelayedJob",i)}addPrioritizedJobArgs(e,t,n){const r=this.queue.keys,i=[r.marker,r.meta,r.id,r.prioritized,r.delayed,r.completed,r.active,r.events,r.pc];return i.push(l(n),e.data,t),i}addPrioritizedJob(e,t,n,r){const i=this.addPrioritizedJobArgs(t,n,r);return this.execCommand(e,"addPrioritizedJob",i)}addParentJobArgs(e,t,n){const r=this.queue.keys,i=[r.meta,r.id,r.delayed,r.completed,r.events];return i.push(l(n),e.data,t),i}addParentJob(e,t,n,r){const i=this.addParentJobArgs(t,n,r);return this.execCommand(e,"addParentJob",i)}addStandardJobArgs(e,t,n){const r=this.queue.keys,i=[r.wait,r.paused,r.meta,r.id,r.completed,r.delayed,r.active,r.events,r.marker];return i.push(l(n),e.data,t),i}addStandardJob(e,t,n,r){const i=this.addStandardJobArgs(t,n,r);return this.execCommand(e,"addStandardJob",i)}async addJob(e,t,n,r,i={}){const o=this.queue.keys,a=t.parent,s=[o[""],void 0!==r?r:"",t.name,t.timestamp,t.parentKey||null,i.waitChildrenKey||null,i.parentDependenciesKey||null,a,t.repeatJobKey,t.deduplicationId?`${o.de}:${t.deduplicationId}`:null];let c,u;if(n.repeat){const e=Object.assign({},n.repeat);e.startDate&&(e.startDate=+new Date(e.startDate)),e.endDate&&(e.endDate=+new Date(e.endDate)),c=l(Object.assign(Object.assign({},n),{repeat:e}))}else c=l(n);if(u=i.waitChildrenKey?await this.addParentJob(e,t,c,s):"number"==typeof n.delay&&n.delay>0?await this.addDelayedJob(e,t,c,s):n.priority?await this.addPrioritizedJob(e,t,c,s):await this.addStandardJob(e,t,c,s),u<0)throw this.finishedErrors({code:u,parentKey:i.parentKey,command:"addJob"});return u}pauseArgs(e){let t="wait",n="paused";e||(t="paused",n="wait");const r=[t,n,"meta","prioritized"].map(e=>this.queue.toKey(e));r.push(this.queue.keys.events,this.queue.keys.delayed,this.queue.keys.marker);const i=[e?"paused":"resumed"];return r.concat(i)}async pause(e){const t=await this.queue.client,n=this.pauseArgs(e);return this.execCommand(t,"pause",n)}addRepeatableJobArgs(e,t,n,r){const i=this.queue.keys,o=[i.repeat,i.delayed],a=[t,l(n),r,e,i[""]];return o.concat(a)}async addRepeatableJob(e,t,n,r){const i=await this.queue.client,o=this.addRepeatableJobArgs(e,t,n,r);return this.execCommand(i,"addRepeatableJob",o)}async addJobScheduler(e,t,n,r,i,o,a){const s=await this.queue.client,c=this.queue.keys,u=[c.repeat,c.delayed,c.wait,c.paused,c.meta,c.prioritized,c.marker,c.id,c.events,c.pc,c.active],d=[t,l(i),e,n,l(r),l(o),Date.now(),c[""],a?this.queue.toKey(a):""];return this.execCommand(s,"addJobScheduler",u.concat(d))}async updateRepeatableJobMillis(e,t,n,r){const i=[this.queue.keys.repeat,n,t,r];return this.execCommand(e,"updateRepeatableJobMillis",i)}async updateJobSchedulerNextMillis(e,t,n,r,i){const o=await this.queue.client,a=this.queue.keys,s=[a.repeat,a.delayed,a.wait,a.paused,a.meta,a.prioritized,a.marker,a.id,a.events,a.pc,i?this.queue.toKey(i):"",a.active],c=[t,e,n,l(r),Date.now(),a[""],i];return this.execCommand(o,"updateJobScheduler",s.concat(c))}removeRepeatableArgs(e,t,n){const r=this.queue.keys,i=[r.repeat,r.delayed,r.events],o=[e,this.getRepeatConcatOptions(t,n),n,r[""]];return i.concat(o)}getRepeatConcatOptions(e,t){return t&&t.split(":").length>2?t:e}async removeRepeatable(e,t,n){const r=await this.queue.client,i=this.removeRepeatableArgs(e,t,n);return this.execCommand(r,"removeRepeatable",i)}async removeJobScheduler(e){const t=await this.queue.client,n=this.queue.keys,r=[n.repeat,n.delayed,n.events],i=[e,n[""]];return this.execCommand(t,"removeJobScheduler",r.concat(i))}removeArgs(e,t){const n=[e,"repeat"].map(e=>this.queue.toKey(e)),r=[e,t?1:0,this.queue.toKey("")];return n.concat(r)}async remove(e,t){const n=await this.queue.client,r=this.removeArgs(e,t),i=await this.execCommand(n,"removeJob",r);if(i<0)throw this.finishedErrors({code:i,jobId:e,command:"removeJob"});return i}async removeUnprocessedChildren(e){const t=await this.queue.client,n=[this.queue.toKey(e),this.queue.keys.meta,this.queue.toKey(""),e];await this.execCommand(t,"removeUnprocessedChildren",n)}async extendLock(e,t,n,r){r=r||await this.queue.client;const i=[this.queue.toKey(e)+":lock",this.queue.keys.stalled,t,n,e];return this.execCommand(r,"extendLock",i)}async extendLocks(e,t,n){const r=await this.queue.client,i=[this.queue.keys.stalled,this.queue.toKey(""),l(t),l(e),n];return this.execCommand(r,"extendLocks",i)}async updateData(e,t){const n=await this.queue.client,r=[this.queue.toKey(e.id)],i=JSON.stringify(t),o=await this.execCommand(n,"updateData",r.concat([i]));if(o<0)throw this.finishedErrors({code:o,jobId:e.id,command:"updateData"})}async updateProgress(e,t){const n=await this.queue.client,r=[this.queue.toKey(e),this.queue.keys.events,this.queue.keys.meta],i=JSON.stringify(t),o=await this.execCommand(n,"updateProgress",r.concat([e,i]));if(o<0)throw this.finishedErrors({code:o,jobId:e,command:"updateProgress"})}async addLog(e,t,n){const r=await this.queue.client,i=[this.queue.toKey(e),this.queue.toKey(e)+":logs"],o=await this.execCommand(r,"addLog",i.concat([e,t,n||""]));if(o<0)throw this.finishedErrors({code:o,jobId:e,command:"addLog"});return o}moveToFinishedArgs(e,t,n,r,i,a,s,c=!0,u){var d,p,h,f,y,m,b;const g=this.queue.keys,v=this.queue.opts,E="completed"===i?v.removeOnComplete:v.removeOnFail,w=this.queue.toKey(`metrics:${i}`),S=this.moveToFinishedKeys;S[10]=g[i],S[11]=this.queue.toKey(null!==(d=e.id)&&void 0!==d?d:""),S[12]=w,S[13]=this.queue.keys.marker;const K=this.getKeepJobs(r,E),I=[e.id,s,n,void 0===t?"null":t,i,!c||this.queue.closing?0:1,g[""],l({token:a,name:v.name,keepJobs:K,limiter:v.limiter,lockDuration:v.lockDuration,attempts:e.opts.attempts,maxMetricsSize:(null===(p=v.metrics)||void 0===p?void 0:p.maxDataPoints)?null===(h=v.metrics)||void 0===h?void 0:h.maxDataPoints:"",fpof:!!(null===(f=e.opts)||void 0===f?void 0:f.failParentOnFailure),cpof:!!(null===(y=e.opts)||void 0===y?void 0:y.continueParentOnFailure),idof:!!(null===(m=e.opts)||void 0===m?void 0:m.ignoreDependencyOnFailure),rdof:!!(null===(b=e.opts)||void 0===b?void 0:b.removeDependencyOnFailure)}),u?l((0,o.objectToFlatArray)(u)):void 0];return S.concat(I)}getKeepJobs(e,t){return void 0===e?t||{count:e?0:-1}:"object"==typeof e?e:"number"==typeof e?{count:e}:{count:e?0:-1}}async moveToFinished(e,t){const n=await this.queue.client,r=await this.execCommand(n,"moveToFinished",t);if(r<0)throw this.finishedErrors({code:r,jobId:e,command:"moveToFinished",state:"active"});if(void 0!==r)return u(r)}drainArgs(e){const t=this.queue.keys,n=[t.wait,t.paused,t.delayed,t.prioritized,t.repeat],r=[t[""],e?"1":"0"];return n.concat(r)}async drain(e){const t=await this.queue.client,n=this.drainArgs(e);return this.execCommand(t,"drain",n)}removeChildDependencyArgs(e,t){const n=[this.queue.keys[""]],r=[this.queue.toKey(e),t];return n.concat(r)}async removeChildDependency(e,t){const n=await this.queue.client,r=this.removeChildDependencyArgs(e,t),i=await this.execCommand(n,"removeChildDependency",r);switch(i){case 0:return!0;case 1:return!1;default:throw this.finishedErrors({code:i,jobId:e,parentKey:t,command:"removeChildDependency"})}}getRangesArgs(e,t,n,r){const i=this.queue.keys,o=[t,n,r?"1":"0",...e.map(e=>"waiting"===e?"wait":e)];return[i[""]].concat(o)}async getRanges(e,t=0,n=1,r=!1){const i=await this.queue.client,o=this.getRangesArgs(e,t,n,r);return await this.execCommand(i,"getRanges",o)}getCountsArgs(e){const t=this.queue.keys,n=[...e.map(e=>"waiting"===e?"wait":e)];return[t[""]].concat(n)}async getCounts(e){const t=await this.queue.client,n=this.getCountsArgs(e);return await this.execCommand(t,"getCounts",n)}getCountsPerPriorityArgs(e){const t=e;return[this.queue.keys.wait,this.queue.keys.paused,this.queue.keys.meta,this.queue.keys.prioritized].concat(t)}async getCountsPerPriority(e){const t=await this.queue.client,n=this.getCountsPerPriorityArgs(e);return await this.execCommand(t,"getCountsPerPriority",n)}getDependencyCountsArgs(e,t){const n=t;return[`${e}:processed`,`${e}:dependencies`,`${e}:failed`,`${e}:unsuccessful`].map(e=>this.queue.toKey(e)).concat(n)}async getDependencyCounts(e,t){const n=await this.queue.client,r=this.getDependencyCountsArgs(e,t);return await this.execCommand(n,"getDependencyCounts",r)}moveToCompletedArgs(e,t,n,r,i=!1){const o=Date.now();return this.moveToFinishedArgs(e,t,"returnvalue",n,"completed",r,o,i)}moveToFailedArgs(e,t,n,r,i=!1,o){const a=Date.now();return this.moveToFinishedArgs(e,t,"failedReason",n,"failed",r,a,i,o)}async isFinished(e,t=!1){const n=await this.queue.client,r=["completed","failed",e].map(e=>this.queue.toKey(e));return this.execCommand(n,"isFinished",r.concat([e,t?"1":""]))}async getState(e){const t=await this.queue.client,n=["completed","failed","delayed","active","wait","paused","waiting-children","prioritized"].map(e=>this.queue.toKey(e));return(0,o.isRedisVersionLowerThan)(this.queue.redisVersion,"6.0.6")?this.execCommand(t,"getState",n.concat([e])):this.execCommand(t,"getStateV2",n.concat([e]))}async changeDelay(e,t){const n=await this.queue.client,r=this.changeDelayArgs(e,t),i=await this.execCommand(n,"changeDelay",r);if(i<0)throw this.finishedErrors({code:i,jobId:e,command:"changeDelay",state:"delayed"})}changeDelayArgs(e,t){const n=Date.now();return[this.queue.keys.delayed,this.queue.keys.meta,this.queue.keys.marker,this.queue.keys.events].concat([t,JSON.stringify(n),e,this.queue.toKey(e)])}async changePriority(e,t=0,n=!1){const r=await this.queue.client,i=this.changePriorityArgs(e,t,n),o=await this.execCommand(r,"changePriority",i);if(o<0)throw this.finishedErrors({code:o,jobId:e,command:"changePriority"})}changePriorityArgs(e,t=0,n=!1){return[this.queue.keys.wait,this.queue.keys.paused,this.queue.keys.meta,this.queue.keys.prioritized,this.queue.keys.active,this.queue.keys.pc,this.queue.keys.marker].concat([t,this.queue.toKey(""),e,n?1:0])}moveToDelayedArgs(e,t,n,r,i={}){const a=this.queue.keys;return[a.marker,a.active,a.prioritized,a.delayed,this.queue.toKey(e),a.events,a.meta,a.stalled].concat([this.queue.keys[""],t,e,n,r,i.skipAttempt?"1":"0",i.fieldsToUpdate?l((0,o.objectToFlatArray)(i.fieldsToUpdate)):void 0])}moveToWaitingChildrenArgs(e,t,n){const r=Date.now(),i=(0,o.getParentKey)(n.child);return["active","waiting-children",e,`${e}:dependencies`,`${e}:unsuccessful`,"stalled","events"].map(e=>this.queue.toKey(e)).concat([t,null!=i?i:"",JSON.stringify(r),e,this.queue.toKey("")])}isMaxedArgs(){const e=this.queue.keys;return[e.meta,e.active]}async isMaxed(){const e=await this.queue.client,t=this.isMaxedArgs();return!!await this.execCommand(e,"isMaxed",t)}async moveToDelayed(e,t,n,r="0",i={}){const o=await this.queue.client,a=this.moveToDelayedArgs(e,t,r,n,i),s=await this.execCommand(o,"moveToDelayed",a);if(s<0)throw this.finishedErrors({code:s,jobId:e,command:"moveToDelayed",state:"active"})}async moveToWaitingChildren(e,t,n={}){const r=await this.queue.client,i=this.moveToWaitingChildrenArgs(e,t,n),o=await this.execCommand(r,"moveToWaitingChildren",i);switch(o){case 0:return!0;case 1:return!1;default:throw this.finishedErrors({code:o,jobId:e,command:"moveToWaitingChildren",state:"active"})}}getRateLimitTtlArgs(e){return[this.queue.keys.limiter].concat([null!=e?e:"0"])}async getRateLimitTtl(e){const t=await this.queue.client,n=this.getRateLimitTtlArgs(e);return this.execCommand(t,"getRateLimitTtl",n)}async cleanJobsInSet(e,t,n=0){const r=await this.queue.client;return this.execCommand(r,"cleanJobsInSet",[this.queue.toKey(e),this.queue.toKey("events"),this.queue.toKey("repeat"),this.queue.toKey(""),t,n,e])}getJobSchedulerArgs(e){return[this.queue.keys.repeat].concat([e])}async getJobScheduler(e){const t=await this.queue.client,n=this.getJobSchedulerArgs(e);return this.execCommand(t,"getJobScheduler",n)}retryJobArgs(e,t,n,r={}){const i=(t?"R":"L")+"PUSH";return[this.queue.keys.active,this.queue.keys.wait,this.queue.keys.paused,this.queue.toKey(e),this.queue.keys.meta,this.queue.keys.events,this.queue.keys.delayed,this.queue.keys.prioritized,this.queue.keys.pc,this.queue.keys.marker,this.queue.keys.stalled].concat([this.queue.toKey(""),Date.now(),i,e,n,r.fieldsToUpdate?l((0,o.objectToFlatArray)(r.fieldsToUpdate)):void 0])}async retryJob(e,t,n="0",r={}){const i=await this.queue.client,o=this.retryJobArgs(e,t,n,r),a=await this.execCommand(i,"retryJob",o);if(a<0)throw this.finishedErrors({code:a,jobId:e,command:"retryJob",state:"active"})}moveJobsToWaitArgs(e,t,n){const r=[t,n,e];return[this.queue.toKey(""),this.queue.keys.events,this.queue.toKey(e),this.queue.toKey("wait"),this.queue.toKey("paused"),this.queue.keys.meta,this.queue.keys.active,this.queue.keys.marker].concat(r)}async retryJobs(e="failed",t=1e3,n=(new Date).getTime()){const r=await this.queue.client,i=this.moveJobsToWaitArgs(e,t,n);return this.execCommand(r,"moveJobsToWait",i)}async promoteJobs(e=1e3){const t=await this.queue.client,n=this.moveJobsToWaitArgs("delayed",e,Number.MAX_VALUE);return this.execCommand(t,"moveJobsToWait",n)}async reprocessJob(e,t){const n=await this.queue.client,r=[this.queue.toKey(e.id),this.queue.keys.events,this.queue.toKey(t),this.queue.keys.wait,this.queue.keys.meta,this.queue.keys.paused,this.queue.keys.active,this.queue.keys.marker],i=[e.id,(e.opts.lifo?"R":"L")+"PUSH","failed"===t?"failedReason":"returnvalue",t],o=await this.execCommand(n,"reprocessJob",r.concat(i));if(1!==o)throw this.finishedErrors({code:o,jobId:e.id,command:"reprocessJob",state:t})}async moveToActive(e,t,n){const r=this.queue.opts,i=this.queue.keys,o=[i.wait,i.active,i.prioritized,i.events,i.stalled,i.limiter,i.delayed,i.paused,i.meta,i.pc,i.marker],a=[i[""],Date.now(),l({token:t,lockDuration:r.lockDuration,limiter:r.limiter,name:n})];return u(await this.execCommand(e,"moveToActive",o.concat(a)))}async promote(e){const t=await this.queue.client,n=[this.queue.keys.delayed,this.queue.keys.wait,this.queue.keys.paused,this.queue.keys.meta,this.queue.keys.prioritized,this.queue.keys.active,this.queue.keys.pc,this.queue.keys.events,this.queue.keys.marker],r=[this.queue.toKey(""),e],i=await this.execCommand(t,"promote",n.concat(r));if(i<0)throw this.finishedErrors({code:i,jobId:e,command:"promote",state:"delayed"})}moveStalledJobsToWaitArgs(){const e=this.queue.opts,t=[this.queue.keys.stalled,this.queue.keys.wait,this.queue.keys.active,this.queue.keys["stalled-check"],this.queue.keys.meta,this.queue.keys.paused,this.queue.keys.marker,this.queue.keys.events],n=[e.maxStalledCount,this.queue.toKey(""),Date.now(),e.stalledInterval];return t.concat(n)}async moveStalledJobsToWait(){const e=await this.queue.client,t=this.moveStalledJobsToWaitArgs();return this.execCommand(e,"moveStalledJobsToWait",t)}async moveJobFromActiveToWait(e,t="0"){const n=await this.queue.client,r=[this.queue.keys.active,this.queue.keys.wait,this.queue.keys.stalled,this.queue.keys.paused,this.queue.keys.meta,this.queue.keys.limiter,this.queue.keys.prioritized,this.queue.keys.marker,this.queue.keys.events],i=[e,t,this.queue.toKey(e)],o=await this.execCommand(n,"moveJobFromActiveToWait",r.concat(i));if(o<0)throw this.finishedErrors({code:o,jobId:e,command:"moveJobFromActiveToWait",state:"active"});return o}async obliterate(e){const t=await this.queue.client,n=[this.queue.keys.meta,this.queue.toKey("")],r=[e.count,e.force?"force":null],i=await this.execCommand(t,"obliterate",n.concat(r));if(i<0)switch(i){case-1:throw new Error("Cannot obliterate non-paused queue");case-2:throw new Error("Cannot obliterate queue with active jobs")}return i}async paginate(e,t){const n=await this.queue.client,r=[e],i=t.end>=0?t.end-t.start+1:1/0;let a,s,l,c="0",u=0,d=[],p=[];do{const e=[t.start+d.length,t.end,c,u,5];t.fetchJobs&&e.push(1),[c,u,a,s,l]=await this.execCommand(n,"paginate",r.concat(e)),d=d.concat(a),l&&l.length&&(p=p.concat(l.map(o.array2obj)))}while("0"!=c&&d.length<i);if(d.length&&Array.isArray(d[0])){const e=[];for(let t=0;t<d.length;t++){const[n,r]=d[t];try{e.push({id:n,v:JSON.parse(r)})}catch(t){e.push({id:n,err:t.message})}}return{cursor:c,items:e,total:s,jobs:p}}return{cursor:c,items:d.map(e=>({id:e})),total:s,jobs:p}}finishedErrors({code:e,jobId:t,parentKey:n,command:r,state:o}){switch(e){case i.ErrorCode.JobNotExist:return new Error(`Missing key for job ${t}. ${r}`);case i.ErrorCode.JobLockNotExist:return new Error(`Missing lock for job ${t}. ${r}`);case i.ErrorCode.JobNotInState:return new Error(`Job ${t} is not in the ${o} state. ${r}`);case i.ErrorCode.JobPendingChildren:return new Error(`Job ${t} has pending dependencies. ${r}`);case i.ErrorCode.ParentJobNotExist:return new Error(`Missing key for parent job ${n}. ${r}`);case i.ErrorCode.JobLockMismatch:return new Error(`Lock mismatch for job ${t}. Cmd ${r} from ${o}`);case i.ErrorCode.ParentJobCannotBeReplaced:return new Error(`The parent job ${n} cannot be replaced. ${r}`);case i.ErrorCode.JobBelongsToJobScheduler:return new Error(`Job ${t} belongs to a job scheduler and cannot be removed directly. ${r}`);case i.ErrorCode.JobHasFailedChildren:return new s.UnrecoverableError(`Cannot complete job ${t} because it has at least one failed child. ${r}`);default:return new Error(`Unknown code ${e} error for ${t}. ${r}`)}}}function u(e){if(e){const t=[null,e[1],e[2],e[3]];return e[0]&&(t[0]=(0,o.array2obj)(e[0])),t}return[]}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{ALWAYS:()=>r.ALWAYS,C1:()=>i.C1,DECIMAL_FIT:()=>r.DECIMAL_FIT,DECIMAL_ROUND:()=>r.DECIMAL_ROUND,Decoder:()=>i.Decoder,Encoder:()=>r.Encoder,FLOAT32_OPTIONS:()=>i.FLOAT32_OPTIONS,NEVER:()=>r.NEVER,Packr:()=>r.Packr,RESERVE_START_SPACE:()=>r.RESERVE_START_SPACE,RESET_BUFFER_MODE:()=>r.RESET_BUFFER_MODE,REUSE_BUFFER_MODE:()=>r.REUSE_BUFFER_MODE,Unpackr:()=>i.Unpackr,addExtension:()=>r.addExtension,clearSource:()=>i.clearSource,decode:()=>i.decode,decodeIter:()=>o.decodeIter,encode:()=>r.encode,encodeIter:()=>o.encodeIter,isNativeAccelerationEnabled:()=>i.isNativeAccelerationEnabled,mapsAsObjects:()=>s,pack:()=>r.pack,roundFloat32:()=>i.roundFloat32,unpack:()=>i.unpack,unpackMultiple:()=>i.unpackMultiple,useRecords:()=>a});var r=n(175),i=n(176),o=n(177);const a=!1,s=!0},(e,t,n)=>{"use strict";n.r(t),n.d(t,{ALWAYS:()=>C,DECIMAL_FIT:()=>M,DECIMAL_ROUND:()=>P,Encoder:()=>R,FLOAT32_OPTIONS:()=>r.FLOAT32_OPTIONS,NEVER:()=>D,Packr:()=>E,RECORD_SYMBOL:()=>v,RESERVE_START_SPACE:()=>L,RESET_BUFFER_MODE:()=>_,REUSE_BUFFER_MODE:()=>N,addExtension:()=>k,encode:()=>T,pack:()=>O,setWriteStructSlots:()=>x});var r=n(176);let i,o,a;try{i=new TextEncoder}catch(e){}const s="undefined"!=typeof Buffer,l=s?function(e){return Buffer.allocUnsafeSlow(e)}:Uint8Array,c=s?Buffer:Uint8Array,u=s?4294967296:2144337920;let d,p,h,f,y,m=0,b=null;const g=/[\u0080-\uFFFF]/,v=Symbol("record-id");class E extends r.Unpackr{constructor(e){let t,n,s,E;super(e),this.offset=0;let w=c.prototype.utf8Write?function(e,t){return d.utf8Write(e,t,d.byteLength-t)}:!(!i||!i.encodeInto)&&function(e,t){return i.encodeInto(e,d.subarray(t)).written},S=this;e||(e={});let k=e&&e.sequential,x=e.structures||e.saveStructures,A=e.maxSharedStructures;if(null==A&&(A=x?32:0),A>8160)throw new Error("Maximum maxSharedStructure is 8160");e.structuredClone&&null==e.moreTypes&&(this.moreTypes=!0);let O=e.maxOwnStructures;null==O&&(O=x?32:64),this.structures||0==e.useRecords||(this.structures=[]);let T=A>32||O+A>64,R=A+64,D=A+O+64;if(D>8256)throw new Error("Maximum maxSharedStructure + maxOwnStructure is 8192");let C=[],P=0,M=0;this.pack=this.encode=function(e,r){if(d||(d=new l(8192),h=d.dataView||(d.dataView=new DataView(d.buffer,0,8192)),m=0),f=d.length-10,f-m<2048?(d=new l(d.length),h=d.dataView||(d.dataView=new DataView(d.buffer,0,d.length)),f=d.length-10,m=0):m=m+7&2147483640,t=m,r&L&&(m+=255&r),E=S.structuredClone?new Map:null,S.bundleStrings&&"string"!=typeof e?(b=[],b.size=1/0):b=null,s=S.structures,s){s.uninitialized&&(s=S._mergeStructures(S.getStructures()));let e=s.sharedLength||0;if(e>A)throw new Error("Shared structures is larger than maximum shared structures, try increasing maxSharedStructures to "+s.sharedLength);if(!s.transitions){s.transitions=Object.create(null);for(let t=0;t<e;t++){let e=s[t];if(!e)continue;let n,r=s.transitions;for(let t=0,i=e.length;t<i;t++){let i=e[t];n=r[i],n||(n=r[i]=Object.create(null)),r=n}r[v]=t+64}this.lastNamedStructuresLength=e}k||(s.nextId=e+64)}let i;n&&(n=!1);try{S.randomAccessStructure&&e&&e.constructor&&e.constructor===Object?$(e):V(e);let n=b;if(b&&I(t,V,0),E&&E.idsToInsert){let e=E.idsToInsert.sort((e,t)=>e.offset>t.offset?1:-1),r=e.length,i=-1;for(;n&&r>0;){let o=e[--r].offset+t;o<n.stringsPosition+t&&-1===i&&(i=0),o>n.position+t?i>=0&&(i+=6):(i>=0&&(h.setUint32(n.position+t,h.getUint32(n.position+t)+i),i=-1),n=n.previous,r++)}i>=0&&n&&h.setUint32(n.position+t,h.getUint32(n.position+t)+i),m+=6*e.length,m>f&&Y(m),S.offset=m;let o=function(e,t){let n,r=6*t.length,i=e.length-r;for(;n=t.pop();){let t=n.offset,o=n.id;e.copyWithin(t+r,t,i),r-=6;let a=t+r;e[a++]=214,e[a++]=105,e[a++]=o>>24,e[a++]=o>>16&255,e[a++]=o>>8&255,e[a++]=255&o,i=t}return e}(d.subarray(t,m),e);return E=null,o}return S.offset=m,r&N?(d.start=t,d.end=m,d):d.subarray(t,m)}catch(e){throw i=e,e}finally{if(s&&(J(),n&&S.saveStructures)){let n=s.sharedLength||0,o=d.subarray(t,m),a=j(s,S);if(!i)return!1===S.saveStructures(a,a.isCompatible)?S.pack(e,r):(S.lastNamedStructuresLength=n,d.length>1073741824&&(d=null),o)}d.length>1073741824&&(d=null),r&_&&(m=t)}};const J=()=>{M<10&&M++;let e=s.sharedLength||0;if(s.length>e&&!k&&(s.length=e),P>1e4)s.transitions=null,M=0,P=0,C.length>0&&(C=[]);else if(C.length>0&&!k){for(let e=0,t=C.length;e<t;e++)C[e][v]=0;C=[]}},F=e=>{var t=e.length;t<16?d[m++]=144|t:t<65536?(d[m++]=220,d[m++]=t>>8,d[m++]=255&t):(d[m++]=221,h.setUint32(m,t),m+=4);for(let n=0;n<t;n++)V(e[n])},V=e=>{m>f&&(d=Y(m));var n,i=typeof e;if("string"===i){let r,i=e.length;if(b&&i>=4&&i<4096){if((b.size+=i)>21760){let e,n,r=(b[0]?3*b[0].length+b[1].length:0)+10;m+r>f&&(d=Y(m+r)),b.position?(n=b,d[m]=200,m+=3,d[m++]=98,e=m-t,m+=4,I(t,V,0),h.setUint16(e+t-3,m-t-e)):(d[m++]=214,d[m++]=98,e=m-t,m+=4),b=["",""],b.previous=n,b.size=0,b.position=e}let n=g.test(e);return b[n?0:1]+=e,d[m++]=193,void V(n?-i:i)}r=i<32?1:i<256?2:i<65536?3:5;let o=3*i;if(m+o>f&&(d=Y(m+o)),i<64||!w){let t,o,a,s=m+r;for(t=0;t<i;t++)o=e.charCodeAt(t),o<128?d[s++]=o:o<2048?(d[s++]=o>>6|192,d[s++]=63&o|128):55296==(64512&o)&&56320==(64512&(a=e.charCodeAt(t+1)))?(o=65536+((1023&o)<<10)+(1023&a),t++,d[s++]=o>>18|240,d[s++]=o>>12&63|128,d[s++]=o>>6&63|128,d[s++]=63&o|128):(d[s++]=o>>12|224,d[s++]=o>>6&63|128,d[s++]=63&o|128);n=s-m-r}else n=w(e,m+r);n<32?d[m++]=160|n:n<256?(r<2&&d.copyWithin(m+2,m+1,m+1+n),d[m++]=217,d[m++]=n):n<65536?(r<3&&d.copyWithin(m+3,m+2,m+2+n),d[m++]=218,d[m++]=n>>8,d[m++]=255&n):(r<5&&d.copyWithin(m+5,m+3,m+3+n),d[m++]=219,h.setUint32(m,n),m+=4),m+=n}else if("number"===i)if(e>>>0===e)e<32||e<128&&!1===this.useRecords||e<64&&!this.randomAccessStructure?d[m++]=e:e<256?(d[m++]=204,d[m++]=e):e<65536?(d[m++]=205,d[m++]=e>>8,d[m++]=255&e):(d[m++]=206,h.setUint32(m,e),m+=4);else if((e|0)===e)e>=-32?d[m++]=256+e:e>=-128?(d[m++]=208,d[m++]=e+256):e>=-32768?(d[m++]=209,h.setInt16(m,e),m+=2):(d[m++]=210,h.setInt32(m,e),m+=4);else{let t;if((t=this.useFloat32)>0&&e<4294967296&&e>=-2147483648){let n;if(d[m++]=202,h.setFloat32(m,e),t<4||((n=e*r.mult10[(127&d[m])<<1|d[m+1]>>7])|0)===n)return void(m+=4);m--}d[m++]=203,h.setFloat64(m,e),m+=8}else if("object"===i||"function"===i)if(e){if(E){let n=E.get(e);if(n){if(!n.id){let e=E.idsToInsert||(E.idsToInsert=[]);n.id=e.push(n)}return d[m++]=214,d[m++]=112,h.setUint32(m,n.id),void(m+=4)}E.set(e,{offset:m-t})}let r=e.constructor;if(r===Object)U(e);else if(r===Array)F(e);else if(r===Map)if(this.mapAsEmptyObject)d[m++]=128;else{(n=e.size)<16?d[m++]=128|n:n<65536?(d[m++]=222,d[m++]=n>>8,d[m++]=255&n):(d[m++]=223,h.setUint32(m,n),m+=4);for(let[t,n]of e)V(t),V(n)}else{for(let t=0,n=o.length;t<n;t++){if(e instanceof a[t]){let n=o[t];if(n.write){n.type&&(d[m++]=212,d[m++]=n.type,d[m++]=0);let t=n.write.call(this,e);return void(t===e?Array.isArray(e)?F(e):U(e):V(t))}let r,i=d,a=h,s=m;d=null;try{r=n.pack.call(this,e,e=>(d=i,i=null,m+=e,m>f&&Y(m),{target:d,targetView:h,position:m-e}),V)}finally{i&&(d=i,h=a,m=s,f=d.length-10)}return void(r&&(r.length+m>f&&Y(r.length+m),m=K(r,d,m,n.type)))}}if(Array.isArray(e))F(e);else{if(e.toJSON){const t=e.toJSON();if(t!==e)return V(t)}if("function"===i)return V(this.writeFunction&&this.writeFunction(e));U(e)}}}else d[m++]=192;else if("boolean"===i)d[m++]=e?195:194;else if("bigint"===i){if(e<0x8000000000000000&&e>=-0x8000000000000000)d[m++]=211,h.setBigInt64(m,e);else if(e<0x10000000000000000&&e>0)d[m++]=207,h.setBigUint64(m,e);else{if(!this.largeBigIntToFloat){if(this.largeBigIntToString)return V(e.toString());if((this.useBigIntExtension||this.moreTypes)&&e<BigInt(2)**BigInt(1023)&&e>-(BigInt(2)**BigInt(1023))){d[m++]=199,m++,d[m++]=66;let t,n=[];do{let r=e&BigInt(255);t=(r&BigInt(128))===(e<BigInt(0)?BigInt(128):BigInt(0)),n.push(r),e>>=BigInt(8)}while(e!==BigInt(0)&&e!==BigInt(-1)||!t);d[m-2]=n.length;for(let e=n.length;e>0;)d[m++]=Number(n[--e]);return}throw new RangeError(e+" was too large to fit in MessagePack 64-bit integer format, use useBigIntExtension, or set largeBigIntToFloat to convert to float-64, or set largeBigIntToString to convert to string")}d[m++]=203,h.setFloat64(m,Number(e))}m+=8}else{if("undefined"!==i)throw new Error("Unknown type: "+i);this.encodeUndefinedAsNil?d[m++]=192:(d[m++]=212,d[m++]=0,d[m++]=0)}},G=this.variableMapSize||this.coercibleKeyAsNumber||this.skipValues?e=>{let t;if(this.skipValues){t=[];for(let n in e)"function"==typeof e.hasOwnProperty&&!e.hasOwnProperty(n)||this.skipValues.includes(e[n])||t.push(n)}else t=Object.keys(e);let n,r=t.length;if(r<16?d[m++]=128|r:r<65536?(d[m++]=222,d[m++]=r>>8,d[m++]=255&r):(d[m++]=223,h.setUint32(m,r),m+=4),this.coercibleKeyAsNumber)for(let i=0;i<r;i++){n=t[i];let r=Number(n);V(isNaN(r)?n:r),V(e[n])}else for(let i=0;i<r;i++)V(n=t[i]),V(e[n])}:e=>{d[m++]=222;let n=m-t;m+=2;let r=0;for(let t in e)("function"!=typeof e.hasOwnProperty||e.hasOwnProperty(t))&&(V(t),V(e[t]),r++);if(r>65535)throw new Error('Object is too large to serialize with fast 16-bit map size, use the "variableMapSize" option to serialize this object');d[n+++t]=r>>8,d[n+t]=255&r},q=!1===this.useRecords?G:e.progressiveRecords&&!T?e=>{let n,r,i=s.transitions||(s.transitions=Object.create(null)),o=m++-t;for(let a in e)if("function"!=typeof e.hasOwnProperty||e.hasOwnProperty(a)){if(n=i[a],n)i=n;else{let l=Object.keys(e),c=i;i=s.transitions;let u=0;for(let e=0,t=l.length;e<t;e++){let t=l[e];n=i[t],n||(n=i[t]=Object.create(null),u++),i=n}o+t+1==m?(m--,z(i,l,u)):W(i,l,o,u),r=!0,i=c[a]}V(e[a])}if(!r){let n=i[v];n?d[o+t]=n:W(i,Object.keys(e),o,0)}}:e=>{let t,n=s.transitions||(s.transitions=Object.create(null)),r=0;for(let i in e)("function"!=typeof e.hasOwnProperty||e.hasOwnProperty(i))&&(t=n[i],t||(t=n[i]=Object.create(null),r++),n=t);let i=n[v];i?i>=96&&T?(d[m++]=96+(31&(i-=96)),d[m++]=i>>5):d[m++]=i:z(n,n.__keys__||Object.keys(e),r);for(let t in e)("function"!=typeof e.hasOwnProperty||e.hasOwnProperty(t))&&V(e[t])},B="function"==typeof this.useRecords&&this.useRecords,U=B?e=>{B(e)?q(e):G(e)}:q,Y=e=>{let n;if(e>16777216){if(e-t>u)throw new Error("Packed buffer would be larger than maximum buffer size");n=Math.min(u,4096*Math.round(Math.max((e-t)*(e>67108864?1.25:2),4194304)/4096))}else n=1+(Math.max(e-t<<2,d.length-1)>>12)<<12;let r=new l(n);return h=r.dataView||(r.dataView=new DataView(r.buffer,0,n)),e=Math.min(e,d.length),d.copy?d.copy(r,0,t,e):r.set(d.slice(t,e)),m-=t,t=0,f=r.length-10,d=r},z=(e,t,r)=>{let i=s.nextId;i||(i=64),i<R&&this.shouldShareStructure&&!this.shouldShareStructure(t)?(i=s.nextOwnId,i<D||(i=R),s.nextOwnId=i+1):(i>=D&&(i=R),s.nextId=i+1);let o=t.highByte=i>=96&&T?i-96>>5:-1;e[v]=i,e.__keys__=t,s[i-64]=t,i<R?(t.isShared=!0,s.sharedLength=i-63,n=!0,o>=0?(d[m++]=96+(31&i),d[m++]=o):d[m++]=i):(o>=0?(d[m++]=213,d[m++]=114,d[m++]=96+(31&i),d[m++]=o):(d[m++]=212,d[m++]=114,d[m++]=i),r&&(P+=M*r),C.length>=O&&(C.shift()[v]=0),C.push(e),V(t))},W=(e,n,r,i)=>{let o=d,a=m,s=f,c=t;d=p,m=0,t=0,d||(p=d=new l(8192)),f=d.length-10,z(e,n,i),p=d;let u=m;if(d=o,m=a,f=s,t=c,u>1){let e=m+u-1;e>f&&Y(e);let n=r+t;d.copyWithin(n+u,n+1,m),d.set(p.slice(0,u),n),m=e}else d[r+t]=p[0]},$=e=>{let r=y(e,d,t,m,s,Y,(e,t,r)=>{if(r)return n=!0;m=t;let i=d;return V(e),J(),i!==d?{position:m,targetView:h,target:d}:m},this);if(0===r)return U(e);m=r}}useBuffer(e){d=e,d.dataView||(d.dataView=new DataView(d.buffer,d.byteOffset,d.byteLength)),m=0}set position(e){m=e}get position(){return m}clearSharedData(){this.structures&&(this.structures=[]),this.typedStructs&&(this.typedStructs=[])}}function w(e,t,n,r){let i=e.byteLength;if(i+1<256){var{target:o,position:a}=n(4+i);o[a++]=199,o[a++]=i+1}else if(i+1<65536){var{target:o,position:a}=n(5+i);o[a++]=200,o[a++]=i+1>>8,o[a++]=i+1&255}else{var{target:o,position:a,targetView:s}=n(7+i);o[a++]=201,s.setUint32(a,i+1),a+=4}o[a++]=116,o[a++]=t,e.buffer||(e=new Uint8Array(e)),o.set(new Uint8Array(e.buffer,e.byteOffset,e.byteLength),a)}function S(e,t){let n=e.byteLength;var r,i;if(n<256){var{target:r,position:i}=t(n+2);r[i++]=196,r[i++]=n}else if(n<65536){var{target:r,position:i}=t(n+3);r[i++]=197,r[i++]=n>>8,r[i++]=255&n}else{var{target:r,position:i,targetView:o}=t(n+5);r[i++]=198,o.setUint32(i,n),i+=4}r.set(e,i)}function K(e,t,n,r){let i=e.length;switch(i){case 1:t[n++]=212;break;case 2:t[n++]=213;break;case 4:t[n++]=214;break;case 8:t[n++]=215;break;case 16:t[n++]=216;break;default:i<256?(t[n++]=199,t[n++]=i):i<65536?(t[n++]=200,t[n++]=i>>8,t[n++]=255&i):(t[n++]=201,t[n++]=i>>24,t[n++]=i>>16&255,t[n++]=i>>8&255,t[n++]=255&i)}return t[n++]=r,t.set(e,n),n+=i}function I(e,t,n){if(b.length>0){h.setUint32(b.position+e,m+n-b.position-e),b.stringsPosition=m-e;let r=b;b=null,t(r[0]),t(r[1])}}function k(e){if(e.Class){if(!e.pack&&!e.write)throw new Error("Extension has no pack or write function");if(e.pack&&!e.type)throw new Error("Extension has no type (numeric code to identify the extension)");a.unshift(e.Class),o.unshift(e)}(0,r.addExtension)(e)}function j(e,t){return e.isCompatible=e=>{let n=!e||(t.lastNamedStructuresLength||0)===e.length;return n||t._mergeStructures(e),n},e}function x(e,t){y=e,j=t}a=[Date,Set,Error,RegExp,ArrayBuffer,Object.getPrototypeOf(Uint8Array.prototype).constructor,DataView,r.C1Type],o=[{pack(e,t,n){let r=e.getTime()/1e3;if((this.useTimestamp32||0===e.getMilliseconds())&&r>=0&&r<4294967296){let{target:e,targetView:n,position:i}=t(6);e[i++]=214,e[i++]=255,n.setUint32(i,r)}else if(r>0&&r<4294967296){let{target:n,targetView:i,position:o}=t(10);n[o++]=215,n[o++]=255,i.setUint32(o,4e6*e.getMilliseconds()+(r/1e3/4294967296|0)),i.setUint32(o+4,r)}else if(isNaN(r)){if(this.onInvalidDate)return t(0),n(this.onInvalidDate());let{target:e,targetView:r,position:i}=t(3);e[i++]=212,e[i++]=255,e[i++]=255}else{let{target:n,targetView:i,position:o}=t(15);n[o++]=199,n[o++]=12,n[o++]=255,i.setUint32(o,1e6*e.getMilliseconds()),i.setBigInt64(o+4,BigInt(Math.floor(r)))}}},{pack(e,t,n){if(this.setAsEmptyObject)return t(0),n({});let r=Array.from(e),{target:i,position:o}=t(this.moreTypes?3:0);this.moreTypes&&(i[o++]=212,i[o++]=115,i[o++]=0),n(r)}},{pack(e,t,n){let{target:r,position:i}=t(this.moreTypes?3:0);this.moreTypes&&(r[i++]=212,r[i++]=101,r[i++]=0),n([e.name,e.message,e.cause])}},{pack(e,t,n){let{target:r,position:i}=t(this.moreTypes?3:0);this.moreTypes&&(r[i++]=212,r[i++]=120,r[i++]=0),n([e.source,e.flags])}},{pack(e,t){this.moreTypes?w(e,16,t):S(s?Buffer.from(e):new Uint8Array(e),t)}},{pack(e,t){let n=e.constructor;n!==c&&this.moreTypes?w(e,r.typedArrays.indexOf(n.name),t):S(e,t)}},{pack(e,t){this.moreTypes?w(e,17,t):S(s?Buffer.from(e):new Uint8Array(e),t)}},{pack(e,t){let{target:n,position:r}=t(1);n[r]=193}}];let A=new E({useRecords:!1});const O=A.pack,T=A.pack,R=E,{NEVER:D,ALWAYS:C,DECIMAL_ROUND:P,DECIMAL_FIT:M}=r.FLOAT32_OPTIONS,N=512,_=1024,L=2048},(e,t,n)=>{"use strict";var r,i,o;n.r(t),n.d(t,{C1:()=>w,C1Type:()=>E,Decoder:()=>ue,FLOAT32_OPTIONS:()=>ye,Unpackr:()=>x,addExtension:()=>le,checkedRead:()=>O,clearSource:()=>se,decode:()=>fe,getPosition:()=>A,isNativeAccelerationEnabled:()=>F,loadStructures:()=>M,mult10:()=>ce,read:()=>R,readString:()=>q,roundFloat32:()=>ge,setExtractor:()=>V,setReadStruct:()=>ve,typedArrays:()=>re,unpack:()=>pe,unpackMultiple:()=>he});try{r=new TextDecoder}catch(e){}var a=0;const s=[];var l,c,u,d,p,h=s,f=0,y={},m=0,b=0,g=[],v={useRecords:!1,mapsAsObjects:!0};class E{}const w=new E;w.name="MessagePack 0xC1";var S,K,I,k=!1,j=2;try{new Function("")}catch(e){j=1/0}class x{constructor(e){e&&(!1===e.useRecords&&void 0===e.mapsAsObjects&&(e.mapsAsObjects=!0),e.sequential&&!1!==e.trusted&&(e.trusted=!0,e.structures||0==e.useRecords||(e.structures=[],e.maxSharedStructures||(e.maxSharedStructures=0))),e.structures?e.structures.sharedLength=e.structures.length:e.getStructures&&((e.structures=[]).uninitialized=!0,e.structures.sharedLength=0),e.int64AsNumber&&(e.int64AsType="number")),Object.assign(this,e)}unpack(e,t){if(i)return ae(()=>(se(),this?this.unpack(e,t):x.prototype.unpack.call(v,e,t)));e.buffer||e.constructor!==ArrayBuffer||(e="undefined"!=typeof Buffer?Buffer.from(e):new Uint8Array(e)),"object"==typeof t?(o=t.end||e.length,a=t.start||0):(a=0,o=t>-1?t:e.length),f=0,b=0,c=null,h=s,u=null,i=e;try{p=e.dataView||(e.dataView=new DataView(e.buffer,e.byteOffset,e.byteLength))}catch(t){if(i=null,e instanceof Uint8Array)throw t;throw new Error("Source must be a Uint8Array or Buffer but was a "+(e&&"object"==typeof e?e.constructor.name:typeof e))}if(this instanceof x){if(y=this,this.structures)return l=this.structures,O(t);(!l||l.length>0)&&(l=[])}else y=v,(!l||l.length>0)&&(l=[]);return O(t)}unpackMultiple(e,t){let n,r=0;try{k=!0;let i=e.length,o=this?this.unpack(e,i):de.unpack(e,i);if(!t){for(n=[o];a<i;)r=a,n.push(O());return n}if(!1===t(o,r,a))return;for(;a<i;)if(r=a,!1===t(O(),r,a))return}catch(e){throw e.lastPosition=r,e.values=n,e}finally{k=!1,se()}}_mergeStructures(e,t){K&&(e=K.call(this,e)),e=e||[],Object.isFrozen(e)&&(e=e.map(e=>e.slice(0)));for(let t=0,n=e.length;t<n;t++){let n=e[t];n&&(n.isShared=!0,t>=32&&(n.highByte=t-32>>5))}e.sharedLength=e.length;for(let n in t||[])if(n>=0){let r=e[n],i=t[n];i&&(r&&((e.restoreStructures||(e.restoreStructures=[]))[n]=r),e[n]=i)}return this.structures=e}decode(e,t){return this.unpack(e,t)}}function A(){return a}function O(e){try{if(!y.trusted&&!k){let e=l.sharedLength||0;e<l.length&&(l.length=e)}let t;if(y.randomAccessStructure&&i[a]<64&&i[a]>=32&&S?(t=S(i,a,o,y),i=null,e&&e.lazy||!t||(t=t.toJSON()),a=o):t=R(),u&&(a=u.postBundlePosition,u=null),k&&(l.restoreStructures=null),a==o)l&&l.restoreStructures&&T(),l=null,i=null,d&&(d=null);else{if(a>o)throw new Error("Unexpected end of MessagePack data");if(!k){let e;try{e=JSON.stringify(t,(e,t)=>"bigint"==typeof t?`${t}n`:t).slice(0,100)}catch(t){e="(JSON view not available "+t+")"}throw new Error("Data read, but end of buffer not reached "+e)}}return t}catch(e){throw l&&l.restoreStructures&&T(),se(),(e instanceof RangeError||e.message.startsWith("Unexpected end of buffer")||a>o)&&(e.incomplete=!0),e}}function T(){for(let e in l.restoreStructures)l[e]=l.restoreStructures[e];l.restoreStructures=null}function R(){let e=i[a++];if(e<160){if(e<128){if(e<64)return e;{let t=l[63&e]||y.getStructures&&M()[63&e];return t?(t.read||(t.read=C(t,63&e)),t.read()):e}}if(e<144){if(e-=128,y.mapsAsObjects){let t={};for(let n=0;n<e;n++){let e=X();"__proto__"===e&&(e="__proto_"),t[e]=R()}return t}{let t=new Map;for(let n=0;n<e;n++)t.set(R(),R());return t}}{e-=144;let t=new Array(e);for(let n=0;n<e;n++)t[n]=R();return y.freezeData?Object.freeze(t):t}}if(e<192){let t=e-160;if(b>=a)return c.slice(a-m,(a+=t)-m);if(0==b&&o<140){let e=t<16?W(t):z(t);if(null!=e)return e}return N(t)}{let t;switch(e){case 192:return null;case 193:return u?(t=R(),t>0?u[1].slice(u.position1,u.position1+=t):u[0].slice(u.position0,u.position0-=t)):w;case 194:return!1;case 195:return!0;case 196:if(t=i[a++],void 0===t)throw new Error("Unexpected end of buffer");return Q(t);case 197:return t=p.getUint16(a),a+=2,Q(t);case 198:return t=p.getUint32(a),a+=4,Q(t);case 199:return H(i[a++]);case 200:return t=p.getUint16(a),a+=2,H(t);case 201:return t=p.getUint32(a),a+=4,H(t);case 202:if(t=p.getFloat32(a),y.useFloat32>2){let e=ce[(127&i[a])<<1|i[a+1]>>7];return a+=4,(e*t+(t>0?.5:-.5)|0)/e}return a+=4,t;case 203:return t=p.getFloat64(a),a+=8,t;case 204:return i[a++];case 205:return t=p.getUint16(a),a+=2,t;case 206:return t=p.getUint32(a),a+=4,t;case 207:return"number"===y.int64AsType?(t=4294967296*p.getUint32(a),t+=p.getUint32(a+4)):"string"===y.int64AsType?t=p.getBigUint64(a).toString():"auto"===y.int64AsType?(t=p.getBigUint64(a),t<=BigInt(2)<<BigInt(52)&&(t=Number(t))):t=p.getBigUint64(a),a+=8,t;case 208:return p.getInt8(a++);case 209:return t=p.getInt16(a),a+=2,t;case 210:return t=p.getInt32(a),a+=4,t;case 211:return"number"===y.int64AsType?(t=4294967296*p.getInt32(a),t+=p.getUint32(a+4)):"string"===y.int64AsType?t=p.getBigInt64(a).toString():"auto"===y.int64AsType?(t=p.getBigInt64(a),t>=BigInt(-2)<<BigInt(52)&&t<=BigInt(2)<<BigInt(52)&&(t=Number(t))):t=p.getBigInt64(a),a+=8,t;case 212:if(t=i[a++],114==t)return te(63&i[a++]);{let e=g[t];if(e)return e.read?(a++,e.read(R())):e.noBuffer?(a++,e()):e(i.subarray(a,++a));throw new Error("Unknown extension "+t)}case 213:return t=i[a],114==t?(a++,te(63&i[a++],i[a++])):H(2);case 214:return H(4);case 215:return H(8);case 216:return H(16);case 217:return t=i[a++],b>=a?c.slice(a-m,(a+=t)-m):_(t);case 218:return t=p.getUint16(a),b>=(a+=2)?c.slice(a-m,(a+=t)-m):L(t);case 219:return t=p.getUint32(a),b>=(a+=4)?c.slice(a-m,(a+=t)-m):J(t);case 220:return t=p.getUint16(a),a+=2,B(t);case 221:return t=p.getUint32(a),a+=4,B(t);case 222:return t=p.getUint16(a),a+=2,U(t);case 223:return t=p.getUint32(a),a+=4,U(t);default:if(e>=224)return e-256;if(void 0===e){let e=new Error("Unexpected end of MessagePack data");throw e.incomplete=!0,e}throw new Error("Unknown MessagePack token "+e)}}}const D=/^[a-zA-Z_$][a-zA-Z\d_$]*$/;function C(e,t){function n(){if(n.count++>j){let n=e.read=new Function("r","return function(){return "+(y.freezeData?"Object.freeze":"")+"({"+e.map(e=>"__proto__"===e?"__proto_:r()":D.test(e)?e+":r()":"["+JSON.stringify(e)+"]:r()").join(",")+"})}")(R);return 0===e.highByte&&(e.read=P(t,e.read)),n()}let r={};for(let t=0,n=e.length;t<n;t++){let n=e[t];"__proto__"===n&&(n="__proto_"),r[n]=R()}return y.freezeData?Object.freeze(r):r}return n.count=0,0===e.highByte?P(t,n):n}const P=(e,t)=>function(){let n=i[a++];if(0===n)return t();let r=e<32?-(e+(n<<5)):e+(n<<5),o=l[r]||M()[r];if(!o)throw new Error("Record id is not defined for "+r);return o.read||(o.read=C(o,e)),o.read()};function M(){let e=ae(()=>(i=null,y.getStructures()));return l=y._mergeStructures(e,l)}var N=G,_=G,L=G,J=G;let F=!1;function V(e){function t(t){return function(n){let r=h[f++];if(null==r){if(u)return G(n);let l=i.byteOffset,c=e(a-t+l,o+l,i.buffer);if("string"==typeof c)r=c,h=s;else if(f=1,b=1,r=(h=c)[0],void 0===r)throw new Error("Unexpected end of buffer")}let l=r.length;return l<=n?(a+=n,r):(c=r,m=a,b=a+l,a+=n,r.slice(0,n))}}F=!0,N=t(1),_=t(2),L=t(3),J=t(5)}function G(e){let t;if(e<16&&(t=W(e)))return t;if(e>64&&r)return r.decode(i.subarray(a,a+=e));const n=a+e,o=[];for(t="";a<n;){const e=i[a++];if(128&e)if(192==(224&e)){const t=63&i[a++];o.push((31&e)<<6|t)}else if(224==(240&e)){const t=63&i[a++],n=63&i[a++];o.push((31&e)<<12|t<<6|n)}else if(240==(248&e)){let t=(7&e)<<18|(63&i[a++])<<12|(63&i[a++])<<6|63&i[a++];t>65535&&(t-=65536,o.push(t>>>10&1023|55296),t=56320|1023&t),o.push(t)}else o.push(e);else o.push(e);o.length>=4096&&(t+=Y.apply(String,o),o.length=0)}return o.length>0&&(t+=Y.apply(String,o)),t}function q(e,t,n){let r=i;i=e,a=t;try{return G(n)}finally{i=r}}function B(e){let t=new Array(e);for(let n=0;n<e;n++)t[n]=R();return y.freezeData?Object.freeze(t):t}function U(e){if(y.mapsAsObjects){let t={};for(let n=0;n<e;n++){let e=X();"__proto__"===e&&(e="__proto_"),t[e]=R()}return t}{let t=new Map;for(let n=0;n<e;n++)t.set(R(),R());return t}}var Y=String.fromCharCode;function z(e){let t=a,n=new Array(e);for(let r=0;r<e;r++){const e=i[a++];if((128&e)>0)return void(a=t);n[r]=e}return Y.apply(String,n)}function W(e){if(e<4){if(e<2){if(0===e)return"";{let e=i[a++];return(128&e)>1?void(a-=1):Y(e)}}{let t=i[a++],n=i[a++];if((128&t)>0||(128&n)>0)return void(a-=2);if(e<3)return Y(t,n);let r=i[a++];return(128&r)>0?void(a-=3):Y(t,n,r)}}{let t=i[a++],n=i[a++],r=i[a++],o=i[a++];if((128&t)>0||(128&n)>0||(128&r)>0||(128&o)>0)return void(a-=4);if(e<6){if(4===e)return Y(t,n,r,o);{let e=i[a++];return(128&e)>0?void(a-=5):Y(t,n,r,o,e)}}if(e<8){let s=i[a++],l=i[a++];if((128&s)>0||(128&l)>0)return void(a-=6);if(e<7)return Y(t,n,r,o,s,l);let c=i[a++];return(128&c)>0?void(a-=7):Y(t,n,r,o,s,l,c)}{let s=i[a++],l=i[a++],c=i[a++],u=i[a++];if((128&s)>0||(128&l)>0||(128&c)>0||(128&u)>0)return void(a-=8);if(e<10){if(8===e)return Y(t,n,r,o,s,l,c,u);{let e=i[a++];return(128&e)>0?void(a-=9):Y(t,n,r,o,s,l,c,u,e)}}if(e<12){let d=i[a++],p=i[a++];if((128&d)>0||(128&p)>0)return void(a-=10);if(e<11)return Y(t,n,r,o,s,l,c,u,d,p);let h=i[a++];return(128&h)>0?void(a-=11):Y(t,n,r,o,s,l,c,u,d,p,h)}{let d=i[a++],p=i[a++],h=i[a++],f=i[a++];if((128&d)>0||(128&p)>0||(128&h)>0||(128&f)>0)return void(a-=12);if(e<14){if(12===e)return Y(t,n,r,o,s,l,c,u,d,p,h,f);{let e=i[a++];return(128&e)>0?void(a-=13):Y(t,n,r,o,s,l,c,u,d,p,h,f,e)}}{let y=i[a++],m=i[a++];if((128&y)>0||(128&m)>0)return void(a-=14);if(e<15)return Y(t,n,r,o,s,l,c,u,d,p,h,f,y,m);let b=i[a++];return(128&b)>0?void(a-=15):Y(t,n,r,o,s,l,c,u,d,p,h,f,y,m,b)}}}}}function $(){let e,t=i[a++];if(t<192)e=t-160;else switch(t){case 217:e=i[a++];break;case 218:e=p.getUint16(a),a+=2;break;case 219:e=p.getUint32(a),a+=4;break;default:throw new Error("Expected string")}return G(e)}function Q(e){return y.copyBuffers?Uint8Array.prototype.slice.call(i,a,a+=e):i.subarray(a,a+=e)}function H(e){let t=i[a++];if(g[t]){let n;return g[t](i.subarray(a,n=a+=e),e=>{a=e;try{return R()}finally{a=n}})}throw new Error("Unknown extension type "+t)}var Z=new Array(4096);function X(){let e=i[a++];if(!(e>=160&&e<192))return a--,ee(R());if(e-=160,b>=a)return c.slice(a-m,(a+=e)-m);if(!(0==b&&o<180))return N(e);let t,n=4095&(e<<5^(e>1?p.getUint16(a):e>0?i[a]:0)),r=Z[n],s=a,l=a+e-3,u=0;if(r&&r.bytes==e){for(;s<l;){if(t=p.getUint32(s),t!=r[u++]){s=1879048192;break}s+=4}for(l+=3;s<l;)if(t=i[s++],t!=r[u++]){s=1879048192;break}if(s===l)return a=s,r.string;l-=3,s=a}for(r=[],Z[n]=r,r.bytes=e;s<l;)t=p.getUint32(s),r.push(t),s+=4;for(l+=3;s<l;)t=i[s++],r.push(t);let d=e<16?W(e):z(e);return r.string=null!=d?d:N(e)}function ee(e){if("string"==typeof e)return e;if("number"==typeof e||"boolean"==typeof e||"bigint"==typeof e)return e.toString();if(null==e)return e+"";if(y.allowArraysInMapKeys&&Array.isArray(e)&&e.flat().every(e=>["string","number","boolean","bigint"].includes(typeof e)))return e.flat().toString();throw new Error("Invalid property type for record: "+typeof e)}const te=(e,t)=>{let n=R().map(ee),r=e;void 0!==t&&(e=e<32?-((t<<5)+e):(t<<5)+e,n.highByte=t);let i=l[e];return i&&(i.isShared||k)&&((l.restoreStructures||(l.restoreStructures=[]))[e]=i),l[e]=n,n.read=C(n,r),n.read()};g[0]=()=>{},g[0].noBuffer=!0,g[66]=e=>{let t=e.length,n=BigInt(128&e[0]?e[0]-256:e[0]);for(let r=1;r<t;r++)n<<=BigInt(8),n+=BigInt(e[r]);return n};let ne={Error,TypeError,ReferenceError};g[101]=()=>{let e=R();return(ne[e[0]]||Error)(e[1],{cause:e[2]})},g[105]=e=>{if(!1===y.structuredClone)throw new Error("Structured clone extension is disabled");let t=p.getUint32(a-4);d||(d=new Map);let n,r=i[a];n=r>=144&&r<160||220==r||221==r?[]:r>=128&&r<144||222==r||223==r?new Map:(r>=199&&r<=201||r>=212&&r<=216)&&115===i[a+1]?new Set:{};let o={target:n};d.set(t,o);let s=R();if(!o.used)return o.target=s;if(Object.assign(n,s),n instanceof Map)for(let[e,t]of s.entries())n.set(e,t);if(n instanceof Set)for(let e of Array.from(s))n.add(e);return n},g[112]=e=>{if(!1===y.structuredClone)throw new Error("Structured clone extension is disabled");let t=p.getUint32(a-4),n=d.get(t);return n.used=!0,n.target},g[115]=()=>new Set(R());const re=["Int8","Uint8","Uint8Clamped","Int16","Uint16","Int32","Uint32","Float32","Float64","BigInt64","BigUint64"].map(e=>e+"Array");let ie="object"==typeof globalThis?globalThis:window;g[116]=e=>{let t=e[0],n=Uint8Array.prototype.slice.call(e,1).buffer,r=re[t];if(!r){if(16===t)return n;if(17===t)return new DataView(n);throw new Error("Could not find typed array for code "+t)}return new ie[r](n)},g[120]=()=>{let e=R();return new RegExp(e[0],e[1])};const oe=[];function ae(e){I&&I();let t=o,n=a,r=f,s=m,g=b,v=c,E=h,w=d,S=u,K=new Uint8Array(i.slice(0,o)),j=l,x=l.slice(0,l.length),A=y,O=k,T=e();return o=t,a=n,f=r,m=s,b=g,c=v,h=E,d=w,u=S,i=K,k=O,(l=j).splice(0,l.length,...x),y=A,p=new DataView(i.buffer,i.byteOffset,i.byteLength),T}function se(){i=null,d=null,l=null}function le(e){e.unpack?g[e.type]=e.unpack:g[e.type]=e}g[98]=e=>{let t=(e[0]<<24)+(e[1]<<16)+(e[2]<<8)+e[3],n=a;return a+=t-e.length,u=oe,(u=[$(),$()]).position0=0,u.position1=0,u.postBundlePosition=a,a=n,R()},g[255]=e=>4==e.length?new Date(1e3*(16777216*e[0]+(e[1]<<16)+(e[2]<<8)+e[3])):8==e.length?new Date(((e[0]<<22)+(e[1]<<14)+(e[2]<<6)+(e[3]>>2))/1e6+1e3*(4294967296*(3&e[3])+16777216*e[4]+(e[5]<<16)+(e[6]<<8)+e[7])):12==e.length?new Date(((e[0]<<24)+(e[1]<<16)+(e[2]<<8)+e[3])/1e6+1e3*((128&e[4]?-281474976710656:0)+1099511627776*e[6]+4294967296*e[7]+16777216*e[8]+(e[9]<<16)+(e[10]<<8)+e[11])):new Date("invalid");const ce=new Array(147);for(let e=0;e<256;e++)ce[e]=+("1e"+Math.floor(45.15-.30103*e));const ue=x;var de=new x({useRecords:!1});const pe=de.unpack,he=de.unpackMultiple,fe=de.unpack,ye={NEVER:0,ALWAYS:1,DECIMAL_ROUND:3,DECIMAL_FIT:4};let me=new Float32Array(1),be=new Uint8Array(me.buffer,0,4);function ge(e){me[0]=e;let t=ce[(127&be[3])<<1|be[2]>>7];return(t*e+(e>0?.5:-.5)|0)/t}function ve(e,t,n){S=e,K=t,I=n}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{decodeIter:()=>h,encodeIter:()=>f,packIter:()=>u,unpackIter:()=>p});var r=n(178),i=n(180),o=n(181),a=n(175),s=n(176);function l(e){var t,n,r,i=2;for("undefined"!=typeof Symbol&&(n=Symbol.asyncIterator,r=Symbol.iterator);i--;){if(n&&null!=(t=e[n]))return t.call(e);if(r&&null!=(t=e[r]))return new c(t.call(e));n="@@asyncIterator",r="@@iterator"}throw new TypeError("Object is not async iterable")}function c(e){function t(e){if(Object(e)!==e)return Promise.reject(new TypeError(e+" is not an object."));var t=e.done;return Promise.resolve(e.value).then(function(e){return{value:e,done:t}})}return c=function(e){this.s=e,this.n=e.next},c.prototype={s:null,n:null,next:function(){return t(this.n.apply(this.s,arguments))},return:function(e){var n=this.s.return;return void 0===n?Promise.resolve({value:e,done:!0}):t(n.apply(this.s,arguments))},throw:function(e){var n=this.s.return;return void 0===n?Promise.reject(e):t(n.apply(this.s,arguments))}},new c(e)}function u(e,t={}){if(e&&"object"==typeof e){if("function"==typeof e[Symbol.iterator])return function*(e,t){const n=new a.Packr(t);for(const t of e)yield n.pack(t)}(e,t);if("function"==typeof e.then||"function"==typeof e[Symbol.asyncIterator])return function(e,t){return d.apply(this,arguments)}(e,t);throw new Error("first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a Promise")}throw new Error("first argument must be an Iterable, Async Iterable, or a Promise for an Async Iterable")}function d(){return(d=(0,o.default)(function*(e,t){const n=new a.Packr(t);var r,o=!1,s=!1;try{for(var c,u=l(e);o=!(c=yield(0,i.default)(u.next())).done;o=!1){const e=c.value;yield n.pack(e)}}catch(e){s=!0,r=e}finally{try{o&&null!=u.return&&(yield(0,i.default)(u.return()))}finally{if(s)throw r}}})).apply(this,arguments)}function p(e,t={}){if(!e||"object"!=typeof e)throw new Error("first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a promise");const n=new s.Unpackr(t);let a;const c=e=>{let t;a&&(e=Buffer.concat([a,e]),a=void 0);try{t=n.unpackMultiple(e)}catch(n){if(!n.incomplete)throw n;a=e.slice(n.lastPosition),t=n.values}return t};return"function"==typeof e[Symbol.iterator]?function*(){for(const t of e)yield*c(t)}():"function"==typeof e[Symbol.asyncIterator]?(u=(0,o.default)(function*(){var t,n=!1,o=!1;try{for(var a,s=l(e);n=!(a=yield(0,i.default)(s.next())).done;n=!1){const e=a.value;yield*(0,r.default)(l(c(e)),i.default)}}catch(e){o=!0,t=e}finally{try{n&&null!=s.return&&(yield(0,i.default)(s.return()))}finally{if(o)throw t}}}),function(){return u.apply(this,arguments)})():void 0;var u}const h=p,f=u},(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>i});var r=n(179);function i(e){var t={},n=!1;function i(t,i){return n=!0,i=new Promise(function(n){n(e[t](i))}),{done:!1,value:new r.default(i,1)}}return t["undefined"!=typeof Symbol&&Symbol.iterator||"@@iterator"]=function(){return this},t.next=function(e){return n?(n=!1,e):i("next",e)},"function"==typeof e.throw&&(t.throw=function(e){if(n)throw n=!1,e;return i("throw",e)}),"function"==typeof e.return&&(t.return=function(e){return n?(n=!1,e):i("return",e)}),t}},(e,t,n)=>{"use strict";function r(e,t){this.v=e,this.k=t}n.r(t),n.d(t,{default:()=>r})},(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>i});var r=n(179);function i(e){return new r.default(e,0)}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>i});var r=n(182);function i(e){return function(){return new r.default(e.apply(this,arguments))}}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>i});var r=n(179);function i(e){var t,n;function i(t,n){try{var a=e[t](n),s=a.value,l=s instanceof r.default;Promise.resolve(l?s.v:s).then(function(n){if(l){var r="return"===t?"return":"next";if(!s.k||n.done)return i(r,n);n=e[r](n).value}o(a.done?"return":"normal",n)},function(e){i("throw",e)})}catch(e){o("throw",e)}}function o(e,r){switch(e){case"return":t.resolve({value:r,done:!0});break;case"throw":t.reject(r);break;default:t.resolve({value:r,done:!1})}(t=t.next)?i(t.key,t.arg):n=null}this._invoke=function(e,r){return new Promise(function(o,a){var s={key:e,arg:r,resolve:o,reject:a,next:null};n?n=n.next=s:(t=n=s,i(e,r))})},"function"!=typeof e.return&&(this.return=void 0)}i.prototype["function"==typeof Symbol&&Symbol.asyncIterator||"@@asyncIterator"]=function(){return this},i.prototype.next=function(e){return this._invoke("next",e)},i.prototype.throw=function(e){return this._invoke("throw",e)},i.prototype.return=function(e){return this._invoke("return",e)}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{version:()=>r});const r="5.56.10"},(e,t,n)=>{"use strict";n.r(t),n.d(t,{DELAYED_ERROR:()=>r.DELAYED_ERROR,DelayedError:()=>r.DelayedError,RATE_LIMIT_ERROR:()=>i.RATE_LIMIT_ERROR,RateLimitError:()=>i.RateLimitError,UNRECOVERABLE_ERROR:()=>o.UNRECOVERABLE_ERROR,UnrecoverableError:()=>o.UnrecoverableError,WAITING_CHILDREN_ERROR:()=>a.WAITING_CHILDREN_ERROR,WAITING_ERROR:()=>s.WAITING_ERROR,WaitingChildrenError:()=>a.WaitingChildrenError,WaitingError:()=>s.WaitingError});var r=n(185),i=n(186),o=n(187),a=n(188),s=n(189)},(e,t,n)=>{"use strict";n.r(t),n.d(t,{DELAYED_ERROR:()=>r,DelayedError:()=>i});const r="bullmq:movedToDelayed";class i extends Error{constructor(e=r){super(e),this.name=this.constructor.name,Object.setPrototypeOf(this,new.target.prototype)}}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{RATE_LIMIT_ERROR:()=>r,RateLimitError:()=>i});const r="bullmq:rateLimitExceeded";class i extends Error{constructor(e=r){super(e),this.name=this.constructor.name,Object.setPrototypeOf(this,new.target.prototype)}}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{UNRECOVERABLE_ERROR:()=>r,UnrecoverableError:()=>i});const r="bullmq:unrecoverable";class i extends Error{constructor(e=r){super(e),this.name=this.constructor.name,Object.setPrototypeOf(this,new.target.prototype)}}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{WAITING_CHILDREN_ERROR:()=>r,WaitingChildrenError:()=>i});const r="bullmq:movedToWaitingChildren";class i extends Error{constructor(e=r){super(e),this.name=this.constructor.name,Object.setPrototypeOf(this,new.target.prototype)}}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{WAITING_ERROR:()=>r,WaitingError:()=>i});const r="bullmq:movedToWait";class i extends Error{constructor(e=r){super(e),this.name=this.constructor.name,Object.setPrototypeOf(this,new.target.prototype)}}},(e,t,n)=>{"use strict";const r=n(191),i=n(192),o=n(194),a=n(196),s=n(197),l=n(198),c=n(199),u=n(200),d=n(201),p=n(202),h=n(203),f=n(204),y=n(205),m=n(206),b=n(207),g=n(208),v=n(209),E=n(210),w=n(211),S=n(212),K=n(213),I=n(214),k=n(215),j=n(216),x=n(217),A=n(218),O=n(219),T=n(220),R=n(221),D=n(223),C=n(224),P=n(225),M=n(226),N=n(227),_=n(228),L=n(229),J=n(230),F=n(231),V=n(232),G=n(233),q=n(234);e.exports={parse:s,valid:l,clean:c,inc:u,diff:d,major:p,minor:h,patch:f,prerelease:y,compare:m,rcompare:b,compareLoose:g,compareBuild:v,sort:E,rsort:w,gt:S,lt:K,eq:I,neq:k,gte:j,lte:x,cmp:A,coerce:O,Comparator:T,Range:R,satisfies:D,toComparators:C,maxSatisfying:P,minSatisfying:M,minVersion:N,validRange:_,outside:L,gtr:J,ltr:F,intersects:V,simplifyRange:G,subset:q,SemVer:o,re:r.re,src:r.src,tokens:r.t,SEMVER_SPEC_VERSION:i.SEMVER_SPEC_VERSION,RELEASE_TYPES:i.RELEASE_TYPES,compareIdentifiers:a.compareIdentifiers,rcompareIdentifiers:a.rcompareIdentifiers}},(e,t,n)=>{"use strict";const{MAX_SAFE_COMPONENT_LENGTH:r,MAX_SAFE_BUILD_LENGTH:i,MAX_LENGTH:o}=n(192),a=n(193),s=(t=e.exports={}).re=[],l=t.safeRe=[],c=t.src=[],u=t.safeSrc=[],d=t.t={};let p=0;const h="[a-zA-Z0-9-]",f=[["\\s",1],["\\d",o],[h,i]],y=(e,t,n)=>{const r=(e=>{for(const[t,n]of f)e=e.split(`${t}*`).join(`${t}{0,${n}}`).split(`${t}+`).join(`${t}{1,${n}}`);return e})(t),i=p++;a(e,i,t),d[e]=i,c[i]=t,u[i]=r,s[i]=new RegExp(t,n?"g":void 0),l[i]=new RegExp(r,n?"g":void 0)};y("NUMERICIDENTIFIER","0|[1-9]\\d*"),y("NUMERICIDENTIFIERLOOSE","\\d+"),y("NONNUMERICIDENTIFIER",`\\d*[a-zA-Z-]${h}*`),y("MAINVERSION",`(${c[d.NUMERICIDENTIFIER]})\\.(${c[d.NUMERICIDENTIFIER]})\\.(${c[d.NUMERICIDENTIFIER]})`),y("MAINVERSIONLOOSE",`(${c[d.NUMERICIDENTIFIERLOOSE]})\\.(${c[d.NUMERICIDENTIFIERLOOSE]})\\.(${c[d.NUMERICIDENTIFIERLOOSE]})`),y("PRERELEASEIDENTIFIER",`(?:${c[d.NONNUMERICIDENTIFIER]}|${c[d.NUMERICIDENTIFIER]})`),y("PRERELEASEIDENTIFIERLOOSE",`(?:${c[d.NONNUMERICIDENTIFIER]}|${c[d.NUMERICIDENTIFIERLOOSE]})`),y("PRERELEASE",`(?:-(${c[d.PRERELEASEIDENTIFIER]}(?:\\.${c[d.PRERELEASEIDENTIFIER]})*))`),y("PRERELEASELOOSE",`(?:-?(${c[d.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${c[d.PRERELEASEIDENTIFIERLOOSE]})*))`),y("BUILDIDENTIFIER",`${h}+`),y("BUILD",`(?:\\+(${c[d.BUILDIDENTIFIER]}(?:\\.${c[d.BUILDIDENTIFIER]})*))`),y("FULLPLAIN",`v?${c[d.MAINVERSION]}${c[d.PRERELEASE]}?${c[d.BUILD]}?`),y("FULL",`^${c[d.FULLPLAIN]}$`),y("LOOSEPLAIN",`[v=\\s]*${c[d.MAINVERSIONLOOSE]}${c[d.PRERELEASELOOSE]}?${c[d.BUILD]}?`),y("LOOSE",`^${c[d.LOOSEPLAIN]}$`),y("GTLT","((?:<|>)?=?)"),y("XRANGEIDENTIFIERLOOSE",`${c[d.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),y("XRANGEIDENTIFIER",`${c[d.NUMERICIDENTIFIER]}|x|X|\\*`),y("XRANGEPLAIN",`[v=\\s]*(${c[d.XRANGEIDENTIFIER]})(?:\\.(${c[d.XRANGEIDENTIFIER]})(?:\\.(${c[d.XRANGEIDENTIFIER]})(?:${c[d.PRERELEASE]})?${c[d.BUILD]}?)?)?`),y("XRANGEPLAINLOOSE",`[v=\\s]*(${c[d.XRANGEIDENTIFIERLOOSE]})(?:\\.(${c[d.XRANGEIDENTIFIERLOOSE]})(?:\\.(${c[d.XRANGEIDENTIFIERLOOSE]})(?:${c[d.PRERELEASELOOSE]})?${c[d.BUILD]}?)?)?`),y("XRANGE",`^${c[d.GTLT]}\\s*${c[d.XRANGEPLAIN]}$`),y("XRANGELOOSE",`^${c[d.GTLT]}\\s*${c[d.XRANGEPLAINLOOSE]}$`),y("COERCEPLAIN",`(^|[^\\d])(\\d{1,${r}})(?:\\.(\\d{1,${r}}))?(?:\\.(\\d{1,${r}}))?`),y("COERCE",`${c[d.COERCEPLAIN]}(?:$|[^\\d])`),y("COERCEFULL",c[d.COERCEPLAIN]+`(?:${c[d.PRERELEASE]})?`+`(?:${c[d.BUILD]})?(?:$|[^\\d])`),y("COERCERTL",c[d.COERCE],!0),y("COERCERTLFULL",c[d.COERCEFULL],!0),y("LONETILDE","(?:~>?)"),y("TILDETRIM",`(\\s*)${c[d.LONETILDE]}\\s+`,!0),t.tildeTrimReplace="$1~",y("TILDE",`^${c[d.LONETILDE]}${c[d.XRANGEPLAIN]}$`),y("TILDELOOSE",`^${c[d.LONETILDE]}${c[d.XRANGEPLAINLOOSE]}$`),y("LONECARET","(?:\\^)"),y("CARETTRIM",`(\\s*)${c[d.LONECARET]}\\s+`,!0),t.caretTrimReplace="$1^",y("CARET",`^${c[d.LONECARET]}${c[d.XRANGEPLAIN]}$`),y("CARETLOOSE",`^${c[d.LONECARET]}${c[d.XRANGEPLAINLOOSE]}$`),y("COMPARATORLOOSE",`^${c[d.GTLT]}\\s*(${c[d.LOOSEPLAIN]})$|^$`),y("COMPARATOR",`^${c[d.GTLT]}\\s*(${c[d.FULLPLAIN]})$|^$`),y("COMPARATORTRIM",`(\\s*)${c[d.GTLT]}\\s*(${c[d.LOOSEPLAIN]}|${c[d.XRANGEPLAIN]})`,!0),t.comparatorTrimReplace="$1$2$3",y("HYPHENRANGE",`^\\s*(${c[d.XRANGEPLAIN]})\\s+-\\s+(${c[d.XRANGEPLAIN]})\\s*$`),y("HYPHENRANGELOOSE",`^\\s*(${c[d.XRANGEPLAINLOOSE]})\\s+-\\s+(${c[d.XRANGEPLAINLOOSE]})\\s*$`),y("STAR","(<|>)?=?\\s*\\*"),y("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),y("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")},e=>{"use strict";const t=Number.MAX_SAFE_INTEGER||9007199254740991;e.exports={MAX_LENGTH:256,MAX_SAFE_COMPONENT_LENGTH:16,MAX_SAFE_BUILD_LENGTH:250,MAX_SAFE_INTEGER:t,RELEASE_TYPES:["major","premajor","minor","preminor","patch","prepatch","prerelease"],SEMVER_SPEC_VERSION:"2.0.0",FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2}},e=>{"use strict";const t="object"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{};e.exports=t},(e,t,n)=>{"use strict";const r=n(193),{MAX_LENGTH:i,MAX_SAFE_INTEGER:o}=n(192),{safeRe:a,t:s}=n(191),l=n(195),{compareIdentifiers:c}=n(196);class u{constructor(e,t){if(t=l(t),e instanceof u){if(e.loose===!!t.loose&&e.includePrerelease===!!t.includePrerelease)return e;e=e.version}else if("string"!=typeof e)throw new TypeError(`Invalid version. Must be a string. Got type "${typeof e}".`);if(e.length>i)throw new TypeError(`version is longer than ${i} characters`);r("SemVer",e,t),this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease;const n=e.trim().match(t.loose?a[s.LOOSE]:a[s.FULL]);if(!n)throw new TypeError(`Invalid Version: ${e}`);if(this.raw=e,this.major=+n[1],this.minor=+n[2],this.patch=+n[3],this.major>o||this.major<0)throw new TypeError("Invalid major version");if(this.minor>o||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>o||this.patch<0)throw new TypeError("Invalid patch version");n[4]?this.prerelease=n[4].split(".").map(e=>{if(/^[0-9]+$/.test(e)){const t=+e;if(t>=0&&t<o)return t}return e}):this.prerelease=[],this.build=n[5]?n[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(e){if(r("SemVer.compare",this.version,this.options,e),!(e instanceof u)){if("string"==typeof e&&e===this.version)return 0;e=new u(e,this.options)}return e.version===this.version?0:this.compareMain(e)||this.comparePre(e)}compareMain(e){return e instanceof u||(e=new u(e,this.options)),c(this.major,e.major)||c(this.minor,e.minor)||c(this.patch,e.patch)}comparePre(e){if(e instanceof u||(e=new u(e,this.options)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;let t=0;do{const n=this.prerelease[t],i=e.prerelease[t];if(r("prerelease compare",t,n,i),void 0===n&&void 0===i)return 0;if(void 0===i)return 1;if(void 0===n)return-1;if(n!==i)return c(n,i)}while(++t)}compareBuild(e){e instanceof u||(e=new u(e,this.options));let t=0;do{const n=this.build[t],i=e.build[t];if(r("build compare",t,n,i),void 0===n&&void 0===i)return 0;if(void 0===i)return 1;if(void 0===n)return-1;if(n!==i)return c(n,i)}while(++t)}inc(e,t,n){if(e.startsWith("pre")){if(!t&&!1===n)throw new Error("invalid increment argument: identifier is empty");if(t){const e=`-${t}`.match(this.options.loose?a[s.PRERELEASELOOSE]:a[s.PRERELEASE]);if(!e||e[1]!==t)throw new Error(`invalid identifier: ${t}`)}}switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",t,n);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",t,n);break;case"prepatch":this.prerelease.length=0,this.inc("patch",t,n),this.inc("pre",t,n);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",t,n),this.inc("pre",t,n);break;case"release":if(0===this.prerelease.length)throw new Error(`version ${this.raw} is not a prerelease`);this.prerelease.length=0;break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":{const e=Number(n)?1:0;if(0===this.prerelease.length)this.prerelease=[e];else{let r=this.prerelease.length;for(;--r>=0;)"number"==typeof this.prerelease[r]&&(this.prerelease[r]++,r=-2);if(-1===r){if(t===this.prerelease.join(".")&&!1===n)throw new Error("invalid increment argument: identifier already exists");this.prerelease.push(e)}}if(t){let r=[t,e];!1===n&&(r=[t]),0===c(this.prerelease[0],t)?isNaN(this.prerelease[1])&&(this.prerelease=r):this.prerelease=r}break}default:throw new Error(`invalid increment argument: ${e}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(".")}`),this}}e.exports=u},e=>{"use strict";const t=Object.freeze({loose:!0}),n=Object.freeze({});e.exports=e=>e?"object"!=typeof e?t:e:n},e=>{"use strict";const t=/^[0-9]+$/,n=(e,n)=>{const r=t.test(e),i=t.test(n);return r&&i&&(e=+e,n=+n),e===n?0:r&&!i?-1:i&&!r?1:e<n?-1:1};e.exports={compareIdentifiers:n,rcompareIdentifiers:(e,t)=>n(t,e)}},(e,t,n)=>{"use strict";const r=n(194);e.exports=(e,t,n=!1)=>{if(e instanceof r)return e;try{return new r(e,t)}catch(e){if(!n)return null;throw e}}},(e,t,n)=>{"use strict";const r=n(197);e.exports=(e,t)=>{const n=r(e,t);return n?n.version:null}},(e,t,n)=>{"use strict";const r=n(197);e.exports=(e,t)=>{const n=r(e.trim().replace(/^[=v]+/,""),t);return n?n.version:null}},(e,t,n)=>{"use strict";const r=n(194);e.exports=(e,t,n,i,o)=>{"string"==typeof n&&(o=i,i=n,n=void 0);try{return new r(e instanceof r?e.version:e,n).inc(t,i,o).version}catch(e){return null}}},(e,t,n)=>{"use strict";const r=n(197);e.exports=(e,t)=>{const n=r(e,null,!0),i=r(t,null,!0),o=n.compare(i);if(0===o)return null;const a=o>0,s=a?n:i,l=a?i:n,c=!!s.prerelease.length;if(!!l.prerelease.length&&!c){if(!l.patch&&!l.minor)return"major";if(0===l.compareMain(s))return l.minor&&!l.patch?"minor":"patch"}const u=c?"pre":"";return n.major!==i.major?u+"major":n.minor!==i.minor?u+"minor":n.patch!==i.patch?u+"patch":"prerelease"}},(e,t,n)=>{"use strict";const r=n(194);e.exports=(e,t)=>new r(e,t).major},(e,t,n)=>{"use strict";const r=n(194);e.exports=(e,t)=>new r(e,t).minor},(e,t,n)=>{"use strict";const r=n(194);e.exports=(e,t)=>new r(e,t).patch},(e,t,n)=>{"use strict";const r=n(197);e.exports=(e,t)=>{const n=r(e,t);return n&&n.prerelease.length?n.prerelease:null}},(e,t,n)=>{"use strict";const r=n(194);e.exports=(e,t,n)=>new r(e,n).compare(new r(t,n))},(e,t,n)=>{"use strict";const r=n(206);e.exports=(e,t,n)=>r(t,e,n)},(e,t,n)=>{"use strict";const r=n(206);e.exports=(e,t)=>r(e,t,!0)},(e,t,n)=>{"use strict";const r=n(194);e.exports=(e,t,n)=>{const i=new r(e,n),o=new r(t,n);return i.compare(o)||i.compareBuild(o)}},(e,t,n)=>{"use strict";const r=n(209);e.exports=(e,t)=>e.sort((e,n)=>r(e,n,t))},(e,t,n)=>{"use strict";const r=n(209);e.exports=(e,t)=>e.sort((e,n)=>r(n,e,t))},(e,t,n)=>{"use strict";const r=n(206);e.exports=(e,t,n)=>r(e,t,n)>0},(e,t,n)=>{"use strict";const r=n(206);e.exports=(e,t,n)=>r(e,t,n)<0},(e,t,n)=>{"use strict";const r=n(206);e.exports=(e,t,n)=>0===r(e,t,n)},(e,t,n)=>{"use strict";const r=n(206);e.exports=(e,t,n)=>0!==r(e,t,n)},(e,t,n)=>{"use strict";const r=n(206);e.exports=(e,t,n)=>r(e,t,n)>=0},(e,t,n)=>{"use strict";const r=n(206);e.exports=(e,t,n)=>r(e,t,n)<=0},(e,t,n)=>{"use strict";const r=n(214),i=n(215),o=n(212),a=n(216),s=n(213),l=n(217);e.exports=(e,t,n,c)=>{switch(t){case"===":return"object"==typeof e&&(e=e.version),"object"==typeof n&&(n=n.version),e===n;case"!==":return"object"==typeof e&&(e=e.version),"object"==typeof n&&(n=n.version),e!==n;case"":case"=":case"==":return r(e,n,c);case"!=":return i(e,n,c);case">":return o(e,n,c);case">=":return a(e,n,c);case"<":return s(e,n,c);case"<=":return l(e,n,c);default:throw new TypeError(`Invalid operator: ${t}`)}}},(e,t,n)=>{"use strict";const r=n(194),i=n(197),{safeRe:o,t:a}=n(191);e.exports=(e,t)=>{if(e instanceof r)return e;if("number"==typeof e&&(e=String(e)),"string"!=typeof e)return null;let n=null;if((t=t||{}).rtl){const r=t.includePrerelease?o[a.COERCERTLFULL]:o[a.COERCERTL];let i;for(;(i=r.exec(e))&&(!n||n.index+n[0].length!==e.length);)n&&i.index+i[0].length===n.index+n[0].length||(n=i),r.lastIndex=i.index+i[1].length+i[2].length;r.lastIndex=-1}else n=e.match(t.includePrerelease?o[a.COERCEFULL]:o[a.COERCE]);if(null===n)return null;const s=n[2],l=n[3]||"0",c=n[4]||"0",u=t.includePrerelease&&n[5]?`-${n[5]}`:"",d=t.includePrerelease&&n[6]?`+${n[6]}`:"";return i(`${s}.${l}.${c}${u}${d}`,t)}},(e,t,n)=>{"use strict";const r=Symbol("SemVer ANY");class i{static get ANY(){return r}constructor(e,t){if(t=o(t),e instanceof i){if(e.loose===!!t.loose)return e;e=e.value}e=e.trim().split(/\s+/).join(" "),c("comparator",e,t),this.options=t,this.loose=!!t.loose,this.parse(e),this.semver===r?this.value="":this.value=this.operator+this.semver.version,c("comp",this)}parse(e){const t=this.options.loose?a[s.COMPARATORLOOSE]:a[s.COMPARATOR],n=e.match(t);if(!n)throw new TypeError(`Invalid comparator: ${e}`);this.operator=void 0!==n[1]?n[1]:"","="===this.operator&&(this.operator=""),n[2]?this.semver=new u(n[2],this.options.loose):this.semver=r}toString(){return this.value}test(e){if(c("Comparator.test",e,this.options.loose),this.semver===r||e===r)return!0;if("string"==typeof e)try{e=new u(e,this.options)}catch(e){return!1}return l(e,this.operator,this.semver,this.options)}intersects(e,t){if(!(e instanceof i))throw new TypeError("a Comparator is required");return""===this.operator?""===this.value||new d(e.value,t).test(this.value):""===e.operator?""===e.value||new d(this.value,t).test(e.semver):(!(t=o(t)).includePrerelease||"<0.0.0-0"!==this.value&&"<0.0.0-0"!==e.value)&&(!(!t.includePrerelease&&(this.value.startsWith("<0.0.0")||e.value.startsWith("<0.0.0")))&&(!(!this.operator.startsWith(">")||!e.operator.startsWith(">"))||(!(!this.operator.startsWith("<")||!e.operator.startsWith("<"))||(!(this.semver.version!==e.semver.version||!this.operator.includes("=")||!e.operator.includes("="))||(!!(l(this.semver,"<",e.semver,t)&&this.operator.startsWith(">")&&e.operator.startsWith("<"))||!!(l(this.semver,">",e.semver,t)&&this.operator.startsWith("<")&&e.operator.startsWith(">")))))))}}e.exports=i;const o=n(195),{safeRe:a,t:s}=n(191),l=n(218),c=n(193),u=n(194),d=n(221)},(e,t,n)=>{"use strict";const r=/\s+/g;class i{constructor(e,t){if(t=a(t),e instanceof i)return e.loose===!!t.loose&&e.includePrerelease===!!t.includePrerelease?e:new i(e.raw,t);if(e instanceof s)return this.raw=e.value,this.set=[[e]],this.formatted=void 0,this;if(this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease,this.raw=e.trim().replace(r," "),this.set=this.raw.split("||").map(e=>this.parseRange(e.trim())).filter(e=>e.length),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){const e=this.set[0];if(this.set=this.set.filter(e=>!b(e[0])),0===this.set.length)this.set=[e];else if(this.set.length>1)for(const e of this.set)if(1===e.length&&g(e[0])){this.set=[e];break}}this.formatted=void 0}get range(){if(void 0===this.formatted){this.formatted="";for(let e=0;e<this.set.length;e++){e>0&&(this.formatted+="||");const t=this.set[e];for(let e=0;e<t.length;e++)e>0&&(this.formatted+=" "),this.formatted+=t[e].toString().trim()}}return this.formatted}format(){return this.range}toString(){return this.range}parseRange(e){const t=((this.options.includePrerelease&&y)|(this.options.loose&&m))+":"+e,n=o.get(t);if(n)return n;const r=this.options.loose,i=r?u[d.HYPHENRANGELOOSE]:u[d.HYPHENRANGE];e=e.replace(i,T(this.options.includePrerelease)),l("hyphen replace",e),e=e.replace(u[d.COMPARATORTRIM],p),l("comparator trim",e),e=e.replace(u[d.TILDETRIM],h),l("tilde trim",e),e=e.replace(u[d.CARETTRIM],f),l("caret trim",e);let a=e.split(" ").map(e=>E(e,this.options)).join(" ").split(/\s+/).map(e=>O(e,this.options));r&&(a=a.filter(e=>(l("loose invalid filter",e,this.options),!!e.match(u[d.COMPARATORLOOSE])))),l("range list",a);const c=new Map,g=a.map(e=>new s(e,this.options));for(const e of g){if(b(e))return[e];c.set(e.value,e)}c.size>1&&c.has("")&&c.delete("");const v=[...c.values()];return o.set(t,v),v}intersects(e,t){if(!(e instanceof i))throw new TypeError("a Range is required");return this.set.some(n=>v(n,t)&&e.set.some(e=>v(e,t)&&n.every(n=>e.every(e=>n.intersects(e,t)))))}test(e){if(!e)return!1;if("string"==typeof e)try{e=new c(e,this.options)}catch(e){return!1}for(let t=0;t<this.set.length;t++)if(R(this.set[t],e,this.options))return!0;return!1}}e.exports=i;const o=new(n(222)),a=n(195),s=n(220),l=n(193),c=n(194),{safeRe:u,t:d,comparatorTrimReplace:p,tildeTrimReplace:h,caretTrimReplace:f}=n(191),{FLAG_INCLUDE_PRERELEASE:y,FLAG_LOOSE:m}=n(192),b=e=>"<0.0.0-0"===e.value,g=e=>""===e.value,v=(e,t)=>{let n=!0;const r=e.slice();let i=r.pop();for(;n&&r.length;)n=r.every(e=>i.intersects(e,t)),i=r.pop();return n},E=(e,t)=>(l("comp",e,t),e=I(e,t),l("caret",e),e=S(e,t),l("tildes",e),e=j(e,t),l("xrange",e),e=A(e,t),l("stars",e),e),w=e=>!e||"x"===e.toLowerCase()||"*"===e,S=(e,t)=>e.trim().split(/\s+/).map(e=>K(e,t)).join(" "),K=(e,t)=>{const n=t.loose?u[d.TILDELOOSE]:u[d.TILDE];return e.replace(n,(t,n,r,i,o)=>{let a;return l("tilde",e,t,n,r,i,o),w(n)?a="":w(r)?a=`>=${n}.0.0 <${+n+1}.0.0-0`:w(i)?a=`>=${n}.${r}.0 <${n}.${+r+1}.0-0`:o?(l("replaceTilde pr",o),a=`>=${n}.${r}.${i}-${o} <${n}.${+r+1}.0-0`):a=`>=${n}.${r}.${i} <${n}.${+r+1}.0-0`,l("tilde return",a),a})},I=(e,t)=>e.trim().split(/\s+/).map(e=>k(e,t)).join(" "),k=(e,t)=>{l("caret",e,t);const n=t.loose?u[d.CARETLOOSE]:u[d.CARET],r=t.includePrerelease?"-0":"";return e.replace(n,(t,n,i,o,a)=>{let s;return l("caret",e,t,n,i,o,a),w(n)?s="":w(i)?s=`>=${n}.0.0${r} <${+n+1}.0.0-0`:w(o)?s="0"===n?`>=${n}.${i}.0${r} <${n}.${+i+1}.0-0`:`>=${n}.${i}.0${r} <${+n+1}.0.0-0`:a?(l("replaceCaret pr",a),s="0"===n?"0"===i?`>=${n}.${i}.${o}-${a} <${n}.${i}.${+o+1}-0`:`>=${n}.${i}.${o}-${a} <${n}.${+i+1}.0-0`:`>=${n}.${i}.${o}-${a} <${+n+1}.0.0-0`):(l("no pr"),s="0"===n?"0"===i?`>=${n}.${i}.${o}${r} <${n}.${i}.${+o+1}-0`:`>=${n}.${i}.${o}${r} <${n}.${+i+1}.0-0`:`>=${n}.${i}.${o} <${+n+1}.0.0-0`),l("caret return",s),s})},j=(e,t)=>(l("replaceXRanges",e,t),e.split(/\s+/).map(e=>x(e,t)).join(" ")),x=(e,t)=>{e=e.trim();const n=t.loose?u[d.XRANGELOOSE]:u[d.XRANGE];return e.replace(n,(n,r,i,o,a,s)=>{l("xRange",e,n,r,i,o,a,s);const c=w(i),u=c||w(o),d=u||w(a),p=d;return"="===r&&p&&(r=""),s=t.includePrerelease?"-0":"",c?n=">"===r||"<"===r?"<0.0.0-0":"*":r&&p?(u&&(o=0),a=0,">"===r?(r=">=",u?(i=+i+1,o=0,a=0):(o=+o+1,a=0)):"<="===r&&(r="<",u?i=+i+1:o=+o+1),"<"===r&&(s="-0"),n=`${r+i}.${o}.${a}${s}`):u?n=`>=${i}.0.0${s} <${+i+1}.0.0-0`:d&&(n=`>=${i}.${o}.0${s} <${i}.${+o+1}.0-0`),l("xRange return",n),n})},A=(e,t)=>(l("replaceStars",e,t),e.trim().replace(u[d.STAR],"")),O=(e,t)=>(l("replaceGTE0",e,t),e.trim().replace(u[t.includePrerelease?d.GTE0PRE:d.GTE0],"")),T=e=>(t,n,r,i,o,a,s,l,c,u,d,p)=>`${n=w(r)?"":w(i)?`>=${r}.0.0${e?"-0":""}`:w(o)?`>=${r}.${i}.0${e?"-0":""}`:a?`>=${n}`:`>=${n}${e?"-0":""}`} ${l=w(c)?"":w(u)?`<${+c+1}.0.0-0`:w(d)?`<${c}.${+u+1}.0-0`:p?`<=${c}.${u}.${d}-${p}`:e?`<${c}.${u}.${+d+1}-0`:`<=${l}`}`.trim(),R=(e,t,n)=>{for(let n=0;n<e.length;n++)if(!e[n].test(t))return!1;if(t.prerelease.length&&!n.includePrerelease){for(let n=0;n<e.length;n++)if(l(e[n].semver),e[n].semver!==s.ANY&&e[n].semver.prerelease.length>0){const r=e[n].semver;if(r.major===t.major&&r.minor===t.minor&&r.patch===t.patch)return!0}return!1}return!0}},e=>{"use strict";e.exports=class{constructor(){this.max=1e3,this.map=new Map}get(e){const t=this.map.get(e);return void 0===t?void 0:(this.map.delete(e),this.map.set(e,t),t)}delete(e){return this.map.delete(e)}set(e,t){if(!this.delete(e)&&void 0!==t){if(this.map.size>=this.max){const e=this.map.keys().next().value;this.delete(e)}this.map.set(e,t)}return this}}},(e,t,n)=>{"use strict";const r=n(221);e.exports=(e,t,n)=>{try{t=new r(t,n)}catch(e){return!1}return t.test(e)}},(e,t,n)=>{"use strict";const r=n(221);e.exports=(e,t)=>new r(e,t).set.map(e=>e.map(e=>e.value).join(" ").trim().split(" "))},(e,t,n)=>{"use strict";const r=n(194),i=n(221);e.exports=(e,t,n)=>{let o=null,a=null,s=null;try{s=new i(t,n)}catch(e){return null}return e.forEach(e=>{s.test(e)&&(o&&-1!==a.compare(e)||(o=e,a=new r(o,n)))}),o}},(e,t,n)=>{"use strict";const r=n(194),i=n(221);e.exports=(e,t,n)=>{let o=null,a=null,s=null;try{s=new i(t,n)}catch(e){return null}return e.forEach(e=>{s.test(e)&&(o&&1!==a.compare(e)||(o=e,a=new r(o,n)))}),o}},(e,t,n)=>{"use strict";const r=n(194),i=n(221),o=n(212);e.exports=(e,t)=>{e=new i(e,t);let n=new r("0.0.0");if(e.test(n))return n;if(n=new r("0.0.0-0"),e.test(n))return n;n=null;for(let t=0;t<e.set.length;++t){const i=e.set[t];let a=null;i.forEach(e=>{const t=new r(e.semver.version);switch(e.operator){case">":0===t.prerelease.length?t.patch++:t.prerelease.push(0),t.raw=t.format();case"":case">=":a&&!o(t,a)||(a=t);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${e.operator}`)}}),!a||n&&!o(n,a)||(n=a)}return n&&e.test(n)?n:null}},(e,t,n)=>{"use strict";const r=n(221);e.exports=(e,t)=>{try{return new r(e,t).range||"*"}catch(e){return null}}},(e,t,n)=>{"use strict";const r=n(194),i=n(220),{ANY:o}=i,a=n(221),s=n(223),l=n(212),c=n(213),u=n(217),d=n(216);e.exports=(e,t,n,p)=>{let h,f,y,m,b;switch(e=new r(e,p),t=new a(t,p),n){case">":h=l,f=u,y=c,m=">",b=">=";break;case"<":h=c,f=d,y=l,m="<",b="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(s(e,t,p))return!1;for(let n=0;n<t.set.length;++n){const r=t.set[n];let a=null,s=null;if(r.forEach(e=>{e.semver===o&&(e=new i(">=0.0.0")),a=a||e,s=s||e,h(e.semver,a.semver,p)?a=e:y(e.semver,s.semver,p)&&(s=e)}),a.operator===m||a.operator===b)return!1;if((!s.operator||s.operator===m)&&f(e,s.semver))return!1;if(s.operator===b&&y(e,s.semver))return!1}return!0}},(e,t,n)=>{"use strict";const r=n(229);e.exports=(e,t,n)=>r(e,t,">",n)},(e,t,n)=>{"use strict";const r=n(229);e.exports=(e,t,n)=>r(e,t,"<",n)},(e,t,n)=>{"use strict";const r=n(221);e.exports=(e,t,n)=>(e=new r(e,n),t=new r(t,n),e.intersects(t,n))},(e,t,n)=>{"use strict";const r=n(223),i=n(206);e.exports=(e,t,n)=>{const o=[];let a=null,s=null;const l=e.sort((e,t)=>i(e,t,n));for(const e of l){r(e,t,n)?(s=e,a||(a=e)):(s&&o.push([a,s]),s=null,a=null)}a&&o.push([a,null]);const c=[];for(const[e,t]of o)e===t?c.push(e):t||e!==l[0]?t?e===l[0]?c.push(`<=${t}`):c.push(`${e} - ${t}`):c.push(`>=${e}`):c.push("*");const u=c.join(" || "),d="string"==typeof t.raw?t.raw:String(t);return u.length<d.length?u:t}},(e,t,n)=>{"use strict";const r=n(221),i=n(220),{ANY:o}=i,a=n(223),s=n(206),l=[new i(">=0.0.0-0")],c=[new i(">=0.0.0")],u=(e,t,n)=>{if(e===t)return!0;if(1===e.length&&e[0].semver===o){if(1===t.length&&t[0].semver===o)return!0;e=n.includePrerelease?l:c}if(1===t.length&&t[0].semver===o){if(n.includePrerelease)return!0;t=c}const r=new Set;let i,u,h,f,y,m,b;for(const t of e)">"===t.operator||">="===t.operator?i=d(i,t,n):"<"===t.operator||"<="===t.operator?u=p(u,t,n):r.add(t.semver);if(r.size>1)return null;if(i&&u){if(h=s(i.semver,u.semver,n),h>0)return null;if(0===h&&(">="!==i.operator||"<="!==u.operator))return null}for(const e of r){if(i&&!a(e,String(i),n))return null;if(u&&!a(e,String(u),n))return null;for(const r of t)if(!a(e,String(r),n))return!1;return!0}let g=!(!u||n.includePrerelease||!u.semver.prerelease.length)&&u.semver,v=!(!i||n.includePrerelease||!i.semver.prerelease.length)&&i.semver;g&&1===g.prerelease.length&&"<"===u.operator&&0===g.prerelease[0]&&(g=!1);for(const e of t){if(b=b||">"===e.operator||">="===e.operator,m=m||"<"===e.operator||"<="===e.operator,i)if(v&&e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===v.major&&e.semver.minor===v.minor&&e.semver.patch===v.patch&&(v=!1),">"===e.operator||">="===e.operator){if(f=d(i,e,n),f===e&&f!==i)return!1}else if(">="===i.operator&&!a(i.semver,String(e),n))return!1;if(u)if(g&&e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===g.major&&e.semver.minor===g.minor&&e.semver.patch===g.patch&&(g=!1),"<"===e.operator||"<="===e.operator){if(y=p(u,e,n),y===e&&y!==u)return!1}else if("<="===u.operator&&!a(u.semver,String(e),n))return!1;if(!e.operator&&(u||i)&&0!==h)return!1}return!(i&&m&&!u&&0!==h)&&(!(u&&b&&!i&&0!==h)&&(!v&&!g))},d=(e,t,n)=>{if(!e)return t;const r=s(e.semver,t.semver,n);return r>0?e:r<0||">"===t.operator&&">="===e.operator?t:e},p=(e,t,n)=>{if(!e)return t;const r=s(e.semver,t.semver,n);return r<0?e:r>0||"<"===t.operator&&"<="===e.operator?t:e};e.exports=(e,t,n={})=>{if(e===t)return!0;e=new r(e,n),t=new r(t,n);let i=!1;e:for(const r of e.set){for(const e of t.set){const t=u(r,e,n);if(i=i||null!==t,t)continue e}if(i)return!1}return!0}},e=>{function t(e){return Promise.resolve().then(()=>{var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t})}t.keys=()=>[],t.resolve=t,t.id=235,e.exports=t},(e,t,n)=>{"use strict";n.r(t),n.d(t,{FlowProducer:()=>u});var r=n(18),i=n(290),o=n(22),a=n(237),s=n(239),l=n(240),c=n(12);class u extends r.EventEmitter{constructor(e={connection:{}},t=l.RedisConnection){super(),this.opts=e,this.opts=Object.assign({prefix:"bull"},e),this.connection=new t(e.connection,{shared:(0,o.isRedisInstance)(e.connection),blocking:!1,skipVersionCheck:e.skipVersionCheck,skipWaitingForReady:e.skipWaitingForReady}),this.connection.on("error",e=>this.emit("error",e)),this.connection.on("close",()=>{this.closing||this.emit("ioredis:close")}),this.queueKeys=new s.QueueKeys(e.prefix),(null==e?void 0:e.telemetry)&&(this.telemetry=e.telemetry)}emit(e,...t){return super.emit(e,...t)}off(e,t){return super.off(e,t),this}on(e,t){return super.on(e,t),this}once(e,t){return super.once(e,t),this}get client(){return this.connection.client}get Job(){return a.Job}waitUntilReady(){return this.client}async add(e,t){var n;if(this.closing)return;const r=(await this.connection.client).multi(),i=null===(n=null==e?void 0:e.opts)||void 0===n?void 0:n.parent,a=(0,o.getParentKey)(i),s=a?`${a}:dependencies`:void 0;return(0,o.trace)(this.telemetry,c.SpanKind.PRODUCER,e.queueName,"addFlow",e.queueName,async n=>{null==n||n.setAttributes({[c.TelemetryAttributes.FlowName]:e.name});const o=await this.addNode({multi:r,node:e,queuesOpts:null==t?void 0:t.queuesOptions,parent:{parentOpts:i,parentDependenciesKey:s}});return await r.exec(),o})}async getFlow(e){if(this.closing)return;const t=await this.connection.client,n=Object.assign({depth:10,maxChildren:20,prefix:this.opts.prefix},e);return this.getNode(t,n)}async addBulk(e){if(this.closing)return;const t=(await this.connection.client).multi();return(0,o.trace)(this.telemetry,c.SpanKind.PRODUCER,"","addBulkFlows","",async n=>{null==n||n.setAttributes({[c.TelemetryAttributes.BulkCount]:e.length,[c.TelemetryAttributes.BulkNames]:e.map(e=>e.name).join(",")});const r=await this.addNodes(t,e);return await t.exec(),r})}async addNode({multi:e,node:t,parent:n,queuesOpts:r}){var a,l;const u=t.prefix||this.opts.prefix,d=this.queueFromNode(t,new s.QueueKeys(u),u),p=r&&r[t.queueName],h=null!==(a=null==p?void 0:p.defaultJobOptions)&&void 0!==a?a:{},f=(null===(l=t.opts)||void 0===l?void 0:l.jobId)||(0,i.default)();return(0,o.trace)(this.telemetry,c.SpanKind.PRODUCER,t.queueName,"addNode",t.queueName,async(i,a)=>{var l,u;null==i||i.setAttributes({[c.TelemetryAttributes.JobName]:t.name,[c.TelemetryAttributes.JobId]:f});const p=t.opts;let y=null==p?void 0:p.telemetry;if(a&&p){const e=null===(l=p.telemetry)||void 0===l?void 0:l.omitContext,t=(null===(u=p.telemetry)||void 0===u?void 0:u.metadata)||!e&&a;(t||e)&&(y={metadata:t,omitContext:e})}const m=new this.Job(d,t.name,t.data,Object.assign(Object.assign(Object.assign({},h),p),{parent:null==n?void 0:n.parentOpts,telemetry:y}),f),b=(0,o.getParentKey)(null==n?void 0:n.parentOpts);if(t.children&&t.children.length>0){const i=f,o=new s.QueueKeys(t.prefix||this.opts.prefix),a=o.toKey(t.queueName,"waiting-children");await m.addJob(e,{parentDependenciesKey:null==n?void 0:n.parentDependenciesKey,waitChildrenKey:a,parentKey:b});const l=`${o.toKey(t.queueName,i)}:dependencies`;return{job:m,children:await this.addChildren({multi:e,nodes:t.children,parent:{parentOpts:{id:i,queue:o.getQueueQualifiedName(t.queueName)},parentDependenciesKey:l},queuesOpts:r})}}return await m.addJob(e,{parentDependenciesKey:null==n?void 0:n.parentDependenciesKey,parentKey:b}),{job:m}})}addNodes(e,t){return Promise.all(t.map(t=>{var n;const r=null===(n=null==t?void 0:t.opts)||void 0===n?void 0:n.parent,i=(0,o.getParentKey)(r),a=i?`${i}:dependencies`:void 0;return this.addNode({multi:e,node:t,parent:{parentOpts:r,parentDependenciesKey:a}})}))}async getNode(e,t){const n=this.queueFromNode(t,new s.QueueKeys(t.prefix),t.prefix),r=await this.Job.fromId(n,t.id);if(r){const{processed:n={},unprocessed:i=[],failed:o=[],ignored:a={}}=await r.getDependencies({failed:{count:t.maxChildren},processed:{count:t.maxChildren},unprocessed:{count:t.maxChildren},ignored:{count:t.maxChildren}}),s=Object.keys(n),l=Object.keys(a),c=s.length+i.length+l.length+o.length,u=t.depth-1;if(c>0&&u){return{job:r,children:await this.getChildren(e,[...s,...i,...o,...l],u,t.maxChildren)}}return{job:r}}}addChildren({multi:e,nodes:t,parent:n,queuesOpts:r}){return Promise.all(t.map(t=>this.addNode({multi:e,node:t,parent:n,queuesOpts:r})))}getChildren(e,t,n,r){return Promise.all([...t.map(t=>{const[i,o,a]=t.split(":");return this.getNode(e,{id:a,queueName:o,prefix:i,depth:n,maxChildren:r})})])}queueFromNode(e,t,n){return{client:this.connection.client,name:e.queueName,keys:t.getKeys(e.queueName),toKey:n=>t.toKey(e.queueName,n),opts:{prefix:n,connection:{}},qualifiedName:t.getQueueQualifiedName(e.queueName),closing:this.closing,waitUntilReady:async()=>this.connection.client,removeListener:this.removeListener.bind(this),emit:this.emit.bind(this),on:this.on.bind(this),redisVersion:this.connection.redisVersion,trace:async()=>{}}}async close(){this.closing||(this.closing=this.connection.close()),await this.closing}disconnect(){return this.connection.disconnect()}}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{Job:()=>d,PRIORITY_LIMIT:()=>u});var r=n(238),i=n(34),o=n(22),a=n(8),s=n(187),l=n(12);const c=(0,i.debuglog)("bull"),u=2**21;class d{constructor(e,t,n,i={},s){this.queue=e,this.name=t,this.data=n,this.opts=i,this.id=s,this.progress=0,this.returnvalue=null,this.stacktrace=null,this.delay=0,this.priority=0,this.attemptsStarted=0,this.attemptsMade=0,this.stalledCounter=0;const l=this.opts,{repeatJobKey:c}=l,u=(0,r.__rest)(l,["repeatJobKey"]);this.opts=Object.assign({attempts:0},u),this.delay=this.opts.delay,this.priority=this.opts.priority||0,this.repeatJobKey=c,this.timestamp=i.timestamp?i.timestamp:Date.now(),this.opts.backoff=a.Backoffs.normalize(i.backoff),this.parentKey=(0,o.getParentKey)(i.parent),i.parent&&(this.parent={id:i.parent.id,queueKey:i.parent.queue},i.failParentOnFailure&&(this.parent.fpof=!0),i.removeDependencyOnFailure&&(this.parent.rdof=!0),i.ignoreDependencyOnFailure&&(this.parent.idof=!0),i.continueParentOnFailure&&(this.parent.cpof=!0)),this.debounceId=i.debounce?i.debounce.id:void 0,this.deduplicationId=i.deduplication?i.deduplication.id:this.debounceId,this.toKey=e.toKey.bind(e),this.createScripts(),this.queueQualifiedName=e.qualifiedName}static async create(e,t,n,r){const i=await e.client,o=new this(e,t,n,r,r&&r.jobId);return o.id=await o.addJob(i,{parentKey:o.parentKey,parentDependenciesKey:o.parentKey?`${o.parentKey}:dependencies`:""}),o}static async createBulk(e,t){const n=await e.client,r=t.map(t=>{var n;return new this(e,t.name,t.data,t.opts,null===(n=t.opts)||void 0===n?void 0:n.jobId)}),i=n.pipeline();for(const e of r)e.addJob(i,{parentKey:e.parentKey,parentDependenciesKey:e.parentKey?`${e.parentKey}:dependencies`:""});const o=await i.exec();for(let e=0;e<o.length;++e){const[t,n]=o[e];if(t)throw t;r[e].id=n}return r}static fromJSON(e,t,n){const r=JSON.parse(t.data||"{}"),i=d.optsFromJSON(t.opts),a=new this(e,t.name,r,i,t.id||n);return a.progress=JSON.parse(t.progress||"0"),a.delay=parseInt(t.delay),a.priority=parseInt(t.priority),a.timestamp=parseInt(t.timestamp),t.finishedOn&&(a.finishedOn=parseInt(t.finishedOn)),t.processedOn&&(a.processedOn=parseInt(t.processedOn)),t.rjk&&(a.repeatJobKey=t.rjk),t.deid&&(a.debounceId=t.deid,a.deduplicationId=t.deid),t.failedReason&&(a.failedReason=t.failedReason),a.attemptsStarted=parseInt(t.ats||"0"),a.attemptsMade=parseInt(t.attemptsMade||t.atm||"0"),a.stalledCounter=parseInt(t.stc||"0"),t.defa&&(a.deferredFailure=t.defa),a.stacktrace=function(e){const t=(0,o.tryCatch)(JSON.parse,JSON,[e]);return t!==o.errorObject&&t instanceof Array?t:[]}(t.stacktrace),"string"==typeof t.returnvalue&&(a.returnvalue=p(t.returnvalue)),t.parentKey&&(a.parentKey=t.parentKey),t.parent&&(a.parent=JSON.parse(t.parent)),t.pb&&(a.processedBy=t.pb),t.nrjid&&(a.nextRepeatableJobId=t.nrjid),a}createScripts(){this.scripts=(0,o.createScripts)(this.queue)}static optsFromJSON(e,t=o.optsDecodeMap){const n=JSON.parse(e||"{}"),r=Object.entries(n),i={};for(const e of r){const[n,r]=e;t[n]?i[t[n]]=r:"tm"===n?i.telemetry=Object.assign(Object.assign({},i.telemetry),{metadata:r}):"omc"===n?i.telemetry=Object.assign(Object.assign({},i.telemetry),{omitContext:r}):i[n]=r}return i}static async fromId(e,t){if(t){const n=await e.client,r=await n.hgetall(e.toKey(t));return(0,o.isEmpty)(r)?void 0:this.fromJSON(e,r,t)}}static addJobLog(e,t,n,r){return e.scripts.addLog(t,n,r)}toJSON(){const{queue:e,scripts:t}=this;return(0,r.__rest)(this,["queue","scripts"])}asJSON(){return(0,o.removeUndefinedFields)({id:this.id,name:this.name,data:JSON.stringify(void 0===this.data?{}:this.data),opts:d.optsAsJSON(this.opts),parent:this.parent?Object.assign({},this.parent):void 0,parentKey:this.parentKey,progress:this.progress,attemptsMade:this.attemptsMade,attemptsStarted:this.attemptsStarted,stalledCounter:this.stalledCounter,finishedOn:this.finishedOn,processedOn:this.processedOn,timestamp:this.timestamp,failedReason:JSON.stringify(this.failedReason),stacktrace:JSON.stringify(this.stacktrace),debounceId:this.debounceId,deduplicationId:this.deduplicationId,repeatJobKey:this.repeatJobKey,returnvalue:JSON.stringify(this.returnvalue),nrjid:this.nextRepeatableJobId})}static optsAsJSON(e={},t=o.optsEncodeMap){const n=Object.entries(e),r={};for(const[e,i]of n)if(void 0!==i)if(e in t){r[t[e]]=i}else"telemetry"===e?(r.tm=i.metadata,r.omc=i.omitContext):r[e]=i;return r}asJSONSandbox(){return Object.assign(Object.assign({},this.asJSON()),{queueName:this.queueName,prefix:this.prefix})}updateData(e){return this.data=e,this.scripts.updateData(this,e)}async updateProgress(e){this.progress=e,await this.scripts.updateProgress(this.id,e),this.queue.emit("progress",this,e)}async log(e){return d.addJobLog(this.queue,this.id,e,this.opts.keepLogs)}async removeChildDependency(){return!!await this.scripts.removeChildDependency(this.id,this.parentKey)&&(this.parent=void 0,this.parentKey=void 0,!0)}async clearLogs(e){const t=await this.queue.client,n=this.toKey(this.id)+":logs";e?await t.ltrim(n,-e,-1):await t.del(n)}async remove({removeChildren:e=!0}={}){await this.queue.waitUntilReady();const t=this.queue,n=this;if(!await this.scripts.remove(n.id,e))throw new Error(`Job ${this.id} could not be removed because it is locked by another worker`);t.emit("removed",n)}async removeUnprocessedChildren(){const e=this.id;await this.scripts.removeUnprocessedChildren(e)}extendLock(e,t){return this.scripts.extendLock(this.id,e,t)}async moveToCompleted(e,t,n=!0){return this.queue.trace(l.SpanKind.INTERNAL,"complete",this.queue.name,async(r,i)=>{var a,s;let l;!(null===(s=null===(a=this.opts)||void 0===a?void 0:a.telemetry)||void 0===s?void 0:s.omitContext)&&i&&(l=i),await this.queue.waitUntilReady(),this.returnvalue=e||void 0;const c=(0,o.tryCatch)(JSON.stringify,JSON,[e]);if(c===o.errorObject)throw o.errorObject.value;const u=this.scripts.moveToCompletedArgs(this,c,this.opts.removeOnComplete,t,n),d=await this.scripts.moveToFinished(this.id,u);return this.finishedOn=u[this.scripts.moveToFinishedKeys.length+1],this.attemptsMade+=1,d})}moveToWait(e){return this.scripts.moveJobFromActiveToWait(this.id,e)}async shouldRetryJob(e){if(this.attemptsMade+1<this.opts.attempts&&!this.discarded&&!(e instanceof s.UnrecoverableError||"UnrecoverableError"==e.name)){const t=this.queue.opts,n=await a.Backoffs.calculate(this.opts.backoff,this.attemptsMade+1,e,this,t.settings&&t.settings.backoffStrategy);return[-1!=n,-1==n?0:n]}return[!1,0]}async moveToFailed(e,t,n=!1){this.failedReason=null==e?void 0:e.message;const[r,i]=await this.shouldRetryJob(e);return this.queue.trace(l.SpanKind.INTERNAL,this.getSpanOperation(r,i),this.queue.name,async(o,a)=>{var s,l;let c,u;!(null===(l=null===(s=this.opts)||void 0===s?void 0:s.telemetry)||void 0===l?void 0:l.omitContext)&&a&&(c=a),this.updateStacktrace(e);const d={failedReason:this.failedReason,stacktrace:JSON.stringify(this.stacktrace),tm:c};let p;if(r)u=i?await this.scripts.moveToDelayed(this.id,Date.now(),i,t,{fieldsToUpdate:d}):await this.scripts.retryJob(this.id,this.opts.lifo,t,{fieldsToUpdate:d});else{const e=this.scripts.moveToFailedArgs(this,this.failedReason,this.opts.removeOnFail,t,n,d);u=await this.scripts.moveToFinished(this.id,e),p=e[this.scripts.moveToFinishedKeys.length+1]}return p&&"number"==typeof p&&(this.finishedOn=p),i&&"number"==typeof i&&(this.delay=i),this.attemptsMade+=1,u})}getSpanOperation(e,t){return e?t?"delay":"retry":"fail"}isCompleted(){return this.isInZSet("completed")}isFailed(){return this.isInZSet("failed")}isDelayed(){return this.isInZSet("delayed")}isWaitingChildren(){return this.isInZSet("waiting-children")}isActive(){return this.isInList("active")}async isWaiting(){return await this.isInList("wait")||await this.isInList("paused")}get queueName(){return this.queue.name}get prefix(){return this.queue.opts.prefix}getState(){return this.scripts.getState(this.id)}async changeDelay(e){await this.scripts.changeDelay(this.id,e),this.delay=e}async changePriority(e){await this.scripts.changePriority(this.id,e.priority,e.lifo),this.priority=e.priority||0}async getChildrenValues(){const e=await this.queue.client,t=await e.hgetall(this.toKey(`${this.id}:processed`));if(t)return(0,o.parseObjectValues)(t)}async getIgnoredChildrenFailures(){return(await this.queue.client).hgetall(this.toKey(`${this.id}:failed`))}async getFailedChildrenValues(){return(await this.queue.client).hgetall(this.toKey(`${this.id}:failed`))}async getDependencies(e={}){const t=(await this.queue.client).multi();if(e.processed||e.unprocessed||e.ignored||e.failed){const n={cursor:0,count:20},r=[];if(e.processed){r.push("processed");const i=Object.assign(Object.assign({},n),e.processed);t.hscan(this.toKey(`${this.id}:processed`),i.cursor,"COUNT",i.count)}if(e.unprocessed){r.push("unprocessed");const i=Object.assign(Object.assign({},n),e.unprocessed);t.sscan(this.toKey(`${this.id}:dependencies`),i.cursor,"COUNT",i.count)}if(e.ignored){r.push("ignored");const i=Object.assign(Object.assign({},n),e.ignored);t.hscan(this.toKey(`${this.id}:failed`),i.cursor,"COUNT",i.count)}let i;if(e.failed){r.push("failed");const o=Object.assign(Object.assign({},n),e.failed);i=o.cursor+o.count,t.zrange(this.toKey(`${this.id}:unsuccessful`),o.cursor,o.count-1)}const o=await t.exec();let a,s,l,c,u,d,p;return r.forEach((e,t)=>{switch(e){case"processed":{a=o[t][1][0];const e=o[t][1][1],n={};for(let t=0;t<e.length;++t)t%2&&(n[e[t-1]]=JSON.parse(e[t]));s=n;break}case"failed":u=o[t][1];break;case"ignored":{d=o[t][1][0];const e=o[t][1][1],n={};for(let t=0;t<e.length;++t)t%2&&(n[e[t-1]]=e[t]);p=n;break}case"unprocessed":l=o[t][1][0],c=o[t][1][1]}}),Object.assign(Object.assign(Object.assign(Object.assign({},a?{processed:s,nextProcessedCursor:Number(a)}:{}),d?{ignored:p,nextIgnoredCursor:Number(d)}:{}),i?{failed:u,nextFailedCursor:i}:{}),l?{unprocessed:c,nextUnprocessedCursor:Number(l)}:{})}{t.hgetall(this.toKey(`${this.id}:processed`)),t.smembers(this.toKey(`${this.id}:dependencies`)),t.hgetall(this.toKey(`${this.id}:failed`)),t.zrange(this.toKey(`${this.id}:unsuccessful`),0,-1);const[[e,n],[r,i],[a,s],[l,c]]=await t.exec();return{processed:(0,o.parseObjectValues)(n),unprocessed:i,failed:c,ignored:s}}}async getDependenciesCount(e={}){const t=[];Object.entries(e).forEach(([e,n])=>{n&&t.push(e)});const n=t.length?t:["processed","unprocessed","ignored","failed"],r=await this.scripts.getDependencyCounts(this.id,n),i={};return r.forEach((e,t)=>{i[`${n[t]}`]=e||0}),i}async waitUntilFinished(e,t){await this.queue.waitUntilReady();const n=this.id;return new Promise(async(r,i)=>{let o;function a(e){u(),r(e.returnvalue)}function s(e){u(),i(new Error(e.failedReason||e))}t&&(o=setTimeout(()=>s(`Job wait ${this.name} timed out before finishing, no finish notification arrived after ${t}ms (id=${n})`),t));const l=`completed:${n}`,c=`failed:${n}`;e.on(l,a),e.on(c,s),this.queue.on("closing",s);const u=()=>{clearInterval(o),e.removeListener(l,a),e.removeListener(c,s),this.queue.removeListener("closing",s)};await e.waitUntilReady();const[d,h]=await this.scripts.isFinished(n,!0);0!=d&&(-1==d||2==d?s({failedReason:h}):a({returnvalue:p(h)}))})}async moveToDelayed(e,t){const n=Date.now(),r=e-n,i=r>0?r:0,o=await this.scripts.moveToDelayed(this.id,n,i,t,{skipAttempt:!0});return this.delay=i,o}async moveToWaitingChildren(e,t={}){return await this.scripts.moveToWaitingChildren(this.id,e,t)}async promote(){const e=this.id;await this.scripts.promote(e),this.delay=0}retry(e="failed"){return this.failedReason=null,this.finishedOn=null,this.processedOn=null,this.returnvalue=null,this.scripts.reprocessJob(this,e)}discard(){this.discarded=!0}async isInZSet(e){const t=await this.queue.client;return null!==await t.zscore(this.queue.toKey(e),this.id)}async isInList(e){return this.scripts.isJobInList(this.queue.toKey(e),this.id)}addJob(e,t){const n=this.asJSON();return this.validateOptions(n),this.scripts.addJob(e,n,n.opts,this.id,t)}validateOptions(e){var t;if(this.opts.sizeLimit&&(0,o.lengthInUtf8Bytes)(e.data)>this.opts.sizeLimit)throw new Error(`The size of job ${this.name} exceeds the limit ${this.opts.sizeLimit} bytes`);if(this.opts.delay&&this.opts.repeat&&!(null===(t=this.opts.repeat)||void 0===t?void 0:t.count))throw new Error("Delay and repeat options could not be used together");const n=["removeDependencyOnFailure","failParentOnFailure","continueParentOnFailure","ignoreDependencyOnFailure"].filter(e=>this.opts[e]);if(n.length>1){const e=n.join(", ");throw new Error(`The following options cannot be used together: ${e}`)}if(`${parseInt(this.id,10)}`===this.id)throw new Error("Custom Ids cannot be integers");if(this.opts.priority){if(Math.trunc(this.opts.priority)!==this.opts.priority)throw new Error("Priority should not be float");if(this.opts.priority>u)throw new Error(`Priority should be between 0 and ${u}`)}if("object"==typeof this.opts.backoff&&"number"==typeof this.opts.backoff.jitter&&(this.opts.backoff.jitter<0||this.opts.backoff.jitter>1))throw new Error("Jitter should be between 0 and 1")}updateStacktrace(e){this.stacktrace=this.stacktrace||[],(null==e?void 0:e.stack)&&(this.stacktrace.push(e.stack),0===this.opts.stackTraceLimit?this.stacktrace=[]:this.opts.stackTraceLimit&&(this.stacktrace=this.stacktrace.slice(-this.opts.stackTraceLimit)))}}function p(e){const t=(0,o.tryCatch)(JSON.parse,JSON,[e]);if(t!==o.errorObject)return t;c("corrupted returnvalue: "+e,t)}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{__addDisposableResource:()=>M,__assign:()=>o,__asyncDelegator:()=>k,__asyncGenerator:()=>I,__asyncValues:()=>j,__await:()=>K,__awaiter:()=>f,__classPrivateFieldGet:()=>D,__classPrivateFieldIn:()=>P,__classPrivateFieldSet:()=>C,__createBinding:()=>m,__decorate:()=>s,__disposeResources:()=>_,__esDecorate:()=>c,__exportStar:()=>b,__extends:()=>i,__generator:()=>y,__importDefault:()=>R,__importStar:()=>T,__makeTemplateObject:()=>x,__metadata:()=>h,__param:()=>l,__propKey:()=>d,__read:()=>v,__rest:()=>a,__rewriteRelativeImportExtension:()=>L,__runInitializers:()=>u,__setFunctionName:()=>p,__spread:()=>E,__spreadArray:()=>S,__spreadArrays:()=>w,__values:()=>g,default:()=>J});var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},r(e,t)};function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var o=function(){return o=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},o.apply(this,arguments)};function a(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n}function s(e,t,n,r){var i,o=arguments.length,a=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(a=(o<3?i(a):o>3?i(t,n,a):i(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a}function l(e,t){return function(n,r){t(n,r,e)}}function c(e,t,n,r,i,o){function a(e){if(void 0!==e&&"function"!=typeof e)throw new TypeError("Function expected");return e}for(var s,l=r.kind,c="getter"===l?"get":"setter"===l?"set":"value",u=!t&&e?r.static?e:e.prototype:null,d=t||(u?Object.getOwnPropertyDescriptor(u,r.name):{}),p=!1,h=n.length-1;h>=0;h--){var f={};for(var y in r)f[y]="access"===y?{}:r[y];for(var y in r.access)f.access[y]=r.access[y];f.addInitializer=function(e){if(p)throw new TypeError("Cannot add initializers after decoration has completed");o.push(a(e||null))};var m=(0,n[h])("accessor"===l?{get:d.get,set:d.set}:d[c],f);if("accessor"===l){if(void 0===m)continue;if(null===m||"object"!=typeof m)throw new TypeError("Object expected");(s=a(m.get))&&(d.get=s),(s=a(m.set))&&(d.set=s),(s=a(m.init))&&i.unshift(s)}else(s=a(m))&&("field"===l?i.unshift(s):d[c]=s)}u&&Object.defineProperty(u,r.name,d),p=!0}function u(e,t,n){for(var r=arguments.length>2,i=0;i<t.length;i++)n=r?t[i].call(e,n):t[i].call(e);return r?n:void 0}function d(e){return"symbol"==typeof e?e:"".concat(e)}function p(e,t,n){return"symbol"==typeof t&&(t=t.description?"[".concat(t.description,"]"):""),Object.defineProperty(e,"name",{configurable:!0,value:n?"".concat(n," ",t):t})}function h(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function f(e,t,n,r){return new(n||(n=Promise))(function(i,o){function a(e){try{l(r.next(e))}catch(e){o(e)}}function s(e){try{l(r.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(a,s)}l((r=r.apply(e,t||[])).next())})}function y(e,t){var n,r,i,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]},a=Object.create(("function"==typeof Iterator?Iterator:Object).prototype);return a.next=s(0),a.throw=s(1),a.return=s(2),"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(s){return function(l){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;a&&(a=0,s[0]&&(o=0)),o;)try{if(n=1,r&&(i=2&s[0]?r.return:s[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,s[1])).done)return i;switch(r=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,r=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(i=o.trys,(i=i.length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){o.label=s[1];break}if(6===s[0]&&o.label<i[1]){o.label=i[1],i=s;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(s);break}i[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],r=0}finally{n=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,l])}}}var m=Object.create?function(e,t,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(t,n);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,i)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]};function b(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||m(t,e,n)}function g(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function v(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,o=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=o.next()).done;)a.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(i)throw i.error}}return a}function E(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(v(arguments[t]));return e}function w(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),i=0;for(t=0;t<n;t++)for(var o=arguments[t],a=0,s=o.length;a<s;a++,i++)r[i]=o[a];return r}function S(e,t,n){if(n||2===arguments.length)for(var r,i=0,o=t.length;i<o;i++)!r&&i in t||(r||(r=Array.prototype.slice.call(t,0,i)),r[i]=t[i]);return e.concat(r||Array.prototype.slice.call(t))}function K(e){return this instanceof K?(this.v=e,this):new K(e)}function I(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,i=n.apply(e,t||[]),o=[];return r=Object.create(("function"==typeof AsyncIterator?AsyncIterator:Object).prototype),a("next"),a("throw"),a("return",function(e){return function(t){return Promise.resolve(t).then(e,c)}}),r[Symbol.asyncIterator]=function(){return this},r;function a(e,t){i[e]&&(r[e]=function(t){return new Promise(function(n,r){o.push([e,t,n,r])>1||s(e,t)})},t&&(r[e]=t(r[e])))}function s(e,t){try{(n=i[e](t)).value instanceof K?Promise.resolve(n.value.v).then(l,c):u(o[0][2],n)}catch(e){u(o[0][3],e)}var n}function l(e){s("next",e)}function c(e){s("throw",e)}function u(e,t){e(t),o.shift(),o.length&&s(o[0][0],o[0][1])}}function k(e){var t,n;return t={},r("next"),r("throw",function(e){throw e}),r("return"),t[Symbol.iterator]=function(){return this},t;function r(r,i){t[r]=e[r]?function(t){return(n=!n)?{value:K(e[r](t)),done:!1}:i?i(t):t}:i}}function j(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e=g(e),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(n){t[n]=e[n]&&function(t){return new Promise(function(r,i){(function(e,t,n,r){Promise.resolve(r).then(function(t){e({value:t,done:n})},t)})(r,i,(t=e[n](t)).done,t.value)})}}}function x(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}var A=Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t},O=function(e){return O=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},O(e)};function T(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n=O(e),r=0;r<n.length;r++)"default"!==n[r]&&m(t,e,n[r]);return A(t,e),t}function R(e){return e&&e.__esModule?e:{default:e}}function D(e,t,n,r){if("a"===n&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!r:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?r:"a"===n?r.call(e):r?r.value:t.get(e)}function C(e,t,n,r,i){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!i)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===r?i.call(e,n):i?i.value=n:t.set(e,n),n}function P(e,t){if(null===t||"object"!=typeof t&&"function"!=typeof t)throw new TypeError("Cannot use 'in' operator on non-object");return"function"==typeof e?t===e:e.has(t)}function M(e,t,n){if(null!=t){if("object"!=typeof t&&"function"!=typeof t)throw new TypeError("Object expected.");var r,i;if(n){if(!Symbol.asyncDispose)throw new TypeError("Symbol.asyncDispose is not defined.");r=t[Symbol.asyncDispose]}if(void 0===r){if(!Symbol.dispose)throw new TypeError("Symbol.dispose is not defined.");r=t[Symbol.dispose],n&&(i=r)}if("function"!=typeof r)throw new TypeError("Object not disposable.");i&&(r=function(){try{i.call(this)}catch(e){return Promise.reject(e)}}),e.stack.push({value:t,dispose:r,async:n})}else n&&e.stack.push({async:!0});return t}var N="function"==typeof SuppressedError?SuppressedError:function(e,t,n){var r=new Error(n);return r.name="SuppressedError",r.error=e,r.suppressed=t,r};function _(e){function t(t){e.error=e.hasError?new N(t,e.error,"An error was suppressed during disposal."):t,e.hasError=!0}var n,r=0;return function i(){for(;n=e.stack.pop();)try{if(!n.async&&1===r)return r=0,e.stack.push(n),Promise.resolve().then(i);if(n.dispose){var o=n.dispose.call(n.value);if(n.async)return r|=2,Promise.resolve(o).then(i,function(e){return t(e),i()})}else r|=1}catch(e){t(e)}if(1===r)return e.hasError?Promise.reject(e.error):Promise.resolve();if(e.hasError)throw e.error}()}function L(e,t){return"string"==typeof e&&/^\.\.?\//.test(e)?e.replace(/\.(tsx)$|((?:\.d)?)((?:\.[^./]+?)?)\.([cm]?)ts$/i,function(e,n,r,i,o){return n?t?".jsx":".js":!r||i&&o?r+i+"."+o.toLowerCase()+"js":e}):e}const J={__extends:i,__assign:o,__rest:a,__decorate:s,__param:l,__esDecorate:c,__runInitializers:u,__propKey:d,__setFunctionName:p,__metadata:h,__awaiter:f,__generator:y,__createBinding:m,__exportStar:b,__values:g,__read:v,__spread:E,__spreadArrays:w,__spreadArray:S,__await:K,__asyncGenerator:I,__asyncDelegator:k,__asyncValues:j,__makeTemplateObject:x,__importStar:T,__importDefault:R,__classPrivateFieldGet:D,__classPrivateFieldSet:C,__classPrivateFieldIn:P,__addDisposableResource:M,__disposeResources:_,__rewriteRelativeImportExtension:L}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{QueueKeys:()=>r});class r{constructor(e="bull"){this.prefix=e}getKeys(e){const t={};return["","active","wait","waiting-children","paused","id","delayed","prioritized","stalled-check","completed","failed","stalled","repeat","limiter","meta","events","pc","marker","de"].forEach(n=>{t[n]=this.toKey(e,n)}),t}toKey(e,t){return`${this.getQueueQualifiedName(e)}:${t}`}getQueueQualifiedName(e){return`${this.prefix}:${e}`}}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{RedisConnection:()=>p});var r=n(238),i=n(18),o=n(23),a=n.n(o),s=n(109),l=n(22),c=n(183),u=n(241);const d=["BullMQ: WARNING! Your redis options maxRetriesPerRequest must be null","and will be overridden by BullMQ."].join(" ");class p extends i.EventEmitter{constructor(e,t){if(super(),this.extraOptions=t,this.capabilities={canDoubleTimeout:!1,canBlockFor1Ms:!0},this.status="initializing",this.packageVersion=c.version,this.extraOptions=Object.assign({shared:!1,blocking:!0,skipVersionCheck:!1,skipWaitingForReady:!1},t),(0,l.isRedisInstance)(e)){if(this._client=e,this._client.options.keyPrefix)throw new Error("BullMQ: ioredis does not support ioredis prefixes, use the prefix option instead.");(0,l.isRedisCluster)(this._client)?this.opts=this._client.options.redisOptions:this.opts=this._client.options,this.checkBlockingOptions("BullMQ: Your redis options maxRetriesPerRequest must be null.",this.opts,!0)}else this.checkBlockingOptions(d,e),this.opts=Object.assign({port:6379,host:"127.0.0.1",retryStrategy:function(e){return Math.max(Math.min(Math.exp(e),2e4),1e3)}},e),this.extraOptions.blocking&&(this.opts.maxRetriesPerRequest=null);this.skipVersionCheck=(null==t?void 0:t.skipVersionCheck)||!(!this.opts||!this.opts.skipVersionCheck),this.handleClientError=e=>{this.emit("error",e)},this.handleClientClose=()=>{this.emit("close")},this.handleClientReady=()=>{this.emit("ready")},this.initializing=this.init(),this.initializing.catch(e=>this.emit("error",e))}checkBlockingOptions(e,t,n=!1){if(this.extraOptions.blocking&&t&&t.maxRetriesPerRequest){if(n)throw new Error(e);console.error(e)}}static async waitUntilReady(e){if("ready"===e.status)return;if("wait"===e.status)return e.connect();if("end"===e.status)throw new Error(s.CONNECTION_CLOSED_ERROR_MSG);let t,n,r;try{await new Promise((i,o)=>{let a;r=e=>{a=e},t=()=>{i()},n=()=>{"end"!==e.status?o(a||new Error(s.CONNECTION_CLOSED_ERROR_MSG)):a?o(a):i()},(0,l.increaseMaxListeners)(e,3),e.once("ready",t),e.on("end",n),e.once("error",r)})}finally{e.removeListener("end",n),e.removeListener("error",r),e.removeListener("ready",t),(0,l.decreaseMaxListeners)(e,3)}}get client(){return this.initializing}loadCommands(e,t){const n=t||u;for(const t in n){const r=`${n[t].name}:${e}`;this._client[r]||this._client.defineCommand(r,{numberOfKeys:n[t].keys,lua:n[t].content})}}async init(){if(!this._client){const e=this.opts,{url:t}=e,n=(0,r.__rest)(e,["url"]);this._client=t?new(a())(t,n):new(a())(n)}if((0,l.increaseMaxListeners)(this._client,3),this._client.on("error",this.handleClientError),this._client.on("close",this.handleClientClose),this._client.on("ready",this.handleClientReady),this.extraOptions.skipWaitingForReady||await p.waitUntilReady(this._client),this.loadCommands(this.packageVersion),"end"!==this._client.status){if(this.version=await this.getRedisVersion(),!0!==this.skipVersionCheck&&!this.closing){if((0,l.isRedisVersionLowerThan)(this.version,p.minimumVersion))throw new Error(`Redis version needs to be greater or equal than ${p.minimumVersion} Current: ${this.version}`);(0,l.isRedisVersionLowerThan)(this.version,p.recommendedMinimumVersion)&&console.warn(`It is highly recommended to use a minimum Redis version of ${p.recommendedMinimumVersion}\n             Current: ${this.version}`)}this.capabilities={canDoubleTimeout:!(0,l.isRedisVersionLowerThan)(this.version,"6.0.0"),canBlockFor1Ms:!(0,l.isRedisVersionLowerThan)(this.version,"7.0.8")},this.status="ready"}return this._client}async disconnect(e=!0){const t=await this.client;if("end"!==t.status){let n,r;if(!e)return t.disconnect();const i=new Promise((e,i)=>{(0,l.increaseMaxListeners)(t,2),t.once("end",e),t.once("error",i),n=e,r=i});t.disconnect();try{await i}finally{(0,l.decreaseMaxListeners)(t,2),t.removeListener("end",n),t.removeListener("error",r)}}}async reconnect(){return(await this.client).connect()}async close(e=!1){if(!this.closing){const t=this.status;this.status="closing",this.closing=!0;try{"ready"===t&&await this.initializing,this.extraOptions.shared||("initializing"==t||e?this._client.disconnect():await this._client.quit(),this._client.status="end")}catch(e){if((0,l.isNotConnectionError)(e))throw e}finally{this._client.off("error",this.handleClientError),this._client.off("close",this.handleClientClose),this._client.off("ready",this.handleClientReady),(0,l.decreaseMaxListeners)(this._client,3),this.removeAllListeners(),this.status="closed"}}}async getRedisVersion(){if(this.skipVersionCheck)return p.minimumVersion;const e="redis_version:",t="maxmemory_policy:",n=(await this._client.info()).split(/\r?\n/);let r;for(let i=0;i<n.length;i++){if(0===n[i].indexOf(t)){const e=n[i].substr(17);"noeviction"!==e&&console.warn(`IMPORTANT! Eviction policy is ${e}. It should be "noeviction"`)}0===n[i].indexOf(e)&&(r=n[i].substr(14))}return r}get redisVersion(){return this.version}}p.minimumVersion="5.0.0",p.recommendedMinimumVersion="6.2.0"},(e,t,n)=>{"use strict";n.r(t),n.d(t,{addDelayedJob:()=>r.addDelayedJob,addJobScheduler:()=>i.addJobScheduler,addLog:()=>o.addLog,addParentJob:()=>a.addParentJob,addPrioritizedJob:()=>s.addPrioritizedJob,addRepeatableJob:()=>l.addRepeatableJob,addStandardJob:()=>c.addStandardJob,changeDelay:()=>u.changeDelay,changePriority:()=>d.changePriority,cleanJobsInSet:()=>p.cleanJobsInSet,drain:()=>h.drain,extendLock:()=>f.extendLock,extendLocks:()=>y.extendLocks,getCounts:()=>m.getCounts,getCountsPerPriority:()=>b.getCountsPerPriority,getDependencyCounts:()=>g.getDependencyCounts,getJobScheduler:()=>v.getJobScheduler,getRanges:()=>E.getRanges,getRateLimitTtl:()=>w.getRateLimitTtl,getState:()=>S.getState,getStateV2:()=>K.getStateV2,isFinished:()=>I.isFinished,isJobInList:()=>k.isJobInList,isMaxed:()=>j.isMaxed,moveJobFromActiveToWait:()=>x.moveJobFromActiveToWait,moveJobsToWait:()=>A.moveJobsToWait,moveStalledJobsToWait:()=>O.moveStalledJobsToWait,moveToActive:()=>T.moveToActive,moveToDelayed:()=>R.moveToDelayed,moveToFinished:()=>D.moveToFinished,moveToWaitingChildren:()=>C.moveToWaitingChildren,obliterate:()=>P.obliterate,paginate:()=>M.paginate,pause:()=>N.pause,promote:()=>_.promote,releaseLock:()=>L.releaseLock,removeChildDependency:()=>J.removeChildDependency,removeJob:()=>F.removeJob,removeJobScheduler:()=>V.removeJobScheduler,removeRepeatable:()=>G.removeRepeatable,removeUnprocessedChildren:()=>q.removeUnprocessedChildren,reprocessJob:()=>B.reprocessJob,retryJob:()=>U.retryJob,saveStacktrace:()=>Y.saveStacktrace,updateData:()=>z.updateData,updateJobScheduler:()=>W.updateJobScheduler,updateProgress:()=>$.updateProgress,updateRepeatableJobMillis:()=>Q.updateRepeatableJobMillis});var r=n(242),i=n(243),o=n(244),a=n(245),s=n(246),l=n(247),c=n(248),u=n(249),d=n(250),p=n(251),h=n(252),f=n(253),y=n(254),m=n(255),b=n(256),g=n(257),v=n(258),E=n(259),w=n(260),S=n(261),K=n(262),I=n(263),k=n(264),j=n(265),x=n(266),A=n(267),O=n(268),T=n(269),R=n(270),D=n(271),C=n(272),P=n(273),M=n(274),N=n(275),_=n(276),L=n(277),J=n(278),F=n(279),V=n(280),G=n(281),q=n(282),B=n(283),U=n(284),Y=n(285),z=n(286),W=n(287),$=n(288),Q=n(289)},(e,t,n)=>{"use strict";n.r(t),n.d(t,{addDelayedJob:()=>r});const r={name:"addDelayedJob",content:'--[[\n  Adds a delayed job to the queue by doing the following:\n    - Increases the job counter if needed.\n    - Creates a new job key with the job data.\n    - computes timestamp.\n    - adds to delayed zset.\n    - Emits a global event \'delayed\' if the job is delayed.\n    Input:\n      KEYS[1] \'marker\',\n      KEYS[2] \'meta\'\n      KEYS[3] \'id\'\n      KEYS[4] \'delayed\'\n      KEYS[5] \'completed\'\n      KEYS[6] events stream key\n      ARGV[1] msgpacked arguments array\n            [1]  key prefix,\n            [2]  custom id (use custom instead of one generated automatically)\n            [3]  name\n            [4]  timestamp\n            [5]  parentKey?\n          x [6]  waitChildrenKey key.\n            [7]  parent dependencies key.\n            [8]  parent? {id, queueKey}\n            [9]  repeat job key\n            [10] deduplication key\n      ARGV[2] Json stringified job data\n      ARGV[3] msgpacked options\n      Output:\n        jobId  - OK\n        -5     - Missing parent key\n]]\nlocal metaKey = KEYS[2]\nlocal idKey = KEYS[3]\nlocal delayedKey = KEYS[4]\nlocal completedKey = KEYS[5]\nlocal eventsKey = KEYS[6]\nlocal jobId\nlocal jobIdKey\nlocal rcall = redis.call\nlocal args = cmsgpack.unpack(ARGV[1])\nlocal data = ARGV[2]\nlocal parentKey = args[5]\nlocal parent = args[8]\nlocal repeatJobKey = args[9]\nlocal deduplicationKey = args[10]\nlocal parentData\n-- Includes\n--[[\n  Adds a delayed job to the queue by doing the following:\n    - Creates a new job key with the job data.\n    - adds to delayed zset.\n    - Emits a global event \'delayed\' if the job is delayed.\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Bake in the job id first 12 bits into the timestamp\n  to guarantee correct execution order of delayed jobs\n  (up to 4096 jobs per given timestamp or 4096 jobs apart per timestamp)\n  WARNING: Jobs that are so far apart that they wrap around will cause FIFO to fail\n]]\nlocal function getDelayedScore(delayedKey, timestamp, delay)\n  local delayedTimestamp = (delay > 0 and (tonumber(timestamp) + delay)) or tonumber(timestamp)\n  local minScore = delayedTimestamp * 0x1000\n  local maxScore = (delayedTimestamp + 1 ) * 0x1000 - 1\n  local result = rcall("ZREVRANGEBYSCORE", delayedKey, maxScore,\n    minScore, "WITHSCORES","LIMIT", 0, 1)\n  if #result then\n    local currentMaxScore = tonumber(result[2])\n    if currentMaxScore ~= nil then\n      if currentMaxScore >= maxScore then\n        return maxScore, delayedTimestamp\n      else\n        return currentMaxScore + 1, delayedTimestamp\n      end\n    end\n  end\n  return minScore, delayedTimestamp\nend\nlocal function addDelayedJob(jobId, delayedKey, eventsKey, timestamp,\n  maxEvents, markerKey, delay)\n  local score, delayedTimestamp = getDelayedScore(delayedKey, timestamp, tonumber(delay))\n  rcall("ZADD", delayedKey, score, jobId)\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "delayed",\n    "jobId", jobId, "delay", delayedTimestamp)\n  -- mark that a delayed job is available\n  addDelayMarkerIfNeeded(markerKey, delayedKey)\nend\n--[[\n  Function to debounce a job.\n]]\n-- Includes\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\nlocal function deduplicateJob(deduplicationOpts, jobId, delayedKey, deduplicationKey, eventsKey, maxEvents,\n    prefix)\n    local deduplicationId = deduplicationOpts and deduplicationOpts[\'id\']\n    if deduplicationId then\n        local ttl = deduplicationOpts[\'ttl\']\n        if deduplicationOpts[\'replace\'] and ttl and ttl > 0 then\n            local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n            if currentDebounceJobId then\n                if rcall("ZREM", delayedKey, currentDebounceJobId) > 0 then\n                    removeJobKeys(prefix .. currentDebounceJobId)\n                    rcall("XADD", eventsKey, "*", "event", "removed", "jobId", currentDebounceJobId,\n                        "prev", "delayed")\n                    if deduplicationOpts[\'extend\'] then\n                        rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                    else\n                        rcall(\'SET\', deduplicationKey, jobId, \'KEEPTTL\')\n                    end\n                    rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                        jobId, "deduplicationId", deduplicationId, "deduplicatedJobId", currentDebounceJobId)\n                    return\n                else\n                    return currentDebounceJobId\n                end\n            else\n                rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                return\n            end\n        else\n            local ttl = deduplicationOpts[\'ttl\']\n            local deduplicationKeyExists\n            if ttl then\n                if deduplicationOpts[\'extend\'] then\n                    local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n                    if currentDebounceJobId then\n                        rcall(\'SET\', deduplicationKey, currentDebounceJobId, \'PX\', ttl)\n                        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "debounced",\n                            "jobId", currentDebounceJobId, "debounceId", deduplicationId)\n                        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                            currentDebounceJobId, "deduplicationId", deduplicationId, "deduplicatedJobId", jobId)\n                        return currentDebounceJobId\n                    else\n                        rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                        return\n                    end\n                else\n                    deduplicationKeyExists = not rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl, \'NX\')\n                end\n            else\n                deduplicationKeyExists = not rcall(\'SET\', deduplicationKey, jobId, \'NX\')\n            end\n            if deduplicationKeyExists then\n                local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n                rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "debounced", "jobId",\n                    currentDebounceJobId, "debounceId", deduplicationId)\n                rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                    currentDebounceJobId, "deduplicationId", deduplicationId, "deduplicatedJobId", jobId)\n                return currentDebounceJobId\n            end\n        end\n    end\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to handle the case when job is duplicated.\n]]\n-- Includes\n--[[\n    This function is used to update the parent\'s dependencies if the job\n    is already completed and about to be ignored. The parent must get its\n    dependencies updated to avoid the parent job being stuck forever in \n    the waiting-children state.\n]]\n-- Includes\n--[[\n  Validate and move or add dependencies to parent.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized)\n  if no pending dependencies.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized) if needed.\n]]\n-- Includes\n--[[\n  Move parent to a wait status (wait, prioritized or delayed)\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    local parentWaitKey = parentQueueKey .. ":wait"\n    local parentPausedKey = parentQueueKey .. ":paused"\n    local parentActiveKey = parentQueueKey .. ":active"\n    local parentMetaKey = parentQueueKey .. ":meta"\n    local parentMarkerKey = parentQueueKey .. ":marker"\n    local jobAttributes = rcall("HMGET", parentKey, "priority", "delay")\n    local priority = tonumber(jobAttributes[1]) or 0\n    local delay = tonumber(jobAttributes[2]) or 0\n    if delay > 0 then\n        local delayedTimestamp = tonumber(timestamp) + delay\n        local score = delayedTimestamp * 0x1000\n        local parentDelayedKey = parentQueueKey .. ":delayed"\n        rcall("ZADD", parentDelayedKey, score, parentId)\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "delayed", "jobId", parentId, "delay",\n            delayedTimestamp)\n        addDelayMarkerIfNeeded(parentMarkerKey, parentDelayedKey)\n    else\n        if priority == 0 then\n            local parentTarget, isParentPausedOrMaxed = getTargetQueueList(parentMetaKey, parentActiveKey,\n                parentWaitKey, parentPausedKey)\n            addJobInTargetList(parentTarget, parentMarkerKey, "RPUSH", isParentPausedOrMaxed, parentId)\n        else\n            local isPausedOrMaxed = isQueuePausedOrMaxed(parentMetaKey, parentActiveKey)\n            addJobWithPriority(parentMarkerKey, parentQueueKey .. ":prioritized", priority, parentId,\n                parentQueueKey .. ":pc", isPausedOrMaxed)\n        end\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "waiting", "jobId", parentId, "prev",\n            "waiting-children")\n    end\nend\nlocal function moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  if rcall("EXISTS", parentKey) == 1 then\n    local parentWaitingChildrenKey = parentQueueKey .. ":waiting-children"\n    if rcall("ZSCORE", parentWaitingChildrenKey, parentId) then    \n      rcall("ZREM", parentWaitingChildrenKey, parentId)\n      moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    end\n  end\nend\nlocal function moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey,\n  parentId, timestamp)\n  local doNotHavePendingDependencies = rcall("SCARD", parentDependenciesKey) == 0\n  if doNotHavePendingDependencies then\n    moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  end\nend\nlocal function updateParentDepsIfNeeded(parentKey, parentQueueKey, parentDependenciesKey,\n  parentId, jobIdKey, returnvalue, timestamp )\n  local processedSet = parentKey .. ":processed"\n  rcall("HSET", processedSet, jobIdKey, returnvalue)\n  moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey, parentId, timestamp)\nend\nlocal function updateExistingJobsParent(parentKey, parent, parentData,\n                                        parentDependenciesKey, completedKey,\n                                        jobIdKey, jobId, timestamp)\n    if parentKey ~= nil then\n        if rcall("ZSCORE", completedKey, jobId) then\n            local returnvalue = rcall("HGET", jobIdKey, "returnvalue")\n            updateParentDepsIfNeeded(parentKey, parent[\'queueKey\'],\n                                     parentDependenciesKey, parent[\'id\'],\n                                     jobIdKey, returnvalue, timestamp)\n        else\n            if parentDependenciesKey ~= nil then\n                rcall("SADD", parentDependenciesKey, jobIdKey)\n            end\n        end\n        rcall("HMSET", jobIdKey, "parentKey", parentKey, "parent", parentData)\n    end\nend\nlocal function handleDuplicatedJob(jobKey, jobId, currentParentKey, currentParent,\n  parentData, parentDependenciesKey, completedKey, eventsKey, maxEvents, timestamp)\n  local existedParentKey = rcall("HGET", jobKey, "parentKey")\n  if not existedParentKey or existedParentKey == currentParentKey then\n    updateExistingJobsParent(currentParentKey, currentParent, parentData,\n      parentDependenciesKey, completedKey, jobKey,\n      jobId, timestamp)\n  else\n    if currentParentKey ~= nil and currentParentKey ~= existedParentKey\n      and (rcall("EXISTS", existedParentKey) == 1) then\n      return -7\n    end\n  end\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n    "duplicated", "jobId", jobId)\n  return jobId .. "" -- convert to string\nend\n--[[\n  Function to store a job\n]]\nlocal function storeJob(eventsKey, jobIdKey, jobId, name, data, opts, timestamp,\n                        parentKey, parentData, repeatJobKey)\n    local jsonOpts = cjson.encode(opts)\n    local delay = opts[\'delay\'] or 0\n    local priority = opts[\'priority\'] or 0\n    local debounceId = opts[\'de\'] and opts[\'de\'][\'id\']\n    local optionalValues = {}\n    if parentKey ~= nil then\n        table.insert(optionalValues, "parentKey")\n        table.insert(optionalValues, parentKey)\n        table.insert(optionalValues, "parent")\n        table.insert(optionalValues, parentData)\n    end\n    if repeatJobKey then\n        table.insert(optionalValues, "rjk")\n        table.insert(optionalValues, repeatJobKey)\n    end\n    if debounceId then\n        table.insert(optionalValues, "deid")\n        table.insert(optionalValues, debounceId)\n    end\n    rcall("HMSET", jobIdKey, "name", name, "data", data, "opts", jsonOpts,\n          "timestamp", timestamp, "delay", delay, "priority", priority,\n          unpack(optionalValues))\n    rcall("XADD", eventsKey, "*", "event", "added", "jobId", jobId, "name", name)\n    return delay, priority\nend\nif parentKey ~= nil then\n    if rcall("EXISTS", parentKey) ~= 1 then return -5 end\n    parentData = cjson.encode(parent)\nend\nlocal jobCounter = rcall("INCR", idKey)\nlocal maxEvents = getOrSetMaxEvents(metaKey)\nlocal opts = cmsgpack.unpack(ARGV[3])\nlocal parentDependenciesKey = args[7]\nlocal timestamp = args[4]\nif args[2] == "" then\n    jobId = jobCounter\n    jobIdKey = args[1] .. jobId\nelse\n    jobId = args[2]\n    jobIdKey = args[1] .. jobId\n    if rcall("EXISTS", jobIdKey) == 1 then\n        return handleDuplicatedJob(jobIdKey, jobId, parentKey, parent,\n            parentData, parentDependenciesKey, completedKey, eventsKey,\n            maxEvents, timestamp)\n    end\nend\nlocal deduplicationJobId = deduplicateJob(opts[\'de\'], jobId, delayedKey, deduplicationKey,\n  eventsKey, maxEvents, args[1])\nif deduplicationJobId then\n  return deduplicationJobId\nend\nlocal delay, priority = storeJob(eventsKey, jobIdKey, jobId, args[3], ARGV[2],\n    opts, timestamp, parentKey, parentData, repeatJobKey)\naddDelayedJob(jobId, delayedKey, eventsKey, timestamp, maxEvents, KEYS[1], delay)\n-- Check if this job is a child of another job, if so add it to the parents dependencies\nif parentDependenciesKey ~= nil then\n    rcall("SADD", parentDependenciesKey, jobIdKey)\nend\nreturn jobId .. "" -- convert to string\n',keys:6}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{addJobScheduler:()=>r});const r={name:"addJobScheduler",content:'--[[\n  Adds a job scheduler, i.e. a job factory that creates jobs based on a given schedule (repeat options).\n    Input:\n      KEYS[1]  \'repeat\' key\n      KEYS[2]  \'delayed\' key\n      KEYS[3]  \'wait\' key\n      KEYS[4]  \'paused\' key\n      KEYS[5]  \'meta\' key\n      KEYS[6]  \'prioritized\' key\n      KEYS[7]  \'marker\' key\n      KEYS[8]  \'id\' key\n      KEYS[9]  \'events\' key\n      KEYS[10] \'pc\' priority counter\n      KEYS[11] \'active\' key\n      ARGV[1] next milliseconds\n      ARGV[2] msgpacked options\n            [1]  name\n            [2]  tz?\n            [3]  patten?\n            [4]  endDate?\n            [5]  every?\n      ARGV[3] jobs scheduler id\n      ARGV[4] Json stringified template data\n      ARGV[5] mspacked template opts\n      ARGV[6] msgpacked delayed opts\n      ARGV[7] timestamp\n      ARGV[8] prefix key\n      ARGV[9] producer key\n      Output:\n        repeatableKey  - OK\n]]\nlocal rcall = redis.call\nlocal repeatKey = KEYS[1]\nlocal delayedKey = KEYS[2]\nlocal waitKey = KEYS[3]\nlocal pausedKey = KEYS[4]\nlocal metaKey = KEYS[5]\nlocal prioritizedKey = KEYS[6]\nlocal eventsKey = KEYS[9]\nlocal nextMillis = ARGV[1]\nlocal jobSchedulerId = ARGV[3]\nlocal templateOpts = cmsgpack.unpack(ARGV[5])\nlocal prefixKey = ARGV[8]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Adds a delayed job to the queue by doing the following:\n    - Creates a new job key with the job data.\n    - adds to delayed zset.\n    - Emits a global event \'delayed\' if the job is delayed.\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Bake in the job id first 12 bits into the timestamp\n  to guarantee correct execution order of delayed jobs\n  (up to 4096 jobs per given timestamp or 4096 jobs apart per timestamp)\n  WARNING: Jobs that are so far apart that they wrap around will cause FIFO to fail\n]]\nlocal function getDelayedScore(delayedKey, timestamp, delay)\n  local delayedTimestamp = (delay > 0 and (tonumber(timestamp) + delay)) or tonumber(timestamp)\n  local minScore = delayedTimestamp * 0x1000\n  local maxScore = (delayedTimestamp + 1 ) * 0x1000 - 1\n  local result = rcall("ZREVRANGEBYSCORE", delayedKey, maxScore,\n    minScore, "WITHSCORES","LIMIT", 0, 1)\n  if #result then\n    local currentMaxScore = tonumber(result[2])\n    if currentMaxScore ~= nil then\n      if currentMaxScore >= maxScore then\n        return maxScore, delayedTimestamp\n      else\n        return currentMaxScore + 1, delayedTimestamp\n      end\n    end\n  end\n  return minScore, delayedTimestamp\nend\nlocal function addDelayedJob(jobId, delayedKey, eventsKey, timestamp,\n  maxEvents, markerKey, delay)\n  local score, delayedTimestamp = getDelayedScore(delayedKey, timestamp, tonumber(delay))\n  rcall("ZADD", delayedKey, score, jobId)\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "delayed",\n    "jobId", jobId, "delay", delayedTimestamp)\n  -- mark that a delayed job is available\n  addDelayMarkerIfNeeded(markerKey, delayedKey)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePaused(queueMetaKey)\n  return rcall("HEXISTS", queueMetaKey, "paused") == 1\nend\n--[[\n  Function to store a job\n]]\nlocal function storeJob(eventsKey, jobIdKey, jobId, name, data, opts, timestamp,\n                        parentKey, parentData, repeatJobKey)\n    local jsonOpts = cjson.encode(opts)\n    local delay = opts[\'delay\'] or 0\n    local priority = opts[\'priority\'] or 0\n    local debounceId = opts[\'de\'] and opts[\'de\'][\'id\']\n    local optionalValues = {}\n    if parentKey ~= nil then\n        table.insert(optionalValues, "parentKey")\n        table.insert(optionalValues, parentKey)\n        table.insert(optionalValues, "parent")\n        table.insert(optionalValues, parentData)\n    end\n    if repeatJobKey then\n        table.insert(optionalValues, "rjk")\n        table.insert(optionalValues, repeatJobKey)\n    end\n    if debounceId then\n        table.insert(optionalValues, "deid")\n        table.insert(optionalValues, debounceId)\n    end\n    rcall("HMSET", jobIdKey, "name", name, "data", data, "opts", jsonOpts,\n          "timestamp", timestamp, "delay", delay, "priority", priority,\n          unpack(optionalValues))\n    rcall("XADD", eventsKey, "*", "event", "added", "jobId", jobId, "name", name)\n    return delay, priority\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\nlocal function addJobFromScheduler(jobKey, jobId, rawOpts, waitKey, pausedKey, activeKey, metaKey, \n  prioritizedKey, priorityCounter, delayedKey, markerKey, eventsKey, name, maxEvents, timestamp,\n  data, jobSchedulerId)\n  local opts = cmsgpack.unpack(rawOpts)\n  local delay, priority = storeJob(eventsKey, jobKey, jobId, name, data,\n    opts, timestamp, nil, nil, jobSchedulerId)\n  if delay ~= 0 then\n    addDelayedJob(jobId, delayedKey, eventsKey, timestamp, maxEvents, markerKey, delay)\n  else\n    local target, isPausedOrMaxed = getTargetQueueList(metaKey, activeKey, waitKey, pausedKey)\n    -- Standard or priority add\n    if priority == 0 then\n      local pushCmd = opts[\'lifo\'] and \'RPUSH\' or \'LPUSH\'\n      addJobInTargetList(target, markerKey, pushCmd, isPausedOrMaxed, jobId)\n    else\n      -- Priority add\n      addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounter, isPausedOrMaxed)\n    end\n    -- Emit waiting event\n    rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents,  "*", "event", "waiting", "jobId", jobId)\n  end\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove deduplication key if needed\n  when a job is being removed.\n]]\nlocal function removeDeduplicationKeyIfNeededOnRemoval(prefixKey,\n  jobKey, jobId)\n  local deduplicationId = rcall("HGET", jobKey, "deid")\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local currentJobId = rcall(\'GET\', deduplicationKey)\n    if currentJobId and currentJobId == jobId then\n      return rcall("DEL", deduplicationKey)\n    end\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDeduplicationKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDeduplicationKey then\n    removeDeduplicationKeyIfNeededOnRemoval(baseKey, jobKey, jobId)\n  end\n  removeJobKeys(jobKey)\nend\n--[[\n  Function to store a job scheduler\n]]\nlocal function storeJobScheduler(schedulerId, schedulerKey, repeatKey, nextMillis, opts,\n  templateData, templateOpts)\n  rcall("ZADD", repeatKey, nextMillis, schedulerId)\n  local optionalValues = {}\n  if opts[\'tz\'] then\n    table.insert(optionalValues, "tz")\n    table.insert(optionalValues, opts[\'tz\'])\n  end\n  if opts[\'limit\'] then\n    table.insert(optionalValues, "limit")\n    table.insert(optionalValues, opts[\'limit\'])\n  end\n  if opts[\'pattern\'] then\n    table.insert(optionalValues, "pattern")\n    table.insert(optionalValues, opts[\'pattern\'])\n  end\n  if opts[\'endDate\'] then\n    table.insert(optionalValues, "endDate")\n    table.insert(optionalValues, opts[\'endDate\'])\n  end\n  if opts[\'every\'] then\n    table.insert(optionalValues, "every")\n    table.insert(optionalValues, opts[\'every\'])\n  end\n  if opts[\'offset\'] then\n    table.insert(optionalValues, "offset")\n    table.insert(optionalValues, opts[\'offset\'])\n  end\n  local jsonTemplateOpts = cjson.encode(templateOpts)\n  if jsonTemplateOpts and jsonTemplateOpts ~= \'{}\' then\n    table.insert(optionalValues, "opts")\n    table.insert(optionalValues, jsonTemplateOpts)\n  end\n  if templateData and templateData ~= \'{}\' then\n    table.insert(optionalValues, "data")\n    table.insert(optionalValues, templateData)\n  end\n  rcall("DEL", schedulerKey) -- remove all attributes and then re-insert new ones\n  rcall("HMSET", schedulerKey, "name", opts[\'name\'], "ic", 1, unpack(optionalValues))\nend\n-- If we are overriding a repeatable job we must delete the delayed job for\n-- the next iteration.\nlocal schedulerKey = repeatKey .. ":" .. jobSchedulerId\nlocal nextDelayedJobKey = schedulerKey .. ":" .. nextMillis\nlocal nextDelayedJobId = "repeat:" .. jobSchedulerId .. ":" .. nextMillis\nlocal maxEvents = getOrSetMaxEvents(metaKey)\nlocal function removeJobFromScheduler(prefixKey, delayedKey, prioritizedKey, waitKey, pausedKey, jobId,\n    metaKey, eventsKey)\n    if rcall("ZSCORE", delayedKey, jobId) then\n        removeJob(jobId, true, prefixKey, true --[[remove debounce key]] )\n        rcall("ZREM", delayedKey, jobId)\n        return true\n    elseif rcall("ZSCORE", prioritizedKey, jobId) then\n        removeJob(jobId, true, prefixKey, true --[[remove debounce key]] )\n        rcall("ZREM", prioritizedKey, jobId)\n        return true\n    else\n        local pausedOrWaitKey = waitKey\n        if isQueuePaused(metaKey) then\n            pausedOrWaitKey = pausedKey\n        end\n        if rcall("LREM", pausedOrWaitKey, 1, jobId) > 0 then\n            removeJob(jobId, true, prefixKey, true --[[remove debounce key]] )\n            return true\n        end\n    end\n    return false\nend\nif rcall("EXISTS", nextDelayedJobKey) == 1 then\n    if not removeJobFromScheduler(prefixKey, delayedKey, prioritizedKey, waitKey, pausedKey,\n        nextDelayedJobId, metaKey, eventsKey) then\n        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n            "duplicated", "jobId", nextDelayedJobId)\n        return nextDelayedJobId .. "" -- convert to string\n    end\nend\nlocal prevMillis = rcall("ZSCORE", repeatKey, jobSchedulerId)\nif prevMillis then    \n    local currentJobId = "repeat:" .. jobSchedulerId .. ":" .. prevMillis\n    local currentDelayedJobKey = schedulerKey .. ":" .. prevMillis\n    if currentJobId ~= nextDelayedJobId and rcall("EXISTS", currentDelayedJobKey) == 1 then\n        removeJobFromScheduler(prefixKey, delayedKey, prioritizedKey, waitKey, pausedKey,\n            currentJobId, metaKey, eventsKey)\n    end\nend\nlocal schedulerOpts = cmsgpack.unpack(ARGV[2])\nstoreJobScheduler(jobSchedulerId, schedulerKey, repeatKey, nextMillis, schedulerOpts, ARGV[4], templateOpts)\nrcall("INCR", KEYS[8])\naddJobFromScheduler(nextDelayedJobKey, nextDelayedJobId, ARGV[6], waitKey, pausedKey,\n    KEYS[11], metaKey, prioritizedKey, KEYS[10], delayedKey, KEYS[7], eventsKey,\n    schedulerOpts[\'name\'], maxEvents, ARGV[7], ARGV[4], jobSchedulerId)\nif ARGV[9] ~= "" then\n    rcall("HSET", ARGV[9], "nrjid", nextDelayedJobId)\nend\nreturn nextDelayedJobId .. "" -- convert to string\n',keys:11}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{addLog:()=>r});const r={name:"addLog",content:'--[[\n  Add job log\n  Input:\n    KEYS[1] job id key\n    KEYS[2] job logs key\n    ARGV[1] id\n    ARGV[2] log\n    ARGV[3] keepLogs\n  Output:\n    -1 - Missing job.\n]]\nlocal rcall = redis.call\nif rcall("EXISTS", KEYS[1]) == 1 then -- // Make sure job exists\n  local logCount = rcall("RPUSH", KEYS[2], ARGV[2])\n  if ARGV[3] ~= \'\' then\n    local keepLogs = tonumber(ARGV[3])\n    rcall("LTRIM", KEYS[2], -keepLogs, -1)\n    return math.min(keepLogs, logCount)\n  end\n  return logCount\nelse\n  return -1\nend\n',keys:2}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{addParentJob:()=>r});const r={name:"addParentJob",content:'--[[\n  Adds a parent job to the queue by doing the following:\n    - Increases the job counter if needed.\n    - Creates a new job key with the job data.\n    - adds the job to the waiting-children zset\n    Input:\n      KEYS[1] \'meta\'\n      KEYS[2] \'id\'\n      KEYS[3] \'delayed\'\n      KEYS[4] \'completed\'\n      KEYS[5] events stream key\n      ARGV[1] msgpacked arguments array\n            [1]  key prefix,\n            [2]  custom id (will not generate one automatically)\n            [3]  name\n            [4]  timestamp\n            [5]  parentKey?\n            [6]  waitChildrenKey key.\n            [7]  parent dependencies key.\n            [8]  parent? {id, queueKey}\n            [9]  repeat job key\n            [10] deduplication key\n      ARGV[2] Json stringified job data\n      ARGV[3] msgpacked options\n      Output:\n        jobId  - OK\n        -5     - Missing parent key\n]]\nlocal metaKey = KEYS[1]\nlocal idKey = KEYS[2]\nlocal completedKey = KEYS[4]\nlocal eventsKey = KEYS[5]\nlocal jobId\nlocal jobIdKey\nlocal rcall = redis.call\nlocal args = cmsgpack.unpack(ARGV[1])\nlocal data = ARGV[2]\nlocal opts = cmsgpack.unpack(ARGV[3])\nlocal parentKey = args[5]\nlocal parent = args[8]\nlocal repeatJobKey = args[9]\nlocal deduplicationKey = args[10]\nlocal parentData\n-- Includes\n--[[\n  Function to debounce a job.\n]]\n-- Includes\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\nlocal function deduplicateJob(deduplicationOpts, jobId, delayedKey, deduplicationKey, eventsKey, maxEvents,\n    prefix)\n    local deduplicationId = deduplicationOpts and deduplicationOpts[\'id\']\n    if deduplicationId then\n        local ttl = deduplicationOpts[\'ttl\']\n        if deduplicationOpts[\'replace\'] and ttl and ttl > 0 then\n            local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n            if currentDebounceJobId then\n                if rcall("ZREM", delayedKey, currentDebounceJobId) > 0 then\n                    removeJobKeys(prefix .. currentDebounceJobId)\n                    rcall("XADD", eventsKey, "*", "event", "removed", "jobId", currentDebounceJobId,\n                        "prev", "delayed")\n                    if deduplicationOpts[\'extend\'] then\n                        rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                    else\n                        rcall(\'SET\', deduplicationKey, jobId, \'KEEPTTL\')\n                    end\n                    rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                        jobId, "deduplicationId", deduplicationId, "deduplicatedJobId", currentDebounceJobId)\n                    return\n                else\n                    return currentDebounceJobId\n                end\n            else\n                rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                return\n            end\n        else\n            local ttl = deduplicationOpts[\'ttl\']\n            local deduplicationKeyExists\n            if ttl then\n                if deduplicationOpts[\'extend\'] then\n                    local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n                    if currentDebounceJobId then\n                        rcall(\'SET\', deduplicationKey, currentDebounceJobId, \'PX\', ttl)\n                        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "debounced",\n                            "jobId", currentDebounceJobId, "debounceId", deduplicationId)\n                        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                            currentDebounceJobId, "deduplicationId", deduplicationId, "deduplicatedJobId", jobId)\n                        return currentDebounceJobId\n                    else\n                        rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                        return\n                    end\n                else\n                    deduplicationKeyExists = not rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl, \'NX\')\n                end\n            else\n                deduplicationKeyExists = not rcall(\'SET\', deduplicationKey, jobId, \'NX\')\n            end\n            if deduplicationKeyExists then\n                local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n                rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "debounced", "jobId",\n                    currentDebounceJobId, "debounceId", deduplicationId)\n                rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                    currentDebounceJobId, "deduplicationId", deduplicationId, "deduplicatedJobId", jobId)\n                return currentDebounceJobId\n            end\n        end\n    end\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to handle the case when job is duplicated.\n]]\n-- Includes\n--[[\n    This function is used to update the parent\'s dependencies if the job\n    is already completed and about to be ignored. The parent must get its\n    dependencies updated to avoid the parent job being stuck forever in \n    the waiting-children state.\n]]\n-- Includes\n--[[\n  Validate and move or add dependencies to parent.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized)\n  if no pending dependencies.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized) if needed.\n]]\n-- Includes\n--[[\n  Move parent to a wait status (wait, prioritized or delayed)\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    local parentWaitKey = parentQueueKey .. ":wait"\n    local parentPausedKey = parentQueueKey .. ":paused"\n    local parentActiveKey = parentQueueKey .. ":active"\n    local parentMetaKey = parentQueueKey .. ":meta"\n    local parentMarkerKey = parentQueueKey .. ":marker"\n    local jobAttributes = rcall("HMGET", parentKey, "priority", "delay")\n    local priority = tonumber(jobAttributes[1]) or 0\n    local delay = tonumber(jobAttributes[2]) or 0\n    if delay > 0 then\n        local delayedTimestamp = tonumber(timestamp) + delay\n        local score = delayedTimestamp * 0x1000\n        local parentDelayedKey = parentQueueKey .. ":delayed"\n        rcall("ZADD", parentDelayedKey, score, parentId)\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "delayed", "jobId", parentId, "delay",\n            delayedTimestamp)\n        addDelayMarkerIfNeeded(parentMarkerKey, parentDelayedKey)\n    else\n        if priority == 0 then\n            local parentTarget, isParentPausedOrMaxed = getTargetQueueList(parentMetaKey, parentActiveKey,\n                parentWaitKey, parentPausedKey)\n            addJobInTargetList(parentTarget, parentMarkerKey, "RPUSH", isParentPausedOrMaxed, parentId)\n        else\n            local isPausedOrMaxed = isQueuePausedOrMaxed(parentMetaKey, parentActiveKey)\n            addJobWithPriority(parentMarkerKey, parentQueueKey .. ":prioritized", priority, parentId,\n                parentQueueKey .. ":pc", isPausedOrMaxed)\n        end\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "waiting", "jobId", parentId, "prev",\n            "waiting-children")\n    end\nend\nlocal function moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  if rcall("EXISTS", parentKey) == 1 then\n    local parentWaitingChildrenKey = parentQueueKey .. ":waiting-children"\n    if rcall("ZSCORE", parentWaitingChildrenKey, parentId) then    \n      rcall("ZREM", parentWaitingChildrenKey, parentId)\n      moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    end\n  end\nend\nlocal function moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey,\n  parentId, timestamp)\n  local doNotHavePendingDependencies = rcall("SCARD", parentDependenciesKey) == 0\n  if doNotHavePendingDependencies then\n    moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  end\nend\nlocal function updateParentDepsIfNeeded(parentKey, parentQueueKey, parentDependenciesKey,\n  parentId, jobIdKey, returnvalue, timestamp )\n  local processedSet = parentKey .. ":processed"\n  rcall("HSET", processedSet, jobIdKey, returnvalue)\n  moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey, parentId, timestamp)\nend\nlocal function updateExistingJobsParent(parentKey, parent, parentData,\n                                        parentDependenciesKey, completedKey,\n                                        jobIdKey, jobId, timestamp)\n    if parentKey ~= nil then\n        if rcall("ZSCORE", completedKey, jobId) then\n            local returnvalue = rcall("HGET", jobIdKey, "returnvalue")\n            updateParentDepsIfNeeded(parentKey, parent[\'queueKey\'],\n                                     parentDependenciesKey, parent[\'id\'],\n                                     jobIdKey, returnvalue, timestamp)\n        else\n            if parentDependenciesKey ~= nil then\n                rcall("SADD", parentDependenciesKey, jobIdKey)\n            end\n        end\n        rcall("HMSET", jobIdKey, "parentKey", parentKey, "parent", parentData)\n    end\nend\nlocal function handleDuplicatedJob(jobKey, jobId, currentParentKey, currentParent,\n  parentData, parentDependenciesKey, completedKey, eventsKey, maxEvents, timestamp)\n  local existedParentKey = rcall("HGET", jobKey, "parentKey")\n  if not existedParentKey or existedParentKey == currentParentKey then\n    updateExistingJobsParent(currentParentKey, currentParent, parentData,\n      parentDependenciesKey, completedKey, jobKey,\n      jobId, timestamp)\n  else\n    if currentParentKey ~= nil and currentParentKey ~= existedParentKey\n      and (rcall("EXISTS", existedParentKey) == 1) then\n      return -7\n    end\n  end\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n    "duplicated", "jobId", jobId)\n  return jobId .. "" -- convert to string\nend\n--[[\n  Function to store a job\n]]\nlocal function storeJob(eventsKey, jobIdKey, jobId, name, data, opts, timestamp,\n                        parentKey, parentData, repeatJobKey)\n    local jsonOpts = cjson.encode(opts)\n    local delay = opts[\'delay\'] or 0\n    local priority = opts[\'priority\'] or 0\n    local debounceId = opts[\'de\'] and opts[\'de\'][\'id\']\n    local optionalValues = {}\n    if parentKey ~= nil then\n        table.insert(optionalValues, "parentKey")\n        table.insert(optionalValues, parentKey)\n        table.insert(optionalValues, "parent")\n        table.insert(optionalValues, parentData)\n    end\n    if repeatJobKey then\n        table.insert(optionalValues, "rjk")\n        table.insert(optionalValues, repeatJobKey)\n    end\n    if debounceId then\n        table.insert(optionalValues, "deid")\n        table.insert(optionalValues, debounceId)\n    end\n    rcall("HMSET", jobIdKey, "name", name, "data", data, "opts", jsonOpts,\n          "timestamp", timestamp, "delay", delay, "priority", priority,\n          unpack(optionalValues))\n    rcall("XADD", eventsKey, "*", "event", "added", "jobId", jobId, "name", name)\n    return delay, priority\nend\nif parentKey ~= nil then\n    if rcall("EXISTS", parentKey) ~= 1 then return -5 end\n    parentData = cjson.encode(parent)\nend\nlocal jobCounter = rcall("INCR", idKey)\nlocal maxEvents = getOrSetMaxEvents(metaKey)\nlocal parentDependenciesKey = args[7]\nlocal timestamp = args[4]\nif args[2] == "" then\n    jobId = jobCounter\n    jobIdKey = args[1] .. jobId\nelse\n    jobId = args[2]\n    jobIdKey = args[1] .. jobId\n    if rcall("EXISTS", jobIdKey) == 1 then\n        return handleDuplicatedJob(jobIdKey, jobId, parentKey, parent,\n            parentData, parentDependenciesKey, completedKey, eventsKey,\n            maxEvents, timestamp)\n    end\nend\nlocal deduplicationJobId = deduplicateJob(opts[\'de\'], jobId, KEYS[3],\n  deduplicationKey, eventsKey, maxEvents, args[1])\nif deduplicationJobId then\n  return deduplicationJobId\nend\n-- Store the job.\nstoreJob(eventsKey, jobIdKey, jobId, args[3], ARGV[2], opts, timestamp,\n         parentKey, parentData, repeatJobKey)\nlocal waitChildrenKey = args[6]\nrcall("ZADD", waitChildrenKey, timestamp, jobId)\nrcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n      "waiting-children", "jobId", jobId)\n-- Check if this job is a child of another job, if so add it to the parents dependencies\nif parentDependenciesKey ~= nil then\n    rcall("SADD", parentDependenciesKey, jobIdKey)\nend\nreturn jobId .. "" -- convert to string\n',keys:5}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{addPrioritizedJob:()=>r});const r={name:"addPrioritizedJob",content:'--[[\n  Adds a priotitized job to the queue by doing the following:\n    - Increases the job counter if needed.\n    - Creates a new job key with the job data.\n    - Adds the job to the "added" list so that workers gets notified.\n    Input:\n      KEYS[1] \'marker\',\n      KEYS[2] \'meta\'\n      KEYS[3] \'id\'\n      KEYS[4] \'prioritized\'\n      KEYS[5] \'delayed\'\n      KEYS[6] \'completed\'\n      KEYS[7] \'active\'\n      KEYS[8] events stream key\n      KEYS[9] \'pc\' priority counter\n      ARGV[1] msgpacked arguments array\n            [1]  key prefix,\n            [2]  custom id (will not generate one automatically)\n            [3]  name\n            [4]  timestamp\n            [5]  parentKey?\n            [6]  waitChildrenKey key.\n            [7]  parent dependencies key.\n            [8]  parent? {id, queueKey}\n            [9]  repeat job key\n            [10] deduplication key\n      ARGV[2] Json stringified job data\n      ARGV[3] msgpacked options\n      Output:\n        jobId  - OK\n        -5     - Missing parent key\n]] \nlocal metaKey = KEYS[2]\nlocal idKey = KEYS[3]\nlocal priorityKey = KEYS[4]\nlocal completedKey = KEYS[6]\nlocal activeKey = KEYS[7]\nlocal eventsKey = KEYS[8]\nlocal priorityCounterKey = KEYS[9]\nlocal jobId\nlocal jobIdKey\nlocal rcall = redis.call\nlocal args = cmsgpack.unpack(ARGV[1])\nlocal data = ARGV[2]\nlocal opts = cmsgpack.unpack(ARGV[3])\nlocal parentKey = args[5]\nlocal parent = args[8]\nlocal repeatJobKey = args[9]\nlocal deduplicationKey = args[10]\nlocal parentData\n-- Includes\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to debounce a job.\n]]\n-- Includes\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\nlocal function deduplicateJob(deduplicationOpts, jobId, delayedKey, deduplicationKey, eventsKey, maxEvents,\n    prefix)\n    local deduplicationId = deduplicationOpts and deduplicationOpts[\'id\']\n    if deduplicationId then\n        local ttl = deduplicationOpts[\'ttl\']\n        if deduplicationOpts[\'replace\'] and ttl and ttl > 0 then\n            local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n            if currentDebounceJobId then\n                if rcall("ZREM", delayedKey, currentDebounceJobId) > 0 then\n                    removeJobKeys(prefix .. currentDebounceJobId)\n                    rcall("XADD", eventsKey, "*", "event", "removed", "jobId", currentDebounceJobId,\n                        "prev", "delayed")\n                    if deduplicationOpts[\'extend\'] then\n                        rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                    else\n                        rcall(\'SET\', deduplicationKey, jobId, \'KEEPTTL\')\n                    end\n                    rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                        jobId, "deduplicationId", deduplicationId, "deduplicatedJobId", currentDebounceJobId)\n                    return\n                else\n                    return currentDebounceJobId\n                end\n            else\n                rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                return\n            end\n        else\n            local ttl = deduplicationOpts[\'ttl\']\n            local deduplicationKeyExists\n            if ttl then\n                if deduplicationOpts[\'extend\'] then\n                    local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n                    if currentDebounceJobId then\n                        rcall(\'SET\', deduplicationKey, currentDebounceJobId, \'PX\', ttl)\n                        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "debounced",\n                            "jobId", currentDebounceJobId, "debounceId", deduplicationId)\n                        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                            currentDebounceJobId, "deduplicationId", deduplicationId, "deduplicatedJobId", jobId)\n                        return currentDebounceJobId\n                    else\n                        rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                        return\n                    end\n                else\n                    deduplicationKeyExists = not rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl, \'NX\')\n                end\n            else\n                deduplicationKeyExists = not rcall(\'SET\', deduplicationKey, jobId, \'NX\')\n            end\n            if deduplicationKeyExists then\n                local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n                rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "debounced", "jobId",\n                    currentDebounceJobId, "debounceId", deduplicationId)\n                rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                    currentDebounceJobId, "deduplicationId", deduplicationId, "deduplicatedJobId", jobId)\n                return currentDebounceJobId\n            end\n        end\n    end\nend\n--[[\n  Function to store a job\n]]\nlocal function storeJob(eventsKey, jobIdKey, jobId, name, data, opts, timestamp,\n                        parentKey, parentData, repeatJobKey)\n    local jsonOpts = cjson.encode(opts)\n    local delay = opts[\'delay\'] or 0\n    local priority = opts[\'priority\'] or 0\n    local debounceId = opts[\'de\'] and opts[\'de\'][\'id\']\n    local optionalValues = {}\n    if parentKey ~= nil then\n        table.insert(optionalValues, "parentKey")\n        table.insert(optionalValues, parentKey)\n        table.insert(optionalValues, "parent")\n        table.insert(optionalValues, parentData)\n    end\n    if repeatJobKey then\n        table.insert(optionalValues, "rjk")\n        table.insert(optionalValues, repeatJobKey)\n    end\n    if debounceId then\n        table.insert(optionalValues, "deid")\n        table.insert(optionalValues, debounceId)\n    end\n    rcall("HMSET", jobIdKey, "name", name, "data", data, "opts", jsonOpts,\n          "timestamp", timestamp, "delay", delay, "priority", priority,\n          unpack(optionalValues))\n    rcall("XADD", eventsKey, "*", "event", "added", "jobId", jobId, "name", name)\n    return delay, priority\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to handle the case when job is duplicated.\n]]\n-- Includes\n--[[\n    This function is used to update the parent\'s dependencies if the job\n    is already completed and about to be ignored. The parent must get its\n    dependencies updated to avoid the parent job being stuck forever in \n    the waiting-children state.\n]]\n-- Includes\n--[[\n  Validate and move or add dependencies to parent.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized)\n  if no pending dependencies.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized) if needed.\n]]\n-- Includes\n--[[\n  Move parent to a wait status (wait, prioritized or delayed)\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    local parentWaitKey = parentQueueKey .. ":wait"\n    local parentPausedKey = parentQueueKey .. ":paused"\n    local parentActiveKey = parentQueueKey .. ":active"\n    local parentMetaKey = parentQueueKey .. ":meta"\n    local parentMarkerKey = parentQueueKey .. ":marker"\n    local jobAttributes = rcall("HMGET", parentKey, "priority", "delay")\n    local priority = tonumber(jobAttributes[1]) or 0\n    local delay = tonumber(jobAttributes[2]) or 0\n    if delay > 0 then\n        local delayedTimestamp = tonumber(timestamp) + delay\n        local score = delayedTimestamp * 0x1000\n        local parentDelayedKey = parentQueueKey .. ":delayed"\n        rcall("ZADD", parentDelayedKey, score, parentId)\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "delayed", "jobId", parentId, "delay",\n            delayedTimestamp)\n        addDelayMarkerIfNeeded(parentMarkerKey, parentDelayedKey)\n    else\n        if priority == 0 then\n            local parentTarget, isParentPausedOrMaxed = getTargetQueueList(parentMetaKey, parentActiveKey,\n                parentWaitKey, parentPausedKey)\n            addJobInTargetList(parentTarget, parentMarkerKey, "RPUSH", isParentPausedOrMaxed, parentId)\n        else\n            local isPausedOrMaxed = isQueuePausedOrMaxed(parentMetaKey, parentActiveKey)\n            addJobWithPriority(parentMarkerKey, parentQueueKey .. ":prioritized", priority, parentId,\n                parentQueueKey .. ":pc", isPausedOrMaxed)\n        end\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "waiting", "jobId", parentId, "prev",\n            "waiting-children")\n    end\nend\nlocal function moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  if rcall("EXISTS", parentKey) == 1 then\n    local parentWaitingChildrenKey = parentQueueKey .. ":waiting-children"\n    if rcall("ZSCORE", parentWaitingChildrenKey, parentId) then    \n      rcall("ZREM", parentWaitingChildrenKey, parentId)\n      moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    end\n  end\nend\nlocal function moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey,\n  parentId, timestamp)\n  local doNotHavePendingDependencies = rcall("SCARD", parentDependenciesKey) == 0\n  if doNotHavePendingDependencies then\n    moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  end\nend\nlocal function updateParentDepsIfNeeded(parentKey, parentQueueKey, parentDependenciesKey,\n  parentId, jobIdKey, returnvalue, timestamp )\n  local processedSet = parentKey .. ":processed"\n  rcall("HSET", processedSet, jobIdKey, returnvalue)\n  moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey, parentId, timestamp)\nend\nlocal function updateExistingJobsParent(parentKey, parent, parentData,\n                                        parentDependenciesKey, completedKey,\n                                        jobIdKey, jobId, timestamp)\n    if parentKey ~= nil then\n        if rcall("ZSCORE", completedKey, jobId) then\n            local returnvalue = rcall("HGET", jobIdKey, "returnvalue")\n            updateParentDepsIfNeeded(parentKey, parent[\'queueKey\'],\n                                     parentDependenciesKey, parent[\'id\'],\n                                     jobIdKey, returnvalue, timestamp)\n        else\n            if parentDependenciesKey ~= nil then\n                rcall("SADD", parentDependenciesKey, jobIdKey)\n            end\n        end\n        rcall("HMSET", jobIdKey, "parentKey", parentKey, "parent", parentData)\n    end\nend\nlocal function handleDuplicatedJob(jobKey, jobId, currentParentKey, currentParent,\n  parentData, parentDependenciesKey, completedKey, eventsKey, maxEvents, timestamp)\n  local existedParentKey = rcall("HGET", jobKey, "parentKey")\n  if not existedParentKey or existedParentKey == currentParentKey then\n    updateExistingJobsParent(currentParentKey, currentParent, parentData,\n      parentDependenciesKey, completedKey, jobKey,\n      jobId, timestamp)\n  else\n    if currentParentKey ~= nil and currentParentKey ~= existedParentKey\n      and (rcall("EXISTS", existedParentKey) == 1) then\n      return -7\n    end\n  end\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n    "duplicated", "jobId", jobId)\n  return jobId .. "" -- convert to string\nend\nif parentKey ~= nil then\n    if rcall("EXISTS", parentKey) ~= 1 then return -5 end\n    parentData = cjson.encode(parent)\nend\nlocal jobCounter = rcall("INCR", idKey)\nlocal maxEvents = getOrSetMaxEvents(metaKey)\nlocal parentDependenciesKey = args[7]\nlocal timestamp = args[4]\nif args[2] == "" then\n    jobId = jobCounter\n    jobIdKey = args[1] .. jobId\nelse\n    jobId = args[2]\n    jobIdKey = args[1] .. jobId\n    if rcall("EXISTS", jobIdKey) == 1 then\n        return handleDuplicatedJob(jobIdKey, jobId, parentKey, parent,\n            parentData, parentDependenciesKey, completedKey, eventsKey,\n            maxEvents, timestamp)\n    end\nend\nlocal deduplicationJobId = deduplicateJob(opts[\'de\'], jobId, KEYS[5],\n  deduplicationKey, eventsKey, maxEvents, args[1])\nif deduplicationJobId then\n  return deduplicationJobId\nend\n-- Store the job.\nlocal delay, priority = storeJob(eventsKey, jobIdKey, jobId, args[3], ARGV[2],\n                                 opts, timestamp, parentKey, parentData,\n                                 repeatJobKey)\n-- Add the job to the prioritized set\nlocal isPausedOrMaxed = isQueuePausedOrMaxed(metaKey, activeKey)\naddJobWithPriority( KEYS[1], priorityKey, priority, jobId, priorityCounterKey, isPausedOrMaxed)\n-- Emit waiting event\nrcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "waiting",\n      "jobId", jobId)\n-- Check if this job is a child of another job, if so add it to the parents dependencies\nif parentDependenciesKey ~= nil then\n    rcall("SADD", parentDependenciesKey, jobIdKey)\nend\nreturn jobId .. "" -- convert to string\n',keys:9}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{addRepeatableJob:()=>r});const r={name:"addRepeatableJob",content:'--[[\n  Adds a repeatable job\n    Input:\n      KEYS[1] \'repeat\' key\n      KEYS[2] \'delayed\' key\n      ARGV[1] next milliseconds\n      ARGV[2] msgpacked options\n            [1]  name\n            [2]  tz?\n            [3]  patten?\n            [4]  endDate?\n            [5]  every?\n      ARGV[3] legacy custom key TODO: remove this logic in next breaking change\n      ARGV[4] custom key\n      ARGV[5] prefix key\n      Output:\n        repeatableKey  - OK\n]]\nlocal rcall = redis.call\nlocal repeatKey = KEYS[1]\nlocal delayedKey = KEYS[2]\nlocal nextMillis = ARGV[1]\nlocal legacyCustomKey = ARGV[3]\nlocal customKey = ARGV[4]\nlocal prefixKey = ARGV[5]\n-- Includes\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove deduplication key if needed\n  when a job is being removed.\n]]\nlocal function removeDeduplicationKeyIfNeededOnRemoval(prefixKey,\n  jobKey, jobId)\n  local deduplicationId = rcall("HGET", jobKey, "deid")\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local currentJobId = rcall(\'GET\', deduplicationKey)\n    if currentJobId and currentJobId == jobId then\n      return rcall("DEL", deduplicationKey)\n    end\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDeduplicationKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDeduplicationKey then\n    removeDeduplicationKeyIfNeededOnRemoval(baseKey, jobKey, jobId)\n  end\n  removeJobKeys(jobKey)\nend\nlocal function storeRepeatableJob(repeatKey, customKey, nextMillis, rawOpts)\n  rcall("ZADD", repeatKey, nextMillis, customKey)\n  local opts = cmsgpack.unpack(rawOpts)\n  local optionalValues = {}\n  if opts[\'tz\'] then\n    table.insert(optionalValues, "tz")\n    table.insert(optionalValues, opts[\'tz\'])\n  end\n  if opts[\'pattern\'] then\n    table.insert(optionalValues, "pattern")\n    table.insert(optionalValues, opts[\'pattern\'])\n  end\n  if opts[\'endDate\'] then\n    table.insert(optionalValues, "endDate")\n    table.insert(optionalValues, opts[\'endDate\'])\n  end\n  if opts[\'every\'] then\n    table.insert(optionalValues, "every")\n    table.insert(optionalValues, opts[\'every\'])\n  end\n  rcall("HMSET", repeatKey .. ":" .. customKey, "name", opts[\'name\'],\n    unpack(optionalValues))\n  return customKey\nend\n-- If we are overriding a repeatable job we must delete the delayed job for\n-- the next iteration.\nlocal prevMillis = rcall("ZSCORE", repeatKey, customKey)\nif prevMillis then\n  local delayedJobId =  "repeat:" .. customKey .. ":" .. prevMillis\n  local nextDelayedJobId =  repeatKey .. ":" .. customKey .. ":" .. nextMillis\n  if rcall("ZSCORE", delayedKey, delayedJobId)\n   and rcall("EXISTS", nextDelayedJobId) ~= 1 then\n    removeJob(delayedJobId, true, prefixKey, true --[[remove debounce key]])\n    rcall("ZREM", delayedKey, delayedJobId)\n  end\nend\n-- Keep backwards compatibility with old repeatable jobs (<= 3.0.0)\nif rcall("ZSCORE", repeatKey, legacyCustomKey) ~= false then\n  return storeRepeatableJob(repeatKey, legacyCustomKey, nextMillis, ARGV[2])\nend\nreturn storeRepeatableJob(repeatKey, customKey, nextMillis, ARGV[2])\n',keys:2}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{addStandardJob:()=>r});const r={name:"addStandardJob",content:'--[[\n  Adds a job to the queue by doing the following:\n    - Increases the job counter if needed.\n    - Creates a new job key with the job data.\n    - if delayed:\n      - computes timestamp.\n      - adds to delayed zset.\n      - Emits a global event \'delayed\' if the job is delayed.\n    - if not delayed\n      - Adds the jobId to the wait/paused list in one of three ways:\n         - LIFO\n         - FIFO\n         - prioritized.\n      - Adds the job to the "added" list so that workers gets notified.\n    Input:\n      KEYS[1] \'wait\',\n      KEYS[2] \'paused\'\n      KEYS[3] \'meta\'\n      KEYS[4] \'id\'\n      KEYS[5] \'completed\'\n      KEYS[6] \'delayed\'\n      KEYS[7] \'active\'\n      KEYS[8] events stream key\n      KEYS[9] marker key\n      ARGV[1] msgpacked arguments array\n            [1]  key prefix,\n            [2]  custom id (will not generate one automatically)\n            [3]  name\n            [4]  timestamp\n            [5]  parentKey?\n            [6]  waitChildrenKey key.\n            [7]  parent dependencies key.\n            [8]  parent? {id, queueKey}\n            [9]  repeat job key\n            [10] deduplication key\n      ARGV[2] Json stringified job data\n      ARGV[3] msgpacked options\n      Output:\n        jobId  - OK\n        -5     - Missing parent key\n]]\nlocal eventsKey = KEYS[8]\nlocal jobId\nlocal jobIdKey\nlocal rcall = redis.call\nlocal args = cmsgpack.unpack(ARGV[1])\nlocal data = ARGV[2]\nlocal opts = cmsgpack.unpack(ARGV[3])\nlocal parentKey = args[5]\nlocal parent = args[8]\nlocal repeatJobKey = args[9]\nlocal deduplicationKey = args[10]\nlocal parentData\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to debounce a job.\n]]\n-- Includes\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\nlocal function deduplicateJob(deduplicationOpts, jobId, delayedKey, deduplicationKey, eventsKey, maxEvents,\n    prefix)\n    local deduplicationId = deduplicationOpts and deduplicationOpts[\'id\']\n    if deduplicationId then\n        local ttl = deduplicationOpts[\'ttl\']\n        if deduplicationOpts[\'replace\'] and ttl and ttl > 0 then\n            local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n            if currentDebounceJobId then\n                if rcall("ZREM", delayedKey, currentDebounceJobId) > 0 then\n                    removeJobKeys(prefix .. currentDebounceJobId)\n                    rcall("XADD", eventsKey, "*", "event", "removed", "jobId", currentDebounceJobId,\n                        "prev", "delayed")\n                    if deduplicationOpts[\'extend\'] then\n                        rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                    else\n                        rcall(\'SET\', deduplicationKey, jobId, \'KEEPTTL\')\n                    end\n                    rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                        jobId, "deduplicationId", deduplicationId, "deduplicatedJobId", currentDebounceJobId)\n                    return\n                else\n                    return currentDebounceJobId\n                end\n            else\n                rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                return\n            end\n        else\n            local ttl = deduplicationOpts[\'ttl\']\n            local deduplicationKeyExists\n            if ttl then\n                if deduplicationOpts[\'extend\'] then\n                    local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n                    if currentDebounceJobId then\n                        rcall(\'SET\', deduplicationKey, currentDebounceJobId, \'PX\', ttl)\n                        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "debounced",\n                            "jobId", currentDebounceJobId, "debounceId", deduplicationId)\n                        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                            currentDebounceJobId, "deduplicationId", deduplicationId, "deduplicatedJobId", jobId)\n                        return currentDebounceJobId\n                    else\n                        rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                        return\n                    end\n                else\n                    deduplicationKeyExists = not rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl, \'NX\')\n                end\n            else\n                deduplicationKeyExists = not rcall(\'SET\', deduplicationKey, jobId, \'NX\')\n            end\n            if deduplicationKeyExists then\n                local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n                rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "debounced", "jobId",\n                    currentDebounceJobId, "debounceId", deduplicationId)\n                rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                    currentDebounceJobId, "deduplicationId", deduplicationId, "deduplicatedJobId", jobId)\n                return currentDebounceJobId\n            end\n        end\n    end\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to handle the case when job is duplicated.\n]]\n-- Includes\n--[[\n    This function is used to update the parent\'s dependencies if the job\n    is already completed and about to be ignored. The parent must get its\n    dependencies updated to avoid the parent job being stuck forever in \n    the waiting-children state.\n]]\n-- Includes\n--[[\n  Validate and move or add dependencies to parent.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized)\n  if no pending dependencies.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized) if needed.\n]]\n-- Includes\n--[[\n  Move parent to a wait status (wait, prioritized or delayed)\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\nlocal function moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    local parentWaitKey = parentQueueKey .. ":wait"\n    local parentPausedKey = parentQueueKey .. ":paused"\n    local parentActiveKey = parentQueueKey .. ":active"\n    local parentMetaKey = parentQueueKey .. ":meta"\n    local parentMarkerKey = parentQueueKey .. ":marker"\n    local jobAttributes = rcall("HMGET", parentKey, "priority", "delay")\n    local priority = tonumber(jobAttributes[1]) or 0\n    local delay = tonumber(jobAttributes[2]) or 0\n    if delay > 0 then\n        local delayedTimestamp = tonumber(timestamp) + delay\n        local score = delayedTimestamp * 0x1000\n        local parentDelayedKey = parentQueueKey .. ":delayed"\n        rcall("ZADD", parentDelayedKey, score, parentId)\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "delayed", "jobId", parentId, "delay",\n            delayedTimestamp)\n        addDelayMarkerIfNeeded(parentMarkerKey, parentDelayedKey)\n    else\n        if priority == 0 then\n            local parentTarget, isParentPausedOrMaxed = getTargetQueueList(parentMetaKey, parentActiveKey,\n                parentWaitKey, parentPausedKey)\n            addJobInTargetList(parentTarget, parentMarkerKey, "RPUSH", isParentPausedOrMaxed, parentId)\n        else\n            local isPausedOrMaxed = isQueuePausedOrMaxed(parentMetaKey, parentActiveKey)\n            addJobWithPriority(parentMarkerKey, parentQueueKey .. ":prioritized", priority, parentId,\n                parentQueueKey .. ":pc", isPausedOrMaxed)\n        end\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "waiting", "jobId", parentId, "prev",\n            "waiting-children")\n    end\nend\nlocal function moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  if rcall("EXISTS", parentKey) == 1 then\n    local parentWaitingChildrenKey = parentQueueKey .. ":waiting-children"\n    if rcall("ZSCORE", parentWaitingChildrenKey, parentId) then    \n      rcall("ZREM", parentWaitingChildrenKey, parentId)\n      moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    end\n  end\nend\nlocal function moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey,\n  parentId, timestamp)\n  local doNotHavePendingDependencies = rcall("SCARD", parentDependenciesKey) == 0\n  if doNotHavePendingDependencies then\n    moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  end\nend\nlocal function updateParentDepsIfNeeded(parentKey, parentQueueKey, parentDependenciesKey,\n  parentId, jobIdKey, returnvalue, timestamp )\n  local processedSet = parentKey .. ":processed"\n  rcall("HSET", processedSet, jobIdKey, returnvalue)\n  moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey, parentId, timestamp)\nend\nlocal function updateExistingJobsParent(parentKey, parent, parentData,\n                                        parentDependenciesKey, completedKey,\n                                        jobIdKey, jobId, timestamp)\n    if parentKey ~= nil then\n        if rcall("ZSCORE", completedKey, jobId) then\n            local returnvalue = rcall("HGET", jobIdKey, "returnvalue")\n            updateParentDepsIfNeeded(parentKey, parent[\'queueKey\'],\n                                     parentDependenciesKey, parent[\'id\'],\n                                     jobIdKey, returnvalue, timestamp)\n        else\n            if parentDependenciesKey ~= nil then\n                rcall("SADD", parentDependenciesKey, jobIdKey)\n            end\n        end\n        rcall("HMSET", jobIdKey, "parentKey", parentKey, "parent", parentData)\n    end\nend\nlocal function handleDuplicatedJob(jobKey, jobId, currentParentKey, currentParent,\n  parentData, parentDependenciesKey, completedKey, eventsKey, maxEvents, timestamp)\n  local existedParentKey = rcall("HGET", jobKey, "parentKey")\n  if not existedParentKey or existedParentKey == currentParentKey then\n    updateExistingJobsParent(currentParentKey, currentParent, parentData,\n      parentDependenciesKey, completedKey, jobKey,\n      jobId, timestamp)\n  else\n    if currentParentKey ~= nil and currentParentKey ~= existedParentKey\n      and (rcall("EXISTS", existedParentKey) == 1) then\n      return -7\n    end\n  end\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n    "duplicated", "jobId", jobId)\n  return jobId .. "" -- convert to string\nend\n--[[\n  Function to store a job\n]]\nlocal function storeJob(eventsKey, jobIdKey, jobId, name, data, opts, timestamp,\n                        parentKey, parentData, repeatJobKey)\n    local jsonOpts = cjson.encode(opts)\n    local delay = opts[\'delay\'] or 0\n    local priority = opts[\'priority\'] or 0\n    local debounceId = opts[\'de\'] and opts[\'de\'][\'id\']\n    local optionalValues = {}\n    if parentKey ~= nil then\n        table.insert(optionalValues, "parentKey")\n        table.insert(optionalValues, parentKey)\n        table.insert(optionalValues, "parent")\n        table.insert(optionalValues, parentData)\n    end\n    if repeatJobKey then\n        table.insert(optionalValues, "rjk")\n        table.insert(optionalValues, repeatJobKey)\n    end\n    if debounceId then\n        table.insert(optionalValues, "deid")\n        table.insert(optionalValues, debounceId)\n    end\n    rcall("HMSET", jobIdKey, "name", name, "data", data, "opts", jsonOpts,\n          "timestamp", timestamp, "delay", delay, "priority", priority,\n          unpack(optionalValues))\n    rcall("XADD", eventsKey, "*", "event", "added", "jobId", jobId, "name", name)\n    return delay, priority\nend\nif parentKey ~= nil then\n    if rcall("EXISTS", parentKey) ~= 1 then return -5 end\n    parentData = cjson.encode(parent)\nend\nlocal jobCounter = rcall("INCR", KEYS[4])\nlocal metaKey = KEYS[3]\nlocal maxEvents = getOrSetMaxEvents(metaKey)\nlocal parentDependenciesKey = args[7]\nlocal timestamp = args[4]\nif args[2] == "" then\n    jobId = jobCounter\n    jobIdKey = args[1] .. jobId\nelse\n    jobId = args[2]\n    jobIdKey = args[1] .. jobId\n    if rcall("EXISTS", jobIdKey) == 1 then\n        return handleDuplicatedJob(jobIdKey, jobId, parentKey, parent,\n            parentData, parentDependenciesKey, KEYS[5], eventsKey,\n            maxEvents, timestamp)\n    end\nend\nlocal deduplicationJobId = deduplicateJob(opts[\'de\'], jobId, KEYS[6],\n  deduplicationKey, eventsKey, maxEvents, args[1])\nif deduplicationJobId then\n  return deduplicationJobId\nend\n-- Store the job.\nstoreJob(eventsKey, jobIdKey, jobId, args[3], ARGV[2], opts, timestamp,\n         parentKey, parentData, repeatJobKey)\nlocal target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[7], KEYS[1], KEYS[2])\n-- LIFO or FIFO\nlocal pushCmd = opts[\'lifo\'] and \'RPUSH\' or \'LPUSH\'\naddJobInTargetList(target, KEYS[9], pushCmd, isPausedOrMaxed, jobId)\n-- Emit waiting event\nrcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "waiting",\n      "jobId", jobId)\n-- Check if this job is a child of another job, if so add it to the parents dependencies\nif parentDependenciesKey ~= nil then\n    rcall("SADD", parentDependenciesKey, jobIdKey)\nend\nreturn jobId .. "" -- convert to string\n',keys:9}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{changeDelay:()=>r});const r={name:"changeDelay",content:'--[[\n  Change job delay when it is in delayed set.\n  Input:\n    KEYS[1] delayed key\n    KEYS[2] meta key\n    KEYS[3] marker key\n    KEYS[4] events stream\n    ARGV[1] delay\n    ARGV[2] timestamp\n    ARGV[3] the id of the job\n    ARGV[4] job key\n  Output:\n    0 - OK\n   -1 - Missing job.\n   -3 - Job not in delayed set.\n  Events:\n    - delayed key.\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Bake in the job id first 12 bits into the timestamp\n  to guarantee correct execution order of delayed jobs\n  (up to 4096 jobs per given timestamp or 4096 jobs apart per timestamp)\n  WARNING: Jobs that are so far apart that they wrap around will cause FIFO to fail\n]]\nlocal function getDelayedScore(delayedKey, timestamp, delay)\n  local delayedTimestamp = (delay > 0 and (tonumber(timestamp) + delay)) or tonumber(timestamp)\n  local minScore = delayedTimestamp * 0x1000\n  local maxScore = (delayedTimestamp + 1 ) * 0x1000 - 1\n  local result = rcall("ZREVRANGEBYSCORE", delayedKey, maxScore,\n    minScore, "WITHSCORES","LIMIT", 0, 1)\n  if #result then\n    local currentMaxScore = tonumber(result[2])\n    if currentMaxScore ~= nil then\n      if currentMaxScore >= maxScore then\n        return maxScore, delayedTimestamp\n      else\n        return currentMaxScore + 1, delayedTimestamp\n      end\n    end\n  end\n  return minScore, delayedTimestamp\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\nif rcall("EXISTS", ARGV[4]) == 1 then\n  local jobId = ARGV[3]\n  local delay = tonumber(ARGV[1])\n  local score, delayedTimestamp = getDelayedScore(KEYS[1], ARGV[2], delay)\n  local numRemovedElements = rcall("ZREM", KEYS[1], jobId)\n  if numRemovedElements < 1 then\n    return -3\n  end\n  rcall("HSET", ARGV[4], "delay", delay)\n  rcall("ZADD", KEYS[1], score, jobId)\n  local maxEvents = getOrSetMaxEvents(KEYS[2])\n  rcall("XADD", KEYS[4], "MAXLEN", "~", maxEvents, "*", "event", "delayed",\n    "jobId", jobId, "delay", delayedTimestamp)\n  -- mark that a delayed job is available\n  addDelayMarkerIfNeeded(KEYS[3], KEYS[1])\n  return 0\nelse\n  return -1\nend',keys:4}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{changePriority:()=>r});const r={name:"changePriority",content:'--[[\n  Change job priority\n  Input:\n    KEYS[1] \'wait\',\n    KEYS[2] \'paused\'\n    KEYS[3] \'meta\'\n    KEYS[4] \'prioritized\'\n    KEYS[5] \'active\'\n    KEYS[6] \'pc\' priority counter\n    KEYS[7] \'marker\'\n    ARGV[1] priority value\n    ARGV[2] prefix key\n    ARGV[3] job id\n    ARGV[4] lifo\n    Output:\n       0  - OK\n      -1  - Missing job\n]]\nlocal jobId = ARGV[3]\nlocal jobKey = ARGV[2] .. jobId\nlocal priority = tonumber(ARGV[1])\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to push back job considering priority in front of same prioritized jobs.\n]]\nlocal function pushBackJobWithPriority(prioritizedKey, priority, jobId)\n  -- in order to put it at front of same prioritized jobs\n  -- we consider prioritized counter as 0\n  local score = priority * 0x100000000\n  rcall("ZADD", prioritizedKey, score, jobId)\nend\nlocal function reAddJobWithNewPriority( prioritizedKey, markerKey, targetKey,\n    priorityCounter, lifo, priority, jobId, isPausedOrMaxed)\n    if priority == 0 then\n        local pushCmd = lifo and \'RPUSH\' or \'LPUSH\'\n        addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n    else\n        if lifo then\n            pushBackJobWithPriority(prioritizedKey, priority, jobId)\n        else\n            addJobWithPriority(markerKey, prioritizedKey, priority, jobId,\n                priorityCounter, isPausedOrMaxed)\n        end\n    end\nend\nif rcall("EXISTS", jobKey) == 1 then\n    local metaKey = KEYS[3]\n    local target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[5], KEYS[1], KEYS[2])\n    local prioritizedKey = KEYS[4]\n    local priorityCounterKey = KEYS[6]\n    local markerKey = KEYS[7]\n    -- Re-add with the new priority\n    if rcall("ZREM", prioritizedKey, jobId) > 0 then\n        reAddJobWithNewPriority( prioritizedKey, markerKey, target,\n            priorityCounterKey, ARGV[4] == \'1\', priority, jobId, isPausedOrMaxed)\n    elseif rcall("LREM", target, -1, jobId) > 0 then\n        reAddJobWithNewPriority( prioritizedKey, markerKey, target,\n            priorityCounterKey, ARGV[4] == \'1\', priority, jobId, isPausedOrMaxed)\n    end\n    rcall("HSET", jobKey, "priority", priority)\n    return 0\nelse\n    return -1\nend\n',keys:7}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{cleanJobsInSet:()=>r});const r={name:"cleanJobsInSet",content:'--[[\n  Remove jobs from the specific set.\n  Input:\n    KEYS[1]  set key,\n    KEYS[2]  events stream key\n    KEYS[3]  repeat key\n    ARGV[1]  jobKey prefix\n    ARGV[2]  timestamp\n    ARGV[3]  limit the number of jobs to be removed. 0 is unlimited\n    ARGV[4]  set name, can be any of \'wait\', \'active\', \'paused\', \'delayed\', \'completed\', or \'failed\'\n]]\nlocal rcall = redis.call\nlocal repeatKey = KEYS[3]\nlocal rangeStart = 0\nlocal rangeEnd = -1\nlocal limit = tonumber(ARGV[3])\n-- If we\'re only deleting _n_ items, avoid retrieving all items\n-- for faster performance\n--\n-- Start from the tail of the list, since that\'s where oldest elements\n-- are generally added for FIFO lists\nif limit > 0 then\n  rangeStart = -1 - limit + 1\n  rangeEnd = -1\nend\n-- Includes\n--[[\n  Function to clean job list.\n  Returns jobIds and deleted count number.\n]]\n-- Includes\n--[[\n  Function to get the latest saved timestamp.\n]]\nlocal function getTimestamp(jobKey, attributes)\n  if #attributes == 1 then\n    return rcall("HGET", jobKey, attributes[1])\n  end\n  local jobTs\n  for _, ts in ipairs(rcall("HMGET", jobKey, unpack(attributes))) do\n    if (ts) then\n      jobTs = ts\n      break\n    end\n  end\n  return jobTs\nend\n--[[\n  Function to check if the job belongs to a job scheduler and\n  current delayed job matches with jobId\n]]\nlocal function isJobSchedulerJob(jobId, jobKey, jobSchedulersKey)\n  local repeatJobKey = rcall("HGET", jobKey, "rjk")\n  if repeatJobKey  then\n    local prevMillis = rcall("ZSCORE", jobSchedulersKey, repeatJobKey)\n    if prevMillis then\n      local currentDelayedJobId = "repeat:" .. repeatJobKey .. ":" .. prevMillis\n      return jobId == currentDelayedJobId\n    end\n  end\n  return false\nend\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove deduplication key if needed\n  when a job is being removed.\n]]\nlocal function removeDeduplicationKeyIfNeededOnRemoval(prefixKey,\n  jobKey, jobId)\n  local deduplicationId = rcall("HGET", jobKey, "deid")\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local currentJobId = rcall(\'GET\', deduplicationKey)\n    if currentJobId and currentJobId == jobId then\n      return rcall("DEL", deduplicationKey)\n    end\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDeduplicationKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDeduplicationKey then\n    removeDeduplicationKeyIfNeededOnRemoval(baseKey, jobKey, jobId)\n  end\n  removeJobKeys(jobKey)\nend\nlocal function cleanList(listKey, jobKeyPrefix, rangeStart, rangeEnd,\n  timestamp, isWaiting, jobSchedulersKey)\n  local jobs = rcall("LRANGE", listKey, rangeStart, rangeEnd)\n  local deleted = {}\n  local deletedCount = 0\n  local jobTS\n  local deletionMarker = \'\'\n  local jobIdsLen = #jobs\n  for i, job in ipairs(jobs) do\n    if limit > 0 and deletedCount >= limit then\n      break\n    end\n    local jobKey = jobKeyPrefix .. job\n    if (isWaiting or rcall("EXISTS", jobKey .. ":lock") == 0) and\n      not isJobSchedulerJob(job, jobKey, jobSchedulersKey) then\n      -- Find the right timestamp of the job to compare to maxTimestamp:\n      -- * finishedOn says when the job was completed, but it isn\'t set unless the job has actually completed\n      -- * processedOn represents when the job was last attempted, but it doesn\'t get populated until\n      --   the job is first tried\n      -- * timestamp is the original job submission time\n      -- Fetch all three of these (in that order) and use the first one that is set so that we\'ll leave jobs\n      -- that have been active within the grace period:\n      jobTS = getTimestamp(jobKey, {"finishedOn", "processedOn", "timestamp"})\n      if (not jobTS or jobTS <= timestamp) then\n        -- replace the entry with a deletion marker; the actual deletion will\n        -- occur at the end of the script\n        rcall("LSET", listKey, rangeEnd - jobIdsLen + i, deletionMarker)\n        removeJob(job, true, jobKeyPrefix, true --[[remove debounce key]])\n        deletedCount = deletedCount + 1\n        table.insert(deleted, job)\n      end\n    end\n  end\n  rcall("LREM", listKey, 0, deletionMarker)\n  return {deleted, deletedCount}\nend\n--[[\n  Function to clean job set.\n  Returns jobIds and deleted count number.\n]] \n-- Includes\n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\n--[[\n  We use ZRANGEBYSCORE to make the case where we\'re deleting a limited number\n  of items in a sorted set only run a single iteration. If we simply used\n  ZRANGE, we may take a long time traversing through jobs that are within the\n  grace period.\n]]\nlocal function getJobsInZset(zsetKey, rangeEnd, limit)\n  if limit > 0 then\n    return rcall("ZRANGEBYSCORE", zsetKey, 0, rangeEnd, "LIMIT", 0, limit)\n  else\n    return rcall("ZRANGEBYSCORE", zsetKey, 0, rangeEnd)\n  end\nend\nlocal function cleanSet(\n    setKey,\n    jobKeyPrefix,\n    rangeEnd,\n    timestamp,\n    limit,\n    attributes,\n    isFinished,\n    jobSchedulersKey)\n    local jobs = getJobsInZset(setKey, rangeEnd, limit)\n    local deleted = {}\n    local deletedCount = 0\n    local jobTS\n    for i, job in ipairs(jobs) do\n        if limit > 0 and deletedCount >= limit then\n            break\n        end\n        local jobKey = jobKeyPrefix .. job\n        -- Extract a Job Scheduler Id from jobId ("repeat:job-scheduler-id:millis") \n        -- and check if it is in the scheduled jobs\n        if not (jobSchedulersKey and isJobSchedulerJob(job, jobKey, jobSchedulersKey)) then\n            if isFinished then\n                removeJob(job, true, jobKeyPrefix, true --[[remove debounce key]] )\n                deletedCount = deletedCount + 1\n                table.insert(deleted, job)\n            else\n                -- * finishedOn says when the job was completed, but it isn\'t set unless the job has actually completed\n                jobTS = getTimestamp(jobKey, attributes)\n                if (not jobTS or jobTS <= timestamp) then\n                    removeJob(job, true, jobKeyPrefix, true --[[remove debounce key]] )\n                    deletedCount = deletedCount + 1\n                    table.insert(deleted, job)\n                end\n            end\n        end\n    end\n    if (#deleted > 0) then\n        for from, to in batches(#deleted, 7000) do\n            rcall("ZREM", setKey, unpack(deleted, from, to))\n        end\n    end\n    return {deleted, deletedCount}\nend\nlocal result\nif ARGV[4] == "active" then\n  result = cleanList(KEYS[1], ARGV[1], rangeStart, rangeEnd, ARGV[2], false --[[ hasFinished ]],\n                      repeatKey)\nelseif ARGV[4] == "delayed" then\n  rangeEnd = "+inf"\n  result = cleanSet(KEYS[1], ARGV[1], rangeEnd, ARGV[2], limit,\n                    {"processedOn", "timestamp"}, false  --[[ hasFinished ]], repeatKey)\nelseif ARGV[4] == "prioritized" then\n  rangeEnd = "+inf"\n  result = cleanSet(KEYS[1], ARGV[1], rangeEnd, ARGV[2], limit,\n                    {"timestamp"}, false  --[[ hasFinished ]], repeatKey)\nelseif ARGV[4] == "wait" or ARGV[4] == "paused" then\n  result = cleanList(KEYS[1], ARGV[1], rangeStart, rangeEnd, ARGV[2], true --[[ hasFinished ]],\n                      repeatKey)\nelse\n  rangeEnd = ARGV[2]\n  -- No need to pass repeat key as in that moment job won\'t be related to a job scheduler\n  result = cleanSet(KEYS[1], ARGV[1], rangeEnd, ARGV[2], limit,\n                    {"finishedOn"}, true  --[[ hasFinished ]])\nend\nrcall("XADD", KEYS[2], "*", "event", "cleaned", "count", result[2])\nreturn result[1]\n',keys:3}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{drain:()=>r});const r={name:"drain",content:'--[[\n  Drains the queue, removes all jobs that are waiting\n  or delayed, but not active, completed or failed\n  Input:\n    KEYS[1] \'wait\',\n    KEYS[2] \'paused\'\n    KEYS[3] \'delayed\'\n    KEYS[4] \'prioritized\'\n    KEYS[5] \'jobschedulers\' (repeat)\n    ARGV[1]  queue key prefix\n    ARGV[2]  should clean delayed jobs\n]]\nlocal rcall = redis.call\nlocal queueBaseKey = ARGV[1]\n--[[\n  Functions to remove jobs.\n]]\n-- Includes\n--[[\n  Function to filter out jobs to ignore from a table.\n]]\nlocal function filterOutJobsToIgnore(jobs, jobsToIgnore)\n  local filteredJobs = {}\n  for i = 1, #jobs do\n    if not jobsToIgnore[jobs[i]] then\n      table.insert(filteredJobs, jobs[i])\n    end\n  end\n  return filteredJobs\nend\n--[[\n  Functions to remove jobs.\n]]\n-- Includes\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove deduplication key if needed\n  when a job is being removed.\n]]\nlocal function removeDeduplicationKeyIfNeededOnRemoval(prefixKey,\n  jobKey, jobId)\n  local deduplicationId = rcall("HGET", jobKey, "deid")\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local currentJobId = rcall(\'GET\', deduplicationKey)\n    if currentJobId and currentJobId == jobId then\n      return rcall("DEL", deduplicationKey)\n    end\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDeduplicationKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDeduplicationKey then\n    removeDeduplicationKeyIfNeededOnRemoval(baseKey, jobKey, jobId)\n  end\n  removeJobKeys(jobKey)\nend\nlocal function removeJobs(keys, hard, baseKey, max)\n  for i, key in ipairs(keys) do\n    removeJob(key, hard, baseKey, true --[[remove debounce key]])\n  end\n  return max - #keys\nend\nlocal function getListItems(keyName, max)\n  return rcall(\'LRANGE\', keyName, 0, max - 1)\nend\nlocal function removeListJobs(keyName, hard, baseKey, max, jobsToIgnore)\n  local jobs = getListItems(keyName, max)\n  if jobsToIgnore then\n    jobs = filterOutJobsToIgnore(jobs, jobsToIgnore)\n  end\n  local count = removeJobs(jobs, hard, baseKey, max)\n  rcall("LTRIM", keyName, #jobs, -1)\n  return count\nend\n-- Includes\n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\n--[[\n  Function to get ZSet items.\n]]\nlocal function getZSetItems(keyName, max)\n  return rcall(\'ZRANGE\', keyName, 0, max - 1)\nend\nlocal function removeZSetJobs(keyName, hard, baseKey, max, jobsToIgnore)\n  local jobs = getZSetItems(keyName, max)\n  if jobsToIgnore then\n    jobs = filterOutJobsToIgnore(jobs, jobsToIgnore)\n  end\n  local count = removeJobs(jobs, hard, baseKey, max)\n  if(#jobs > 0) then\n    for from, to in batches(#jobs, 7000) do\n      rcall("ZREM", keyName, unpack(jobs, from, to))\n    end\n  end\n  return count\nend\n-- We must not remove delayed jobs if they are associated to a job scheduler.\nlocal scheduledJobs = {}\nlocal jobSchedulers = rcall("ZRANGE", KEYS[5], 0, -1, "WITHSCORES")\n-- For every job scheduler, get the current delayed job id.\nfor i = 1, #jobSchedulers, 2 do\n    local jobSchedulerId = jobSchedulers[i]\n    local jobSchedulerMillis = jobSchedulers[i + 1]\n    local delayedJobId = "repeat:" .. jobSchedulerId .. ":" .. jobSchedulerMillis\n    scheduledJobs[delayedJobId] = true\nend\nremoveListJobs(KEYS[1], true, queueBaseKey, 0, scheduledJobs) -- wait\nremoveListJobs(KEYS[2], true, queueBaseKey, 0, scheduledJobs) -- paused\nif ARGV[2] == "1" then\n  removeZSetJobs(KEYS[3], true, queueBaseKey, 0, scheduledJobs) -- delayed\nend\nremoveZSetJobs(KEYS[4], true, queueBaseKey, 0, scheduledJobs) -- prioritized\n',keys:5}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{extendLock:()=>r});const r={name:"extendLock",content:'--[[\n  Extend lock and removes the job from the stalled set.\n  Input:\n    KEYS[1] \'lock\',\n    KEYS[2] \'stalled\'\n    ARGV[1]  token\n    ARGV[2]  lock duration in milliseconds\n    ARGV[3]  jobid\n  Output:\n    "1" if lock extented succesfully.\n]]\nlocal rcall = redis.call\nif rcall("GET", KEYS[1]) == ARGV[1] then\n  --   if rcall("SET", KEYS[1], ARGV[1], "PX", ARGV[2], "XX") then\n  if rcall("SET", KEYS[1], ARGV[1], "PX", ARGV[2]) then\n    rcall("SREM", KEYS[2], ARGV[3])\n    return 1\n  end\nend\nreturn 0\n',keys:2}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{extendLocks:()=>r});const r={name:"extendLocks",content:'--[[\n  Extend locks for multiple jobs and remove them from the stalled set if successful.\n  Return the list of job IDs for which the operation failed.\n  KEYS[1] = stalledKey\n  ARGV[1] = baseKey\n  ARGV[2] = tokens\n  ARGV[3] = jobIds\n  ARGV[4] = lockDuration (ms)\n  Output:\n    An array of failed job IDs. If empty, all succeeded.\n]]\nlocal rcall = redis.call\nlocal stalledKey = KEYS[1]\nlocal baseKey = ARGV[1]\nlocal tokens = cmsgpack.unpack(ARGV[2])\nlocal jobIds = cmsgpack.unpack(ARGV[3])\nlocal lockDuration = ARGV[4]\nlocal jobCount = #jobIds\nlocal failedJobs = {}\nfor i = 1, jobCount, 1 do\n    local lockKey = baseKey .. jobIds[i] .. \':lock\'\n    local jobId = jobIds[i]\n    local token = tokens[i]\n    local currentToken = rcall("GET", lockKey)\n    if currentToken == token then\n        local setResult = rcall("SET", lockKey, token, "PX", lockDuration)\n        if setResult then\n            rcall("SREM", stalledKey, jobId)\n        else\n            table.insert(failedJobs, jobId)\n        end\n    else\n        table.insert(failedJobs, jobId)\n    end\nend\nreturn failedJobs\n',keys:1}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{getCounts:()=>r});const r={name:"getCounts",content:'--[[\n  Get counts per provided states\n    Input:\n      KEYS[1]    \'prefix\'\n      ARGV[1...] types\n]]\nlocal rcall = redis.call;\nlocal prefix = KEYS[1]\nlocal results = {}\nfor i = 1, #ARGV do\n  local stateKey = prefix .. ARGV[i]\n  if ARGV[i] == "wait" or ARGV[i] == "paused" then\n    -- Markers in waitlist DEPRECATED in v5: Remove in v6.\n    local marker = rcall("LINDEX", stateKey, -1)\n    if marker and string.sub(marker, 1, 2) == "0:" then\n      local count = rcall("LLEN", stateKey)\n      if count > 1 then\n        rcall("RPOP", stateKey)\n        results[#results+1] = count-1\n      else\n        results[#results+1] = 0\n      end\n    else\n      results[#results+1] = rcall("LLEN", stateKey)\n    end\n  elseif ARGV[i] == "active" then\n    results[#results+1] = rcall("LLEN", stateKey)\n  else\n    results[#results+1] = rcall("ZCARD", stateKey)\n  end\nend\nreturn results\n',keys:1}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{getCountsPerPriority:()=>r});const r={name:"getCountsPerPriority",content:'--[[\n  Get counts per provided states\n    Input:\n      KEYS[1] wait key\n      KEYS[2] paused key\n      KEYS[3] meta key\n      KEYS[4] prioritized key\n      ARGV[1...] priorities\n]]\nlocal rcall = redis.call\nlocal results = {}\nlocal waitKey = KEYS[1]\nlocal pausedKey = KEYS[2]\nlocal prioritizedKey = KEYS[4]\n-- Includes\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePaused(queueMetaKey)\n  return rcall("HEXISTS", queueMetaKey, "paused") == 1\nend\nfor i = 1, #ARGV do\n  local priority = tonumber(ARGV[i])\n  if priority == 0 then\n    if isQueuePaused(KEYS[3]) then\n      results[#results+1] = rcall("LLEN", pausedKey)\n    else\n      results[#results+1] = rcall("LLEN", waitKey)\n    end\n  else\n    results[#results+1] = rcall("ZCOUNT", prioritizedKey,\n      priority * 0x100000000, (priority + 1)  * 0x100000000 - 1)\n  end\nend\nreturn results\n',keys:4}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{getDependencyCounts:()=>r});const r={name:"getDependencyCounts",content:'--[[\n  Get counts per child states\n    Input:\n      KEYS[1]    processed key\n      KEYS[2]    unprocessed key\n      KEYS[3]    ignored key\n      KEYS[4]    failed key\n      ARGV[1...] types\n]]\nlocal rcall = redis.call;\nlocal processedKey = KEYS[1]\nlocal unprocessedKey = KEYS[2]\nlocal ignoredKey = KEYS[3]\nlocal failedKey = KEYS[4]\nlocal results = {}\nfor i = 1, #ARGV do\n  if ARGV[i] == "processed" then\n    results[#results+1] = rcall("HLEN", processedKey)\n  elseif ARGV[i] == "unprocessed" then\n    results[#results+1] = rcall("SCARD", unprocessedKey)\n  elseif ARGV[i] == "ignored" then\n    results[#results+1] = rcall("HLEN", ignoredKey)\n  else\n    results[#results+1] = rcall("ZCARD", failedKey)\n  end\nend\nreturn results\n',keys:4}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{getJobScheduler:()=>r});const r={name:"getJobScheduler",content:'--[[\n  Get job scheduler record.\n  Input:\n    KEYS[1] \'repeat\' key\n    ARGV[1] id\n]]\nlocal rcall = redis.call\nlocal jobSchedulerKey = KEYS[1] .. ":" .. ARGV[1]\nlocal score = rcall("ZSCORE", KEYS[1], ARGV[1])\nif score then\n  return {rcall("HGETALL", jobSchedulerKey), score} -- get job data\nend\nreturn {nil, nil}\n',keys:1}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{getRanges:()=>r});const r={name:"getRanges",content:'--[[\n  Get job ids per provided states\n    Input:\n      KEYS[1]    \'prefix\'\n      ARGV[1]    start\n      ARGV[2]    end\n      ARGV[3]    asc\n      ARGV[4...] types\n]]\nlocal rcall = redis.call\nlocal prefix = KEYS[1]\nlocal rangeStart = tonumber(ARGV[1])\nlocal rangeEnd = tonumber(ARGV[2])\nlocal asc = ARGV[3]\nlocal results = {}\nlocal function getRangeInList(listKey, asc, rangeStart, rangeEnd, results)\n  if asc == "1" then\n    local modifiedRangeStart\n    local modifiedRangeEnd\n    if rangeStart == -1 then\n      modifiedRangeStart = 0\n    else\n      modifiedRangeStart = -(rangeStart + 1)\n    end\n    if rangeEnd == -1 then\n      modifiedRangeEnd = 0\n    else\n      modifiedRangeEnd = -(rangeEnd + 1)\n    end\n    results[#results+1] = rcall("LRANGE", listKey,\n      modifiedRangeEnd,\n      modifiedRangeStart)\n  else\n    results[#results+1] = rcall("LRANGE", listKey, rangeStart, rangeEnd)\n  end\nend\nfor i = 4, #ARGV do\n  local stateKey = prefix .. ARGV[i]\n  if ARGV[i] == "wait" or ARGV[i] == "paused" then\n    -- Markers in waitlist DEPRECATED in v5: Remove in v6.\n    local marker = rcall("LINDEX", stateKey, -1)\n    if marker and string.sub(marker, 1, 2) == "0:" then\n      local count = rcall("LLEN", stateKey)\n      if count > 1 then\n        rcall("RPOP", stateKey)\n        getRangeInList(stateKey, asc, rangeStart, rangeEnd, results)\n      else\n        results[#results+1] = {}\n      end\n    else\n      getRangeInList(stateKey, asc, rangeStart, rangeEnd, results)\n    end\n  elseif ARGV[i] == "active" then\n    getRangeInList(stateKey, asc, rangeStart, rangeEnd, results)\n  else\n    if asc == "1" then\n      results[#results+1] = rcall("ZRANGE", stateKey, rangeStart, rangeEnd)\n    else\n      results[#results+1] = rcall("ZREVRANGE", stateKey, rangeStart, rangeEnd)\n    end\n  end\nend\nreturn results\n',keys:1}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{getRateLimitTtl:()=>r});const r={name:"getRateLimitTtl",content:'--[[\n  Get rate limit ttl\n    Input:\n      KEYS[1] \'limiter\'\n      ARGV[1] maxJobs\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to get current rate limit ttl.\n]]\nlocal function getRateLimitTTL(maxJobs, rateLimiterKey)\n  if maxJobs and maxJobs <= tonumber(rcall("GET", rateLimiterKey) or 0) then\n    local pttl = rcall("PTTL", rateLimiterKey)\n    if pttl == 0 then\n      rcall("DEL", rateLimiterKey)\n    end\n    if pttl > 0 then\n      return pttl\n    end\n  end\n  return 0\nend\nlocal rateLimiterKey = KEYS[1]\nif ARGV[1] ~= "0" then\n  return getRateLimitTTL(tonumber(ARGV[1]), rateLimiterKey)\nelse\n  return rcall("PTTL", rateLimiterKey)\nend\n',keys:1}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{getState:()=>r});const r={name:"getState",content:'--[[\n  Get a job state\n  Input: \n    KEYS[1] \'completed\' key,\n    KEYS[2] \'failed\' key\n    KEYS[3] \'delayed\' key\n    KEYS[4] \'active\' key\n    KEYS[5] \'wait\' key\n    KEYS[6] \'paused\' key\n    KEYS[7] \'waiting-children\' key\n    KEYS[8] \'prioritized\' key\n    ARGV[1] job id\n  Output:\n    \'completed\'\n    \'failed\'\n    \'delayed\'\n    \'active\'\n    \'prioritized\'\n    \'waiting\'\n    \'waiting-children\'\n    \'unknown\'\n]]\nlocal rcall = redis.call\nif rcall("ZSCORE", KEYS[1], ARGV[1]) then\n  return "completed"\nend\nif rcall("ZSCORE", KEYS[2], ARGV[1]) then\n  return "failed"\nend\nif rcall("ZSCORE", KEYS[3], ARGV[1]) then\n  return "delayed"\nend\nif rcall("ZSCORE", KEYS[8], ARGV[1]) then\n  return "prioritized"\nend\n-- Includes\n--[[\n  Functions to check if a item belongs to a list.\n]]\nlocal function checkItemInList(list, item)\n  for _, v in pairs(list) do\n    if v == item then\n      return 1\n    end\n  end\n  return nil\nend\nlocal active_items = rcall("LRANGE", KEYS[4] , 0, -1)\nif checkItemInList(active_items, ARGV[1]) ~= nil then\n  return "active"\nend\nlocal wait_items = rcall("LRANGE", KEYS[5] , 0, -1)\nif checkItemInList(wait_items, ARGV[1]) ~= nil then\n  return "waiting"\nend\nlocal paused_items = rcall("LRANGE", KEYS[6] , 0, -1)\nif checkItemInList(paused_items, ARGV[1]) ~= nil then\n  return "waiting"\nend\nif rcall("ZSCORE", KEYS[7], ARGV[1]) then\n  return "waiting-children"\nend\nreturn "unknown"\n',keys:8}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{getStateV2:()=>r});const r={name:"getStateV2",content:'--[[\n  Get a job state\n  Input: \n    KEYS[1] \'completed\' key,\n    KEYS[2] \'failed\' key\n    KEYS[3] \'delayed\' key\n    KEYS[4] \'active\' key\n    KEYS[5] \'wait\' key\n    KEYS[6] \'paused\' key\n    KEYS[7] \'waiting-children\' key\n    KEYS[8] \'prioritized\' key\n    ARGV[1] job id\n  Output:\n    \'completed\'\n    \'failed\'\n    \'delayed\'\n    \'active\'\n    \'waiting\'\n    \'waiting-children\'\n    \'unknown\'\n]]\nlocal rcall = redis.call\nif rcall("ZSCORE", KEYS[1], ARGV[1]) then\n  return "completed"\nend\nif rcall("ZSCORE", KEYS[2], ARGV[1]) then\n  return "failed"\nend\nif rcall("ZSCORE", KEYS[3], ARGV[1]) then\n  return "delayed"\nend\nif rcall("ZSCORE", KEYS[8], ARGV[1]) then\n  return "prioritized"\nend\nif rcall("LPOS", KEYS[4] , ARGV[1]) then\n  return "active"\nend\nif rcall("LPOS", KEYS[5] , ARGV[1]) then\n  return "waiting"\nend\nif rcall("LPOS", KEYS[6] , ARGV[1]) then\n  return "waiting"\nend\nif rcall("ZSCORE", KEYS[7] , ARGV[1]) then\n  return "waiting-children"\nend\nreturn "unknown"\n',keys:8}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{isFinished:()=>r});const r={name:"isFinished",content:'--[[\n  Checks if a job is finished (.i.e. is in the completed or failed set)\n  Input: \n    KEYS[1] completed key\n    KEYS[2] failed key\n    KEYS[3] job key\n    ARGV[1] job id\n    ARGV[2] return value?\n  Output:\n    0 - Not finished.\n    1 - Completed.\n    2 - Failed.\n   -1 - Missing job. \n]]\nlocal rcall = redis.call\nif rcall("EXISTS", KEYS[3]) ~= 1 then\n  if ARGV[2] == "1" then\n    return {-1,"Missing key for job " .. KEYS[3] .. ". isFinished"}\n  end  \n  return -1\nend\nif rcall("ZSCORE", KEYS[1], ARGV[1]) then\n  if ARGV[2] == "1" then\n    local returnValue = rcall("HGET", KEYS[3], "returnvalue")\n    return {1,returnValue}\n  end\n  return 1\nend\nif rcall("ZSCORE", KEYS[2], ARGV[1]) then\n  if ARGV[2] == "1" then\n    local failedReason = rcall("HGET", KEYS[3], "failedReason")\n    return {2,failedReason}\n  end\n  return 2\nend\nif ARGV[2] == "1" then\n  return {0}\nend\nreturn 0\n',keys:3}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{isJobInList:()=>r});const r={name:"isJobInList",content:'--[[\n  Checks if job is in a given list.\n  Input:\n    KEYS[1]\n    ARGV[1]\n  Output:\n    1 if element found in the list.\n]]\n-- Includes\n--[[\n  Functions to check if a item belongs to a list.\n]]\nlocal function checkItemInList(list, item)\n  for _, v in pairs(list) do\n    if v == item then\n      return 1\n    end\n  end\n  return nil\nend\nlocal items = redis.call("LRANGE", KEYS[1] , 0, -1)\nreturn checkItemInList(items, ARGV[1])\n',keys:1}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{isMaxed:()=>r});const r={name:"isMaxed",content:'--[[\n  Checks if queue is maxed.\n  Input:\n    KEYS[1] meta key\n    KEYS[2] active key\n  Output:\n    1 if element found in the list.\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to check if queue is maxed or not.\n]]\nlocal function isQueueMaxed(queueMetaKey, activeKey)\n  local maxConcurrency = rcall("HGET", queueMetaKey, "concurrency")\n  if maxConcurrency then\n    local activeCount = rcall("LLEN", activeKey)\n    if activeCount >= tonumber(maxConcurrency) then\n      return true\n    end\n  end\n  return false\nend\nreturn isQueueMaxed(KEYS[1], KEYS[2])\n',keys:2}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{moveJobFromActiveToWait:()=>r});const r={name:"moveJobFromActiveToWait",content:'--[[\n  Function to move job from active state to wait.\n  Input:\n    KEYS[1]  active key\n    KEYS[2]  wait key\n    KEYS[3]  stalled key\n    KEYS[4]  paused key\n    KEYS[5]  meta key\n    KEYS[6]  limiter key\n    KEYS[7]  prioritized key\n    KEYS[8]  marker key\n    KEYS[9] event key\n    ARGV[1] job id\n    ARGV[2] lock token\n    ARGV[3] job id key\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to push back job considering priority in front of same prioritized jobs.\n]]\nlocal function pushBackJobWithPriority(prioritizedKey, priority, jobId)\n  -- in order to put it at front of same prioritized jobs\n  -- we consider prioritized counter as 0\n  local score = priority * 0x100000000\n  rcall("ZADD", prioritizedKey, score, jobId)\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function removeLock(jobKey, stalledKey, token, jobId)\n  if token ~= "0" then\n    local lockKey = jobKey .. \':lock\'\n    local lockToken = rcall("GET", lockKey)\n    if lockToken == token then\n      rcall("DEL", lockKey)\n      rcall("SREM", stalledKey, jobId)\n    else\n      if lockToken then\n        -- Lock exists but token does not match\n        return -6\n      else\n        -- Lock is missing completely\n        return -2\n      end\n    end\n  end\n  return 0\nend\nlocal jobId = ARGV[1]\nlocal token = ARGV[2]\nlocal jobKey = ARGV[3]\nif rcall("EXISTS", jobKey) == 0 then\n  return -1\nend\nlocal errorCode = removeLock(jobKey, KEYS[3], token, jobId)\nif errorCode < 0 then\n  return errorCode\nend\nlocal metaKey = KEYS[5]\nlocal removed = rcall("LREM", KEYS[1], 1, jobId)\nif removed > 0 then\n  local target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[1], KEYS[2], KEYS[4])\n  local priority = tonumber(rcall("HGET", ARGV[3], "priority")) or 0\n  if priority > 0 then\n    pushBackJobWithPriority(KEYS[7], priority, jobId)\n  else\n    addJobInTargetList(target, KEYS[8], "RPUSH", isPausedOrMaxed, jobId)\n  end\n  local maxEvents = getOrSetMaxEvents(metaKey)\n  -- Emit waiting event\n  rcall("XADD", KEYS[9], "MAXLEN", "~", maxEvents, "*", "event", "waiting",\n    "jobId", jobId, "prev", "active")\nend\nlocal pttl = rcall("PTTL", KEYS[6])\nif pttl > 0 then\n  return pttl\nelse\n  return 0\nend\n',keys:9}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{moveJobsToWait:()=>r});const r={name:"moveJobsToWait",content:'--[[\n  Move completed, failed or delayed jobs to wait.\n  Note: Does not support jobs with priorities.\n  Input:\n    KEYS[1] base key\n    KEYS[2] events stream\n    KEYS[3] state key (failed, completed, delayed)\n    KEYS[4] \'wait\'\n    KEYS[5] \'paused\'\n    KEYS[6] \'meta\'\n    KEYS[7] \'active\'\n    KEYS[8] \'marker\'\n    ARGV[1] count\n    ARGV[2] timestamp\n    ARGV[3] prev state\n  Output:\n    1  means the operation is not completed\n    0  means the operation is completed\n]]\nlocal maxCount = tonumber(ARGV[1])\nlocal timestamp = tonumber(ARGV[2])\nlocal rcall = redis.call;\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal metaKey = KEYS[6]\nlocal target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[7], KEYS[4], KEYS[5])\nlocal jobs = rcall(\'ZRANGEBYSCORE\', KEYS[3], 0, timestamp, \'LIMIT\', 0, maxCount)\nif (#jobs > 0) then\n    if ARGV[3] == "failed" then\n        for i, key in ipairs(jobs) do\n            local jobKey = KEYS[1] .. key\n            rcall("HDEL", jobKey, "finishedOn", "processedOn", "failedReason")\n        end\n    elseif ARGV[3] == "completed" then\n        for i, key in ipairs(jobs) do\n            local jobKey = KEYS[1] .. key\n            rcall("HDEL", jobKey, "finishedOn", "processedOn", "returnvalue")\n        end\n    end\n    local maxEvents = getOrSetMaxEvents(metaKey)\n    for i, key in ipairs(jobs) do\n        -- Emit waiting event\n        rcall("XADD", KEYS[2], "MAXLEN", "~", maxEvents, "*", "event",\n              "waiting", "jobId", key, "prev", ARGV[3]);\n    end\n    for from, to in batches(#jobs, 7000) do\n        rcall("ZREM", KEYS[3], unpack(jobs, from, to))\n        rcall("LPUSH", target, unpack(jobs, from, to))\n    end\n    addBaseMarkerIfNeeded(KEYS[8], isPausedOrMaxed)\nend\nmaxCount = maxCount - #jobs\nif (maxCount <= 0) then return 1 end\nreturn 0\n',keys:8}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{moveStalledJobsToWait:()=>r});const r={name:"moveStalledJobsToWait",content:'--[[\n  Move stalled jobs to wait.\n    Input:\n      KEYS[1] \'stalled\' (SET)\n      KEYS[2] \'wait\',   (LIST)\n      KEYS[3] \'active\', (LIST)\n      KEYS[4] \'stalled-check\', (KEY)\n      KEYS[5] \'meta\', (KEY)\n      KEYS[6] \'paused\', (LIST)\n      KEYS[7] \'marker\'\n      KEYS[8] \'event stream\' (STREAM)\n      ARGV[1]  Max stalled job count\n      ARGV[2]  queue.toKey(\'\')\n      ARGV[3]  timestamp\n      ARGV[4]  max check time\n    Events:\n      \'stalled\' with stalled job id.\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to move job to wait to be picked up by a waiting worker.\n]]\n-- Includes\nlocal function moveJobToWait(metaKey, activeKey, waitKey, pausedKey, markerKey, eventStreamKey,\n  jobId, pushCmd)\n  local target, isPausedOrMaxed = getTargetQueueList(metaKey, activeKey, waitKey, pausedKey)\n  addJobInTargetList(target, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall("XADD", eventStreamKey, "*", "event", "waiting", "jobId", jobId, \'prev\', \'active\')\nend\n--[[\n  Function to trim events, default 10000.\n]]\n-- Includes\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\nlocal function trimEvents(metaKey, eventStreamKey)\n  local maxEvents = getOrSetMaxEvents(metaKey)\n  if maxEvents then\n    rcall("XTRIM", eventStreamKey, "MAXLEN", "~", maxEvents)\n  else\n    rcall("XTRIM", eventStreamKey, "MAXLEN", "~", 10000)\n  end\nend\nlocal stalledKey = KEYS[1]\nlocal waitKey = KEYS[2]\nlocal activeKey = KEYS[3]\nlocal stalledCheckKey = KEYS[4]\nlocal metaKey = KEYS[5]\nlocal pausedKey = KEYS[6]\nlocal markerKey = KEYS[7]\nlocal eventStreamKey = KEYS[8]\nlocal maxStalledJobCount = tonumber(ARGV[1])\nlocal queueKeyPrefix = ARGV[2]\nlocal timestamp = ARGV[3]\nlocal maxCheckTime = ARGV[4]\nif rcall("EXISTS", stalledCheckKey) == 1 then\n    return {}\nend\nrcall("SET", stalledCheckKey, timestamp, "PX", maxCheckTime)\n-- Trim events before emiting them to avoid trimming events emitted in this script\ntrimEvents(metaKey, eventStreamKey)\n-- Move all stalled jobs to wait\nlocal stalling = rcall(\'SMEMBERS\', stalledKey)\nlocal stalled = {}\nif (#stalling > 0) then\n    rcall(\'DEL\', stalledKey)\n    -- Remove from active list\n    for i, jobId in ipairs(stalling) do\n        -- Markers in waitlist DEPRECATED in v5: Remove in v6.\n        if string.sub(jobId, 1, 2) == "0:" then\n            -- If the jobId is a delay marker ID we just remove it.\n            rcall("LREM", activeKey, 1, jobId)\n        else\n            local jobKey = queueKeyPrefix .. jobId\n            -- Check that the lock is also missing, then we can handle this job as really stalled.\n            if (rcall("EXISTS", jobKey .. ":lock") == 0) then\n                --  Remove from the active queue.\n                local removed = rcall("LREM", activeKey, 1, jobId)\n                if (removed > 0) then\n                    -- If this job has been stalled too many times, such as if it crashes the worker, then fail it.\n                    local stalledCount = rcall("HINCRBY", jobKey, "stc", 1)\n                    if stalledCount > maxStalledJobCount then\n                        local failedReason = "job stalled more than allowable limit"\n                        rcall("HSET", jobKey, "defa", failedReason)\n                    end\n                    moveJobToWait(metaKey, activeKey, waitKey, pausedKey, markerKey, eventStreamKey, jobId,\n                        "RPUSH")\n                    -- Emit the stalled event\n                    rcall("XADD", eventStreamKey, "*", "event", "stalled", "jobId", jobId)\n                    table.insert(stalled, jobId)\n                end\n            end\n        end\n    end\nend\n-- Mark potentially stalled jobs\nlocal active = rcall(\'LRANGE\', activeKey, 0, -1)\nif (#active > 0) then\n    for from, to in batches(#active, 7000) do\n        rcall(\'SADD\', stalledKey, unpack(active, from, to))\n    end\nend\nreturn stalled\n',keys:8}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{moveToActive:()=>r});const r={name:"moveToActive",content:'--[[\n  Move next job to be processed to active, lock it and fetch its data. The job\n  may be delayed, in that case we need to move it to the delayed set instead.\n  This operation guarantees that the worker owns the job during the lock\n  expiration time. The worker is responsible of keeping the lock fresh\n  so that no other worker picks this job again.\n  Input:\n    KEYS[1] wait key\n    KEYS[2] active key\n    KEYS[3] prioritized key\n    KEYS[4] stream events key\n    KEYS[5] stalled key\n    -- Rate limiting\n    KEYS[6] rate limiter key\n    KEYS[7] delayed key\n    -- Delayed jobs\n    KEYS[8] paused key\n    KEYS[9] meta key\n    KEYS[10] pc priority counter\n    -- Marker\n    KEYS[11] marker key\n    -- Arguments\n    ARGV[1] key prefix\n    ARGV[2] timestamp\n    ARGV[3] opts\n    opts - token - lock token\n    opts - lockDuration\n    opts - limiter\n    opts - name - worker name\n]]\nlocal rcall = redis.call\nlocal waitKey = KEYS[1]\nlocal activeKey = KEYS[2]\nlocal eventStreamKey = KEYS[4]\nlocal rateLimiterKey = KEYS[6]\nlocal delayedKey = KEYS[7]\nlocal opts = cmsgpack.unpack(ARGV[3])\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\n--[[\n  Function to get current rate limit ttl.\n]]\nlocal function getRateLimitTTL(maxJobs, rateLimiterKey)\n  if maxJobs and maxJobs <= tonumber(rcall("GET", rateLimiterKey) or 0) then\n    local pttl = rcall("PTTL", rateLimiterKey)\n    if pttl == 0 then\n      rcall("DEL", rateLimiterKey)\n    end\n    if pttl > 0 then\n      return pttl\n    end\n  end\n  return 0\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to move job from prioritized state to active.\n]]\nlocal function moveJobFromPrioritizedToActive(priorityKey, activeKey, priorityCounterKey)\n  local prioritizedJob = rcall("ZPOPMIN", priorityKey)\n  if #prioritizedJob > 0 then\n    rcall("LPUSH", activeKey, prioritizedJob[1])\n    return prioritizedJob[1]\n  else\n    rcall("DEL", priorityCounterKey)\n  end\nend\n--[[\n  Function to move job from wait state to active.\n  Input:\n    opts - token - lock token\n    opts - lockDuration\n    opts - limiter\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function prepareJobForProcessing(keyPrefix, rateLimiterKey, eventStreamKey,\n    jobId, processedOn, maxJobs, markerKey, opts)\n  local jobKey = keyPrefix .. jobId\n  -- Check if we need to perform rate limiting.\n  if maxJobs then\n    local jobCounter = tonumber(rcall("INCR", rateLimiterKey))\n    if jobCounter == 1 then\n      local limiterDuration = opts[\'limiter\'] and opts[\'limiter\'][\'duration\']\n      local integerDuration = math.floor(math.abs(limiterDuration))\n      rcall("PEXPIRE", rateLimiterKey, integerDuration)\n    end\n  end\n  local lockKey = jobKey .. \':lock\'\n  -- get a lock\n  if opts[\'token\'] ~= "0" then\n    rcall("SET", lockKey, opts[\'token\'], "PX", opts[\'lockDuration\'])\n  end\n  local optionalValues = {}\n  if opts[\'name\'] then\n    -- Set "processedBy" field to the worker name\n    table.insert(optionalValues, "pb")\n    table.insert(optionalValues, opts[\'name\'])\n  end\n  rcall("XADD", eventStreamKey, "*", "event", "active", "jobId", jobId, "prev", "waiting")\n  rcall("HMSET", jobKey, "processedOn", processedOn, unpack(optionalValues))\n  rcall("HINCRBY", jobKey, "ats", 1)\n  addBaseMarkerIfNeeded(markerKey, false)\n  -- rate limit delay must be 0 in this case to prevent adding more delay\n  -- when job that is moved to active needs to be processed\n  return {rcall("HGETALL", jobKey), jobId, 0, 0} -- get job data\nend\n--[[\n  Updates the delay set, by moving delayed jobs that should\n  be processed now to "wait".\n     Events:\n      \'waiting\'\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n-- Try to get as much as 1000 jobs at once\nlocal function promoteDelayedJobs(delayedKey, markerKey, targetKey, prioritizedKey,\n                                  eventStreamKey, prefix, timestamp, priorityCounterKey, isPaused)\n    local jobs = rcall("ZRANGEBYSCORE", delayedKey, 0, (timestamp + 1) * 0x1000 - 1, "LIMIT", 0, 1000)\n    if (#jobs > 0) then\n        rcall("ZREM", delayedKey, unpack(jobs))\n        for _, jobId in ipairs(jobs) do\n            local jobKey = prefix .. jobId\n            local priority =\n                tonumber(rcall("HGET", jobKey, "priority")) or 0\n            if priority == 0 then\n                -- LIFO or FIFO\n                rcall("LPUSH", targetKey, jobId)\n            else\n                local score = getPriorityScore(priority, priorityCounterKey)\n                rcall("ZADD", prioritizedKey, score, jobId)\n            end\n            -- Emit waiting event\n            rcall("XADD", eventStreamKey, "*", "event", "waiting", "jobId",\n                  jobId, "prev", "delayed")\n            rcall("HSET", jobKey, "delay", 0)\n        end\n        addBaseMarkerIfNeeded(markerKey, isPaused)\n    end\nend\nlocal target, isPausedOrMaxed = getTargetQueueList(KEYS[9], activeKey, waitKey, KEYS[8])\n-- Check if there are delayed jobs that we can move to wait.\nlocal markerKey = KEYS[11]\npromoteDelayedJobs(delayedKey, markerKey, target, KEYS[3], eventStreamKey, ARGV[1],\n                   ARGV[2], KEYS[10], isPausedOrMaxed)\nlocal maxJobs = tonumber(opts[\'limiter\'] and opts[\'limiter\'][\'max\'])\nlocal expireTime = getRateLimitTTL(maxJobs, rateLimiterKey)\n-- Check if we are rate limited first.\nif expireTime > 0 then return {0, 0, expireTime, 0} end\n-- paused or maxed queue\nif isPausedOrMaxed then return {0, 0, 0, 0} end\n-- no job ID, try non-blocking move from wait to active\nlocal jobId = rcall("RPOPLPUSH", waitKey, activeKey)\n-- Markers in waitlist DEPRECATED in v5: Will be completely removed in v6.\nif jobId and string.sub(jobId, 1, 2) == "0:" then\n    rcall("LREM", activeKey, 1, jobId)\n    jobId = rcall("RPOPLPUSH", waitKey, activeKey)\nend\nif jobId then\n    return prepareJobForProcessing(ARGV[1], rateLimiterKey, eventStreamKey, jobId, ARGV[2],\n                                   maxJobs, markerKey, opts)\nelse\n    jobId = moveJobFromPrioritizedToActive(KEYS[3], activeKey, KEYS[10])\n    if jobId then\n        return prepareJobForProcessing(ARGV[1], rateLimiterKey, eventStreamKey, jobId, ARGV[2],\n                                       maxJobs, markerKey, opts)\n    end\nend\n-- Return the timestamp for the next delayed job if any.\nlocal nextTimestamp = getNextDelayedTimestamp(delayedKey)\nif nextTimestamp ~= nil then return {0, 0, 0, nextTimestamp} end\nreturn {0, 0, 0, 0}\n',keys:11}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{moveToDelayed:()=>r});const r={name:"moveToDelayed",content:'--[[\n  Moves job from active to delayed set.\n  Input:\n    KEYS[1] marker key\n    KEYS[2] active key\n    KEYS[3] prioritized key\n    KEYS[4] delayed key\n    KEYS[5] job key\n    KEYS[6] events stream\n    KEYS[7] meta key\n    KEYS[8] stalled key\n    ARGV[1] key prefix\n    ARGV[2] timestamp\n    ARGV[3] the id of the job\n    ARGV[4] queue token\n    ARGV[5] delay value\n    ARGV[6] skip attempt\n    ARGV[7] optional job fields to update\n  Output:\n    0 - OK\n   -1 - Missing job.\n   -3 - Job not in active set.\n  Events:\n    - delayed key.\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Bake in the job id first 12 bits into the timestamp\n  to guarantee correct execution order of delayed jobs\n  (up to 4096 jobs per given timestamp or 4096 jobs apart per timestamp)\n  WARNING: Jobs that are so far apart that they wrap around will cause FIFO to fail\n]]\nlocal function getDelayedScore(delayedKey, timestamp, delay)\n  local delayedTimestamp = (delay > 0 and (tonumber(timestamp) + delay)) or tonumber(timestamp)\n  local minScore = delayedTimestamp * 0x1000\n  local maxScore = (delayedTimestamp + 1 ) * 0x1000 - 1\n  local result = rcall("ZREVRANGEBYSCORE", delayedKey, maxScore,\n    minScore, "WITHSCORES","LIMIT", 0, 1)\n  if #result then\n    local currentMaxScore = tonumber(result[2])\n    if currentMaxScore ~= nil then\n      if currentMaxScore >= maxScore then\n        return maxScore, delayedTimestamp\n      else\n        return currentMaxScore + 1, delayedTimestamp\n      end\n    end\n  end\n  return minScore, delayedTimestamp\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\nlocal function removeLock(jobKey, stalledKey, token, jobId)\n  if token ~= "0" then\n    local lockKey = jobKey .. \':lock\'\n    local lockToken = rcall("GET", lockKey)\n    if lockToken == token then\n      rcall("DEL", lockKey)\n      rcall("SREM", stalledKey, jobId)\n    else\n      if lockToken then\n        -- Lock exists but token does not match\n        return -6\n      else\n        -- Lock is missing completely\n        return -2\n      end\n    end\n  end\n  return 0\nend\n--[[\n  Function to update a bunch of fields in a job.\n]]\nlocal function updateJobFields(jobKey, msgpackedFields)\n  if msgpackedFields and #msgpackedFields > 0 then\n    local fieldsToUpdate = cmsgpack.unpack(msgpackedFields)\n    if fieldsToUpdate then\n      rcall("HMSET", jobKey, unpack(fieldsToUpdate))\n    end\n  end\nend\nlocal jobKey = KEYS[5]\nlocal metaKey = KEYS[7]\nlocal token = ARGV[4] \nif rcall("EXISTS", jobKey) == 1 then\n    local errorCode = removeLock(jobKey, KEYS[8], token, ARGV[3])\n    if errorCode < 0 then\n        return errorCode\n    end\n    updateJobFields(jobKey, ARGV[7])\n    local delayedKey = KEYS[4]\n    local jobId = ARGV[3]\n    local delay = tonumber(ARGV[5])\n    local score, delayedTimestamp = getDelayedScore(delayedKey, ARGV[2], delay)\n    local numRemovedElements = rcall("LREM", KEYS[2], -1, jobId)\n    if numRemovedElements < 1 then return -3 end\n    if ARGV[6] == "0" then\n        rcall("HINCRBY", jobKey, "atm", 1)\n    end\n    rcall("HSET", jobKey, "delay", ARGV[5])\n    local maxEvents = getOrSetMaxEvents(metaKey)\n    rcall("ZADD", delayedKey, score, jobId)\n    rcall("XADD", KEYS[6], "MAXLEN", "~", maxEvents, "*", "event", "delayed",\n          "jobId", jobId, "delay", delayedTimestamp)\n    -- Check if we need to push a marker job to wake up sleeping workers.\n    local markerKey = KEYS[1]\n    addDelayMarkerIfNeeded(markerKey, delayedKey)\n    return 0\nelse\n    return -1\nend\n',keys:8}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{moveToFinished:()=>r});const r={name:"moveToFinished",content:'--[[\n  Move job from active to a finished status (completed o failed)\n  A job can only be moved to completed if it was active.\n  The job must be locked before it can be moved to a finished status,\n  and the lock must be released in this script.\n    Input:\n      KEYS[1] wait key\n      KEYS[2] active key\n      KEYS[3] prioritized key\n      KEYS[4] event stream key\n      KEYS[5] stalled key\n      -- Rate limiting\n      KEYS[6] rate limiter key\n      KEYS[7] delayed key\n      KEYS[8] paused key\n      KEYS[9] meta key\n      KEYS[10] pc priority counter\n      KEYS[11] completed/failed key\n      KEYS[12] jobId key\n      KEYS[13] metrics key\n      KEYS[14] marker key\n      ARGV[1]  jobId\n      ARGV[2]  timestamp\n      ARGV[3]  msg property returnvalue / failedReason\n      ARGV[4]  return value / failed reason\n      ARGV[5]  target (completed/failed)\n      ARGV[6]  fetch next?\n      ARGV[7]  keys prefix\n      ARGV[8]  opts\n      ARGV[9]  job fields to update\n      opts - token - lock token\n      opts - keepJobs\n      opts - lockDuration - lock duration in milliseconds\n      opts - attempts max attempts\n      opts - maxMetricsSize\n      opts - fpof - fail parent on fail\n      opts - cpof - continue parent on fail\n      opts - idof - ignore dependency on fail\n      opts - rdof - remove dependency on fail\n      opts - name - worker name\n    Output:\n      0 OK\n      -1 Missing key.\n      -2 Missing lock.\n      -3 Job not in active set\n      -4 Job has pending children\n      -6 Lock is not owned by this client\n      -9 Job has failed children\n    Events:\n      \'completed/failed\'\n]]\nlocal rcall = redis.call\n--- Includes\n--[[\n  Functions to collect metrics based on a current and previous count of jobs.\n  Granualarity is fixed at 1 minute.\n]]\n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\nlocal function collectMetrics(metaKey, dataPointsList, maxDataPoints,\n                                 timestamp)\n    -- Increment current count\n    local count = rcall("HINCRBY", metaKey, "count", 1) - 1\n    -- Compute how many data points we need to add to the list, N.\n    local prevTS = rcall("HGET", metaKey, "prevTS")\n    if not prevTS then\n        -- If prevTS is nil, set it to the current timestamp\n        rcall("HSET", metaKey, "prevTS", timestamp, "prevCount", 0)\n        return\n    end\n    local N = math.min(math.floor(timestamp / 60000) - math.floor(prevTS / 60000), tonumber(maxDataPoints))\n    if N > 0 then\n        local delta = count - rcall("HGET", metaKey, "prevCount")\n        -- If N > 1, add N-1 zeros to the list\n        if N > 1 then\n            local points = {}\n            points[1] = delta\n            for i = 2, N do\n                points[i] = 0\n            end\n            for from, to in batches(#points, 7000) do\n                rcall("LPUSH", dataPointsList, unpack(points, from, to))\n            end\n        else\n            -- LPUSH delta to the list\n            rcall("LPUSH", dataPointsList, delta)\n        end\n        -- LTRIM to keep list to its max size\n        rcall("LTRIM", dataPointsList, 0, maxDataPoints - 1)\n        -- update prev count with current count\n        rcall("HSET", metaKey, "prevCount", count, "prevTS", timestamp)\n    end\nend\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\n--[[\n  Function to get current rate limit ttl.\n]]\nlocal function getRateLimitTTL(maxJobs, rateLimiterKey)\n  if maxJobs and maxJobs <= tonumber(rcall("GET", rateLimiterKey) or 0) then\n    local pttl = rcall("PTTL", rateLimiterKey)\n    if pttl == 0 then\n      rcall("DEL", rateLimiterKey)\n    end\n    if pttl > 0 then\n      return pttl\n    end\n  end\n  return 0\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to move job from prioritized state to active.\n]]\nlocal function moveJobFromPrioritizedToActive(priorityKey, activeKey, priorityCounterKey)\n  local prioritizedJob = rcall("ZPOPMIN", priorityKey)\n  if #prioritizedJob > 0 then\n    rcall("LPUSH", activeKey, prioritizedJob[1])\n    return prioritizedJob[1]\n  else\n    rcall("DEL", priorityCounterKey)\n  end\nend\n--[[\n  Function to recursively move from waitingChildren to failed.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized)\n  if no pending dependencies.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized) if needed.\n]]\n-- Includes\n--[[\n  Move parent to a wait status (wait, prioritized or delayed)\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\nlocal function moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    local parentWaitKey = parentQueueKey .. ":wait"\n    local parentPausedKey = parentQueueKey .. ":paused"\n    local parentActiveKey = parentQueueKey .. ":active"\n    local parentMetaKey = parentQueueKey .. ":meta"\n    local parentMarkerKey = parentQueueKey .. ":marker"\n    local jobAttributes = rcall("HMGET", parentKey, "priority", "delay")\n    local priority = tonumber(jobAttributes[1]) or 0\n    local delay = tonumber(jobAttributes[2]) or 0\n    if delay > 0 then\n        local delayedTimestamp = tonumber(timestamp) + delay\n        local score = delayedTimestamp * 0x1000\n        local parentDelayedKey = parentQueueKey .. ":delayed"\n        rcall("ZADD", parentDelayedKey, score, parentId)\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "delayed", "jobId", parentId, "delay",\n            delayedTimestamp)\n        addDelayMarkerIfNeeded(parentMarkerKey, parentDelayedKey)\n    else\n        if priority == 0 then\n            local parentTarget, isParentPausedOrMaxed = getTargetQueueList(parentMetaKey, parentActiveKey,\n                parentWaitKey, parentPausedKey)\n            addJobInTargetList(parentTarget, parentMarkerKey, "RPUSH", isParentPausedOrMaxed, parentId)\n        else\n            local isPausedOrMaxed = isQueuePausedOrMaxed(parentMetaKey, parentActiveKey)\n            addJobWithPriority(parentMarkerKey, parentQueueKey .. ":prioritized", priority, parentId,\n                parentQueueKey .. ":pc", isPausedOrMaxed)\n        end\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "waiting", "jobId", parentId, "prev",\n            "waiting-children")\n    end\nend\nlocal function moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  if rcall("EXISTS", parentKey) == 1 then\n    local parentWaitingChildrenKey = parentQueueKey .. ":waiting-children"\n    if rcall("ZSCORE", parentWaitingChildrenKey, parentId) then    \n      rcall("ZREM", parentWaitingChildrenKey, parentId)\n      moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    end\n  end\nend\nlocal function moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey,\n  parentId, timestamp)\n  local doNotHavePendingDependencies = rcall("SCARD", parentDependenciesKey) == 0\n  if doNotHavePendingDependencies then\n    moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  end\nend\n--[[\n  Functions to remove jobs when removeOnFail option is provided.\n]]\n-- Includes\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove deduplication key if needed\n  when a job is being removed.\n]]\nlocal function removeDeduplicationKeyIfNeededOnRemoval(prefixKey,\n  jobKey, jobId)\n  local deduplicationId = rcall("HGET", jobKey, "deid")\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local currentJobId = rcall(\'GET\', deduplicationKey)\n    if currentJobId and currentJobId == jobId then\n      return rcall("DEL", deduplicationKey)\n    end\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDeduplicationKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDeduplicationKey then\n    removeDeduplicationKeyIfNeededOnRemoval(baseKey, jobKey, jobId)\n  end\n  removeJobKeys(jobKey)\nend\n--[[\n  Functions to remove jobs by max age.\n]]\n-- Includes\nlocal function removeJobsByMaxAge(timestamp, maxAge, targetSet, prefix,\n  shouldRemoveDebounceKey)\n  local start = timestamp - maxAge * 1000\n  local jobIds = rcall("ZREVRANGEBYSCORE", targetSet, start, "-inf")\n  for i, jobId in ipairs(jobIds) do\n    removeJob(jobId, false, prefix, false --[[remove debounce key]])\n  end\n  rcall("ZREMRANGEBYSCORE", targetSet, "-inf", start)\nend\n--[[\n  Functions to remove jobs by max count.\n]]\n-- Includes\nlocal function removeJobsByMaxCount(maxCount, targetSet, prefix)\n  local start = maxCount\n  local jobIds = rcall("ZREVRANGE", targetSet, start, -1)\n  for i, jobId in ipairs(jobIds) do\n    removeJob(jobId, false, prefix, false --[[remove debounce key]])\n  end\n  rcall("ZREMRANGEBYRANK", targetSet, 0, -(maxCount + 1))\nend\nlocal function removeJobsOnFail(queueKeyPrefix, failedKey, jobId, opts, timestamp)\n  local removeOnFailType = type(opts["removeOnFail"])\n  if removeOnFailType == "number" then\n    removeJobsByMaxCount(opts["removeOnFail"],\n                        failedKey, queueKeyPrefix)\n  elseif removeOnFailType == "boolean" then\n    if opts["removeOnFail"] then\n      removeJob(jobId, false, queueKeyPrefix,\n                false --[[remove debounce key]])\n      rcall("ZREM", failedKey, jobId)\n    end\n  elseif removeOnFailType ~= "nil" then\n    local maxAge = opts["removeOnFail"]["age"]\n    local maxCount = opts["removeOnFail"]["count"]\n    if maxAge ~= nil then\n      removeJobsByMaxAge(timestamp, maxAge,\n                        failedKey, queueKeyPrefix)\n    end\n    if maxCount ~= nil and maxCount > 0 then\n      removeJobsByMaxCount(maxCount, failedKey,\n                            queueKeyPrefix)\n    end\n  end \nend\nlocal moveParentToFailedIfNeeded = function (parentQueueKey, parentKey, parentId, jobIdKey, timestamp)\n  if rcall("EXISTS", parentKey) == 1 then\n    local parentWaitingChildrenKey = parentQueueKey .. ":waiting-children"\n    local parentDelayedKey = parentQueueKey .. ":delayed"\n    local parentPrioritizedKey = parentQueueKey .. ":prioritized"\n    local parentWaitingChildrenOrDelayedKey\n    local prevState\n    if rcall("ZSCORE", parentWaitingChildrenKey, parentId) then\n      parentWaitingChildrenOrDelayedKey = parentWaitingChildrenKey\n      prevState = "waiting-children"\n    elseif rcall("ZSCORE", parentDelayedKey, parentId) then\n      parentWaitingChildrenOrDelayedKey = parentDelayedKey\n      prevState = "delayed"\n      rcall("HSET", parentKey, "delay", 0)\n    end\n    if parentWaitingChildrenOrDelayedKey then\n      rcall("ZREM", parentWaitingChildrenOrDelayedKey, parentId)\n      local parentQueuePrefix = parentQueueKey .. ":"\n      local parentFailedKey = parentQueueKey .. ":failed"\n      local deferredFailure = "child " .. jobIdKey .. " failed"\n      rcall("HSET", parentKey, "defa", deferredFailure)\n      moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    else\n      if not rcall("ZSCORE", parentQueueKey .. ":failed", parentId) then\n        local deferredFailure = "child " .. jobIdKey .. " failed"\n        rcall("HSET", parentKey, "defa", deferredFailure)\n      end\n    end\n  end\nend\nlocal moveChildFromDependenciesIfNeeded = function (rawParentData, childKey, failedReason, timestamp)\n  if rawParentData then\n    local parentData = cjson.decode(rawParentData)\n    local parentKey = parentData[\'queueKey\'] .. \':\' .. parentData[\'id\']\n    local parentDependenciesChildrenKey = parentKey .. ":dependencies"\n    if parentData[\'fpof\'] then\n      if rcall("SREM", parentDependenciesChildrenKey, childKey) == 1 then\n        local parentUnsuccesssfulChildrenKey = parentKey .. ":unsuccessful"\n        rcall("ZADD", parentUnsuccesssfulChildrenKey, timestamp, childKey)\n        moveParentToFailedIfNeeded(\n          parentData[\'queueKey\'],\n          parentKey,\n          parentData[\'id\'],\n          childKey,\n          timestamp\n        )\n      end\n    elseif parentData[\'cpof\'] then\n      if rcall("SREM", parentDependenciesChildrenKey, childKey) == 1 then\n        local parentFailedChildrenKey = parentKey .. ":failed"\n        rcall("HSET", parentFailedChildrenKey, childKey, failedReason)\n        moveParentToWaitIfNeeded(parentData[\'queueKey\'], parentKey, parentData[\'id\'], timestamp)\n      end\n    elseif parentData[\'idof\'] or parentData[\'rdof\'] then\n      if rcall("SREM", parentDependenciesChildrenKey, childKey) == 1 then\n        moveParentToWaitIfNoPendingDependencies(parentData[\'queueKey\'], parentDependenciesChildrenKey,\n          parentKey, parentData[\'id\'], timestamp)\n        if parentData[\'idof\'] then\n          local parentFailedChildrenKey = parentKey .. ":failed"\n          rcall("HSET", parentFailedChildrenKey, childKey, failedReason)\n        end\n      end\n    end\n  end\nend\n--[[\n  Function to move job from wait state to active.\n  Input:\n    opts - token - lock token\n    opts - lockDuration\n    opts - limiter\n]]\n-- Includes\nlocal function prepareJobForProcessing(keyPrefix, rateLimiterKey, eventStreamKey,\n    jobId, processedOn, maxJobs, markerKey, opts)\n  local jobKey = keyPrefix .. jobId\n  -- Check if we need to perform rate limiting.\n  if maxJobs then\n    local jobCounter = tonumber(rcall("INCR", rateLimiterKey))\n    if jobCounter == 1 then\n      local limiterDuration = opts[\'limiter\'] and opts[\'limiter\'][\'duration\']\n      local integerDuration = math.floor(math.abs(limiterDuration))\n      rcall("PEXPIRE", rateLimiterKey, integerDuration)\n    end\n  end\n  local lockKey = jobKey .. \':lock\'\n  -- get a lock\n  if opts[\'token\'] ~= "0" then\n    rcall("SET", lockKey, opts[\'token\'], "PX", opts[\'lockDuration\'])\n  end\n  local optionalValues = {}\n  if opts[\'name\'] then\n    -- Set "processedBy" field to the worker name\n    table.insert(optionalValues, "pb")\n    table.insert(optionalValues, opts[\'name\'])\n  end\n  rcall("XADD", eventStreamKey, "*", "event", "active", "jobId", jobId, "prev", "waiting")\n  rcall("HMSET", jobKey, "processedOn", processedOn, unpack(optionalValues))\n  rcall("HINCRBY", jobKey, "ats", 1)\n  addBaseMarkerIfNeeded(markerKey, false)\n  -- rate limit delay must be 0 in this case to prevent adding more delay\n  -- when job that is moved to active needs to be processed\n  return {rcall("HGETALL", jobKey), jobId, 0, 0} -- get job data\nend\n--[[\n  Updates the delay set, by moving delayed jobs that should\n  be processed now to "wait".\n     Events:\n      \'waiting\'\n]]\n-- Includes\n-- Try to get as much as 1000 jobs at once\nlocal function promoteDelayedJobs(delayedKey, markerKey, targetKey, prioritizedKey,\n                                  eventStreamKey, prefix, timestamp, priorityCounterKey, isPaused)\n    local jobs = rcall("ZRANGEBYSCORE", delayedKey, 0, (timestamp + 1) * 0x1000 - 1, "LIMIT", 0, 1000)\n    if (#jobs > 0) then\n        rcall("ZREM", delayedKey, unpack(jobs))\n        for _, jobId in ipairs(jobs) do\n            local jobKey = prefix .. jobId\n            local priority =\n                tonumber(rcall("HGET", jobKey, "priority")) or 0\n            if priority == 0 then\n                -- LIFO or FIFO\n                rcall("LPUSH", targetKey, jobId)\n            else\n                local score = getPriorityScore(priority, priorityCounterKey)\n                rcall("ZADD", prioritizedKey, score, jobId)\n            end\n            -- Emit waiting event\n            rcall("XADD", eventStreamKey, "*", "event", "waiting", "jobId",\n                  jobId, "prev", "delayed")\n            rcall("HSET", jobKey, "delay", 0)\n        end\n        addBaseMarkerIfNeeded(markerKey, isPaused)\n    end\nend\n--[[\n  Function to remove deduplication key if needed\n  when a job is moved to completed or failed states.\n]]\nlocal function removeDeduplicationKeyIfNeededOnFinalization(prefixKey,\n  deduplicationId, jobId)\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local pttl = rcall("PTTL", deduplicationKey)\n    if pttl == 0 then\n      return rcall("DEL", deduplicationKey)\n    end\n    if pttl == -1 then\n      local currentJobId = rcall(\'GET\', deduplicationKey)\n      if currentJobId and currentJobId == jobId then\n        return rcall("DEL", deduplicationKey)\n      end\n    end\n  end\nend\nlocal function removeLock(jobKey, stalledKey, token, jobId)\n  if token ~= "0" then\n    local lockKey = jobKey .. \':lock\'\n    local lockToken = rcall("GET", lockKey)\n    if lockToken == token then\n      rcall("DEL", lockKey)\n      rcall("SREM", stalledKey, jobId)\n    else\n      if lockToken then\n        -- Lock exists but token does not match\n        return -6\n      else\n        -- Lock is missing completely\n        return -2\n      end\n    end\n  end\n  return 0\nend\n--[[\n  Function to trim events, default 10000.\n]]\n-- Includes\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\nlocal function trimEvents(metaKey, eventStreamKey)\n  local maxEvents = getOrSetMaxEvents(metaKey)\n  if maxEvents then\n    rcall("XTRIM", eventStreamKey, "MAXLEN", "~", maxEvents)\n  else\n    rcall("XTRIM", eventStreamKey, "MAXLEN", "~", 10000)\n  end\nend\n--[[\n  Validate and move or add dependencies to parent.\n]]\n-- Includes\nlocal function updateParentDepsIfNeeded(parentKey, parentQueueKey, parentDependenciesKey,\n  parentId, jobIdKey, returnvalue, timestamp )\n  local processedSet = parentKey .. ":processed"\n  rcall("HSET", processedSet, jobIdKey, returnvalue)\n  moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey, parentId, timestamp)\nend\n--[[\n  Function to update a bunch of fields in a job.\n]]\nlocal function updateJobFields(jobKey, msgpackedFields)\n  if msgpackedFields and #msgpackedFields > 0 then\n    local fieldsToUpdate = cmsgpack.unpack(msgpackedFields)\n    if fieldsToUpdate then\n      rcall("HMSET", jobKey, unpack(fieldsToUpdate))\n    end\n  end\nend\nlocal jobIdKey = KEYS[12]\nif rcall("EXISTS", jobIdKey) == 1 then -- Make sure job exists\n    -- Make sure it does not have pending dependencies\n    -- It must happen before removing lock\n    if ARGV[5] == "completed" then\n        if rcall("SCARD", jobIdKey .. ":dependencies") ~= 0 then\n            return -4\n        end\n        if rcall("ZCARD", jobIdKey .. ":unsuccessful") ~= 0 then\n            return -9\n        end\n    end\n    local opts = cmsgpack.unpack(ARGV[8])\n    local token = opts[\'token\']\n    local errorCode = removeLock(jobIdKey, KEYS[5], token, ARGV[1])\n    if errorCode < 0 then\n        return errorCode\n    end\n    updateJobFields(jobIdKey, ARGV[9]);\n    local attempts = opts[\'attempts\']\n    local maxMetricsSize = opts[\'maxMetricsSize\']\n    local maxCount = opts[\'keepJobs\'][\'count\']\n    local maxAge = opts[\'keepJobs\'][\'age\']\n    local jobAttributes = rcall("HMGET", jobIdKey, "parentKey", "parent", "deid")\n    local parentKey = jobAttributes[1] or ""\n    local parentId = ""\n    local parentQueueKey = ""\n    if jobAttributes[2] then -- TODO: need to revisit this logic if it\'s still needed\n        local jsonDecodedParent = cjson.decode(jobAttributes[2])\n        parentId = jsonDecodedParent[\'id\']\n        parentQueueKey = jsonDecodedParent[\'queueKey\']\n    end\n    local jobId = ARGV[1]\n    local timestamp = ARGV[2]\n    -- Remove from active list (if not active we shall return error)\n    local numRemovedElements = rcall("LREM", KEYS[2], -1, jobId)\n    if (numRemovedElements < 1) then\n        return -3\n    end\n    local eventStreamKey = KEYS[4]\n    local metaKey = KEYS[9]\n    -- Trim events before emiting them to avoid trimming events emitted in this script\n    trimEvents(metaKey, eventStreamKey)\n    local prefix = ARGV[7]\n    removeDeduplicationKeyIfNeededOnFinalization(prefix, jobAttributes[3], jobId)\n    -- If job has a parent we need to\n    -- 1) remove this job id from parents dependencies\n    -- 2) move the job Id to parent "processed" set\n    -- 3) push the results into parent "results" list\n    -- 4) if parent\'s dependencies is empty, then move parent to "wait/paused". Note it may be a different queue!.\n    if parentId == "" and parentKey ~= "" then\n        parentId = getJobIdFromKey(parentKey)\n        parentQueueKey = getJobKeyPrefix(parentKey, ":" .. parentId)\n    end\n    if parentId ~= "" then\n        if ARGV[5] == "completed" then\n            local dependenciesSet = parentKey .. ":dependencies"\n            if rcall("SREM", dependenciesSet, jobIdKey) == 1 then\n                updateParentDepsIfNeeded(parentKey, parentQueueKey, dependenciesSet, parentId, jobIdKey, ARGV[4],\n                    timestamp)\n            end\n        else\n            moveChildFromDependenciesIfNeeded(jobAttributes[2], jobIdKey, ARGV[4], timestamp)\n        end\n    end\n    local attemptsMade = rcall("HINCRBY", jobIdKey, "atm", 1)\n    -- Remove job?\n    if maxCount ~= 0 then\n        local targetSet = KEYS[11]\n        -- Add to complete/failed set\n        rcall("ZADD", targetSet, timestamp, jobId)\n        rcall("HSET", jobIdKey, ARGV[3], ARGV[4], "finishedOn", timestamp)\n        -- "returnvalue" / "failedReason" and "finishedOn"\n        if ARGV[5] == "failed" then\n            rcall("HDEL", jobIdKey, "defa")\n        end\n        -- Remove old jobs?\n        if maxAge ~= nil then\n            removeJobsByMaxAge(timestamp, maxAge, targetSet, prefix)\n        end\n        if maxCount ~= nil and maxCount > 0 then\n            removeJobsByMaxCount(maxCount, targetSet, prefix)\n        end\n    else\n        removeJobKeys(jobIdKey)\n        if parentKey ~= "" then\n            -- TODO: when a child is removed when finished, result or failure in parent\n            -- must not be deleted, those value references should be deleted when the parent\n            -- is deleted\n            removeParentDependencyKey(jobIdKey, false, parentKey, jobAttributes[3])\n        end\n    end\n    rcall("XADD", eventStreamKey, "*", "event", ARGV[5], "jobId", jobId, ARGV[3], ARGV[4], "prev", "active")\n    if ARGV[5] == "failed" then\n        if tonumber(attemptsMade) >= tonumber(attempts) then\n            rcall("XADD", eventStreamKey, "*", "event", "retries-exhausted", "jobId", jobId, "attemptsMade",\n                attemptsMade)\n        end\n    end\n    -- Collect metrics\n    if maxMetricsSize ~= "" then\n        collectMetrics(KEYS[13], KEYS[13] .. \':data\', maxMetricsSize, timestamp)\n    end\n    -- Try to get next job to avoid an extra roundtrip if the queue is not closing,\n    -- and not rate limited.\n    if (ARGV[6] == "1") then\n        local target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[2], KEYS[1], KEYS[8])\n        local markerKey = KEYS[14]\n        -- Check if there are delayed jobs that can be promoted\n        promoteDelayedJobs(KEYS[7], markerKey, target, KEYS[3], eventStreamKey, prefix, timestamp, KEYS[10],\n            isPausedOrMaxed)\n        local maxJobs = tonumber(opts[\'limiter\'] and opts[\'limiter\'][\'max\'])\n        -- Check if we are rate limited first.\n        local expireTime = getRateLimitTTL(maxJobs, KEYS[6])\n        if expireTime > 0 then\n            return {0, 0, expireTime, 0}\n        end\n        -- paused or maxed queue\n        if isPausedOrMaxed then\n            return {0, 0, 0, 0}\n        end\n        jobId = rcall("RPOPLPUSH", KEYS[1], KEYS[2])\n        if jobId then\n            -- Markers in waitlist DEPRECATED in v5: Remove in v6.\n            if string.sub(jobId, 1, 2) == "0:" then\n                rcall("LREM", KEYS[2], 1, jobId)\n                -- If jobId is special ID 0:delay (delay greater than 0), then there is no job to process\n                -- but if ID is 0:0, then there is at least 1 prioritized job to process\n                if jobId == "0:0" then\n                    jobId = moveJobFromPrioritizedToActive(KEYS[3], KEYS[2], KEYS[10])\n                    return prepareJobForProcessing(prefix, KEYS[6], eventStreamKey, jobId, timestamp, maxJobs,\n                        markerKey, opts)\n                end\n            else\n                return prepareJobForProcessing(prefix, KEYS[6], eventStreamKey, jobId, timestamp, maxJobs, markerKey,\n                    opts)\n            end\n        else\n            jobId = moveJobFromPrioritizedToActive(KEYS[3], KEYS[2], KEYS[10])\n            if jobId then\n                return prepareJobForProcessing(prefix, KEYS[6], eventStreamKey, jobId, timestamp, maxJobs, markerKey,\n                    opts)\n            end\n        end\n        -- Return the timestamp for the next delayed job if any.\n        local nextTimestamp = getNextDelayedTimestamp(KEYS[7])\n        if nextTimestamp ~= nil then\n            -- The result is guaranteed to be positive, since the\n            -- ZRANGEBYSCORE command would have return a job otherwise.\n            return {0, 0, 0, nextTimestamp}\n        end\n    end\n    local waitLen = rcall("LLEN", KEYS[1])\n    if waitLen == 0 then\n        local activeLen = rcall("LLEN", KEYS[2])\n        if activeLen == 0 then\n            local prioritizedLen = rcall("ZCARD", KEYS[3])\n            if prioritizedLen == 0 then\n                rcall("XADD", eventStreamKey, "*", "event", "drained")\n            end\n        end\n    end\n    return 0\nelse\n    return -1\nend\n',keys:14}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{moveToWaitingChildren:()=>r});const r={name:"moveToWaitingChildren",content:'--[[\n  Moves job from active to waiting children set.\n  Input:\n    KEYS[1] active key\n    KEYS[2] wait-children key\n    KEYS[3] job key\n    KEYS[4] job dependencies key\n    KEYS[5] job unsuccessful key\n    KEYS[6] stalled key\n    KEYS[7] events key\n    ARGV[1] token\n    ARGV[2] child key\n    ARGV[3] timestamp\n    ARGV[4] jobId\n    ARGV[5] prefix\n  Output:\n    0 - OK\n    1 - There are not pending dependencies.\n   -1 - Missing job.\n   -2 - Missing lock\n   -3 - Job not in active set\n   -9 - Job has failed children\n]]\nlocal rcall = redis.call\nlocal activeKey = KEYS[1]\nlocal waitingChildrenKey = KEYS[2]\nlocal jobKey = KEYS[3]\nlocal jobDependenciesKey = KEYS[4]\nlocal jobUnsuccessfulKey = KEYS[5]\nlocal stalledKey = KEYS[6]\nlocal eventStreamKey = KEYS[7]\nlocal token = ARGV[1]\nlocal timestamp = ARGV[3]\nlocal jobId = ARGV[4]\n--- Includes\nlocal function removeLock(jobKey, stalledKey, token, jobId)\n  if token ~= "0" then\n    local lockKey = jobKey .. \':lock\'\n    local lockToken = rcall("GET", lockKey)\n    if lockToken == token then\n      rcall("DEL", lockKey)\n      rcall("SREM", stalledKey, jobId)\n    else\n      if lockToken then\n        -- Lock exists but token does not match\n        return -6\n      else\n        -- Lock is missing completely\n        return -2\n      end\n    end\n  end\n  return 0\nend\nlocal function removeJobFromActive(activeKey, stalledKey, jobKey, jobId,\n    token)\n  local errorCode = removeLock(jobKey, stalledKey, token, jobId)\n  if errorCode < 0 then\n    return errorCode\n  end\n  local numRemovedElements = rcall("LREM", activeKey, -1, jobId)\n  if numRemovedElements < 1 then\n    return -3\n  end\n  return 0\nend\nlocal function moveToWaitingChildren(activeKey, waitingChildrenKey, stalledKey, eventStreamKey,\n    jobKey, jobId, timestamp, token)\n  local errorCode = removeJobFromActive(activeKey, stalledKey, jobKey, jobId, token)\n  if errorCode < 0 then\n    return errorCode\n  end\n  local score = tonumber(timestamp)\n  rcall("ZADD", waitingChildrenKey, score, jobId)\n  rcall("XADD", eventStreamKey, "*", "event", "waiting-children", "jobId", jobId, \'prev\', \'active\')\n  return 0\nend\nif rcall("EXISTS", jobKey) == 1 then\n  if rcall("ZCARD", jobUnsuccessfulKey) ~= 0 then\n    return -9\n  else\n    if ARGV[2] ~= "" then\n      if rcall("SISMEMBER", jobDependenciesKey, ARGV[2]) ~= 0 then\n        return moveToWaitingChildren(activeKey, waitingChildrenKey, stalledKey, eventStreamKey,\n          jobKey, jobId, timestamp, token)\n      end\n      return 1\n    else\n      if rcall("SCARD", jobDependenciesKey) ~= 0 then \n        return moveToWaitingChildren(activeKey, waitingChildrenKey, stalledKey, eventStreamKey,\n          jobKey, jobId, timestamp, token)\n      end\n      return 1\n    end    \n  end\nend\nreturn -1\n',keys:7}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{obliterate:()=>r});const r={name:"obliterate",content:'--[[\n  Completely obliterates a queue and all of its contents\n  This command completely destroys a queue including all of its jobs, current or past \n  leaving no trace of its existence. Since this script needs to iterate to find all the job\n  keys, consider that this call may be slow for very large queues.\n  The queue needs to be "paused" or it will return an error\n  If the queue has currently active jobs then the script by default will return error,\n  however this behaviour can be overrided using the \'force\' option.\n  Input:\n    KEYS[1] meta\n    KEYS[2] base\n    ARGV[1] count\n    ARGV[2] force\n]]\nlocal maxCount = tonumber(ARGV[1])\nlocal baseKey = KEYS[2]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Functions to remove jobs.\n]]\n-- Includes\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove deduplication key if needed\n  when a job is being removed.\n]]\nlocal function removeDeduplicationKeyIfNeededOnRemoval(prefixKey,\n  jobKey, jobId)\n  local deduplicationId = rcall("HGET", jobKey, "deid")\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local currentJobId = rcall(\'GET\', deduplicationKey)\n    if currentJobId and currentJobId == jobId then\n      return rcall("DEL", deduplicationKey)\n    end\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDeduplicationKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDeduplicationKey then\n    removeDeduplicationKeyIfNeededOnRemoval(baseKey, jobKey, jobId)\n  end\n  removeJobKeys(jobKey)\nend\nlocal function removeJobs(keys, hard, baseKey, max)\n  for i, key in ipairs(keys) do\n    removeJob(key, hard, baseKey, true --[[remove debounce key]])\n  end\n  return max - #keys\nend\n--[[\n  Functions to remove jobs.\n]]\n-- Includes\n--[[\n  Function to filter out jobs to ignore from a table.\n]]\nlocal function filterOutJobsToIgnore(jobs, jobsToIgnore)\n  local filteredJobs = {}\n  for i = 1, #jobs do\n    if not jobsToIgnore[jobs[i]] then\n      table.insert(filteredJobs, jobs[i])\n    end\n  end\n  return filteredJobs\nend\nlocal function getListItems(keyName, max)\n  return rcall(\'LRANGE\', keyName, 0, max - 1)\nend\nlocal function removeListJobs(keyName, hard, baseKey, max, jobsToIgnore)\n  local jobs = getListItems(keyName, max)\n  if jobsToIgnore then\n    jobs = filterOutJobsToIgnore(jobs, jobsToIgnore)\n  end\n  local count = removeJobs(jobs, hard, baseKey, max)\n  rcall("LTRIM", keyName, #jobs, -1)\n  return count\nend\n-- Includes\n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\n--[[\n  Function to get ZSet items.\n]]\nlocal function getZSetItems(keyName, max)\n  return rcall(\'ZRANGE\', keyName, 0, max - 1)\nend\nlocal function removeZSetJobs(keyName, hard, baseKey, max, jobsToIgnore)\n  local jobs = getZSetItems(keyName, max)\n  if jobsToIgnore then\n    jobs = filterOutJobsToIgnore(jobs, jobsToIgnore)\n  end\n  local count = removeJobs(jobs, hard, baseKey, max)\n  if(#jobs > 0) then\n    for from, to in batches(#jobs, 7000) do\n      rcall("ZREM", keyName, unpack(jobs, from, to))\n    end\n  end\n  return count\nend\nlocal function removeLockKeys(keys)\n  for i, key in ipairs(keys) do\n    rcall("DEL", baseKey .. key .. \':lock\')\n  end\nend\n-- 1) Check if paused, if not return with error.\nif rcall("HEXISTS", KEYS[1], "paused") ~= 1 then\n  return -1 -- Error, NotPaused\nend\n-- 2) Check if there are active jobs, if there are and not "force" return error.\nlocal activeKey = baseKey .. \'active\'\nlocal activeJobs = getListItems(activeKey, maxCount)\nif (#activeJobs > 0) then\n  if(ARGV[2] == "") then \n    return -2 -- Error, ExistActiveJobs\n  end\nend\nremoveLockKeys(activeJobs)\nmaxCount = removeJobs(activeJobs, true, baseKey, maxCount)\nrcall("LTRIM", activeKey, #activeJobs, -1)\nif(maxCount <= 0) then\n  return 1\nend\nlocal delayedKey = baseKey .. \'delayed\'\nmaxCount = removeZSetJobs(delayedKey, true, baseKey, maxCount)\nif(maxCount <= 0) then\n  return 1\nend\nlocal repeatKey = baseKey .. \'repeat\'\nlocal repeatJobsIds = getZSetItems(repeatKey, maxCount)\nfor i, key in ipairs(repeatJobsIds) do\n  local jobKey = repeatKey .. ":" .. key\n  rcall("DEL", jobKey)\nend\nif(#repeatJobsIds > 0) then\n  for from, to in batches(#repeatJobsIds, 7000) do\n    rcall("ZREM", repeatKey, unpack(repeatJobsIds, from, to))\n  end\nend\nmaxCount = maxCount - #repeatJobsIds\nif(maxCount <= 0) then\n  return 1\nend\nlocal completedKey = baseKey .. \'completed\'\nmaxCount = removeZSetJobs(completedKey, true, baseKey, maxCount)\nif(maxCount <= 0) then\n  return 1\nend\nlocal waitKey = baseKey .. \'paused\'\nmaxCount = removeListJobs(waitKey, true, baseKey, maxCount)\nif(maxCount <= 0) then\n  return 1\nend\nlocal prioritizedKey = baseKey .. \'prioritized\'\nmaxCount = removeZSetJobs(prioritizedKey, true, baseKey, maxCount)\nif(maxCount <= 0) then\n  return 1\nend\nlocal failedKey = baseKey .. \'failed\'\nmaxCount = removeZSetJobs(failedKey, true, baseKey, maxCount)\nif(maxCount <= 0) then\n  return 1\nend\nif(maxCount > 0) then\n  rcall("DEL",\n    baseKey .. \'events\',\n    baseKey .. \'delay\', \n    baseKey .. \'stalled-check\',\n    baseKey .. \'stalled\',\n    baseKey .. \'id\',\n    baseKey .. \'pc\',\n    baseKey .. \'meta\',\n    baseKey .. \'metrics:completed\',\n    baseKey .. \'metrics:completed:data\',\n    baseKey .. \'metrics:failed\',\n    baseKey .. \'metrics:failed:data\')\n  return 0\nelse\n  return 1\nend\n',keys:2}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{paginate:()=>r});const r={name:"paginate",content:'--[[\n    Paginate a set or hash\n    Input:\n      KEYS[1] key pointing to the set or hash to be paginated.\n      ARGV[1]  page start offset\n      ARGV[2]  page end offset (-1 for all the elements)\n      ARGV[3]  cursor\n      ARGV[4]  offset\n      ARGV[5]  max iterations\n      ARGV[6]  fetch jobs?\n    Output:\n      [cursor, offset, items, numItems]\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to achieve pagination for a set or hash.\n  This function simulates pagination in the most efficient way possible\n  for a set using sscan or hscan.\n  The main limitation is that sets are not order preserving, so the\n  pagination is not stable. This means that if the set is modified\n  between pages, the same element may appear in different pages.\n]] -- Maximum number of elements to be returned by sscan per iteration.\nlocal maxCount = 100\n-- Finds the cursor, and returns the first elements available for the requested page.\nlocal function findPage(key, command, pageStart, pageSize, cursor, offset,\n                        maxIterations, fetchJobs)\n    local items = {}\n    local jobs = {}\n    local iterations = 0\n    repeat\n        -- Iterate over the set using sscan/hscan.\n        local result = rcall(command, key, cursor, "COUNT", maxCount)\n        cursor = result[1]\n        local members = result[2]\n        local step = 1\n        if command == "HSCAN" then\n            step = 2\n        end\n        if #members == 0 then\n            -- If the result is empty, we can return the result.\n            return cursor, offset, items, jobs\n        end\n        local chunkStart = offset\n        local chunkEnd = offset + #members / step\n        local pageEnd = pageStart + pageSize\n        if chunkEnd < pageStart then\n            -- If the chunk is before the page, we can skip it.\n            offset = chunkEnd\n        elseif chunkStart > pageEnd then\n            -- If the chunk is after the page, we can return the result.\n            return cursor, offset, items, jobs\n        else\n            -- If the chunk is overlapping the page, we need to add the elements to the result.\n            for i = 1, #members, step do\n                if offset >= pageEnd then\n                    return cursor, offset, items, jobs\n                end\n                if offset >= pageStart then\n                    local index = #items + 1\n                    if fetchJobs ~= nil then\n                        jobs[#jobs+1] = rcall("HGETALL", members[i])\n                    end\n                    if step == 2 then\n                        items[index] = {members[i], members[i + 1]}\n                    else\n                        items[index] = members[i]\n                    end\n                end\n                offset = offset + 1\n            end\n        end\n        iterations = iterations + 1\n    until cursor == "0" or iterations >= maxIterations\n    return cursor, offset, items, jobs\nend\nlocal key = KEYS[1]\nlocal scanCommand = "SSCAN"\nlocal countCommand = "SCARD"\nlocal type = rcall("TYPE", key)["ok"]\nif type == "none" then\n    return {0, 0, {}, 0}\nelseif type == "hash" then\n    scanCommand = "HSCAN"\n    countCommand = "HLEN"\nelseif type ~= "set" then\n    return\n        redis.error_reply("Pagination is only supported for sets and hashes.")\nend\nlocal numItems = rcall(countCommand, key)\nlocal startOffset = tonumber(ARGV[1])\nlocal endOffset = tonumber(ARGV[2])\nif endOffset == -1 then \n  endOffset = numItems\nend\nlocal pageSize = (endOffset - startOffset) + 1\nlocal cursor, offset, items, jobs = findPage(key, scanCommand, startOffset,\n                                       pageSize, ARGV[3], tonumber(ARGV[4]),\n                                       tonumber(ARGV[5]), ARGV[6])\nreturn {cursor, offset, items, numItems, jobs}\n',keys:1}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{pause:()=>r});const r={name:"pause",content:'--[[\n  Pauses or resumes a queue globably.\n  Input:\n    KEYS[1] \'wait\' or \'paused\'\'\n    KEYS[2] \'paused\' or \'wait\'\n    KEYS[3] \'meta\'\n    KEYS[4] \'prioritized\'\n    KEYS[5] events stream key\n    KEYS[6] \'delayed\'\n    KEYS|7] \'marker\'\n    ARGV[1] \'paused\' or \'resumed\'\n  Event:\n    publish paused or resumed event.\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\nlocal markerKey = KEYS[7]\nlocal hasJobs = rcall("EXISTS", KEYS[1]) == 1\n--TODO: check this logic to be reused when changing a delay\nif hasJobs then rcall("RENAME", KEYS[1], KEYS[2]) end\nif ARGV[1] == "paused" then\n    rcall("HSET", KEYS[3], "paused", 1)\n    rcall("DEL", markerKey)\nelse\n    rcall("HDEL", KEYS[3], "paused")\n    if hasJobs or rcall("ZCARD", KEYS[4]) > 0 then\n        -- Add marker if there are waiting or priority jobs\n        rcall("ZADD", markerKey, 0, "0")\n    else\n        addDelayMarkerIfNeeded(markerKey, KEYS[6])\n    end\nend\nrcall("XADD", KEYS[5], "*", "event", ARGV[1]);\n',keys:7}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{promote:()=>r});const r={name:"promote",content:'--[[\n  Promotes a job that is currently "delayed" to the "waiting" state\n    Input:\n      KEYS[1] \'delayed\'\n      KEYS[2] \'wait\'\n      KEYS[3] \'paused\'\n      KEYS[4] \'meta\'\n      KEYS[5] \'prioritized\'\n      KEYS[6] \'active\'\n      KEYS[7] \'pc\' priority counter\n      KEYS[8] \'event stream\'\n      KEYS[9] \'marker\'\n      ARGV[1]  queue.toKey(\'\')\n      ARGV[2]  jobId\n    Output:\n       0 - OK\n      -3 - Job not in delayed zset.\n    Events:\n      \'waiting\'\n]]\nlocal rcall = redis.call\nlocal jobId = ARGV[2]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nif rcall("ZREM", KEYS[1], jobId) == 1 then\n    local jobKey = ARGV[1] .. jobId\n    local priority = tonumber(rcall("HGET", jobKey, "priority")) or 0\n    local metaKey = KEYS[4]\n    local markerKey = KEYS[9]\n    -- Remove delayed "marker" from the wait list if there is any.\n    -- Since we are adding a job we do not need the marker anymore.\n    -- Markers in waitlist DEPRECATED in v5: Remove in v6.\n    local target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[6], KEYS[2], KEYS[3])\n    local marker = rcall("LINDEX", target, 0)\n    if marker and string.sub(marker, 1, 2) == "0:" then rcall("LPOP", target) end\n    if priority == 0 then\n        -- LIFO or FIFO\n        addJobInTargetList(target, markerKey, "LPUSH", isPausedOrMaxed, jobId)\n    else\n        addJobWithPriority(markerKey, KEYS[5], priority, jobId, KEYS[7], isPausedOrMaxed)\n    end\n    -- Emit waiting event (wait..ing@token)\n    rcall("XADD", KEYS[8], "*", "event", "waiting", "jobId", jobId, "prev",\n          "delayed");\n    rcall("HSET", jobKey, "delay", 0)\n    return 0\nelse\n    return -3\nend\n',keys:9}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{releaseLock:()=>r});const r={name:"releaseLock",content:'--[[\n  Release lock\n    Input:\n      KEYS[1] \'lock\',\n      ARGV[1]  token\n      ARGV[2]  lock duration in milliseconds\n    Output:\n      "OK" if lock extented succesfully.\n]]\nlocal rcall = redis.call\nif rcall("GET", KEYS[1]) == ARGV[1] then\n  return rcall("DEL", KEYS[1])\nelse\n  return 0\nend\n',keys:1}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{removeChildDependency:()=>r});const r={name:"removeChildDependency",content:'--[[\n  Break parent-child dependency by removing\n  child reference from parent\n  Input:\n    KEYS[1] \'key\' prefix,\n    ARGV[1] job key\n    ARGV[2] parent key\n    Output:\n       0  - OK\n       1  - There is not relationship.\n      -1  - Missing job key\n      -5  - Missing parent key\n]]\nlocal rcall = redis.call\nlocal jobKey = ARGV[1]\nlocal parentKey = ARGV[2]\n-- Includes\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nif rcall("EXISTS", jobKey) ~= 1 then return -1 end\nif rcall("EXISTS", parentKey) ~= 1 then return -5 end\nif removeParentDependencyKey(jobKey, false, parentKey, KEYS[1], nil) then\n  rcall("HDEL", jobKey, "parentKey", "parent")\n  return 0\nelse\n  return 1\nend',keys:1}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{removeJob:()=>r});const r={name:"removeJob",content:'--[[\n    Remove a job from all the statuses it may be in as well as all its data.\n    In order to be able to remove a job, it cannot be active.\n    Input:\n      KEYS[1] jobKey\n      KEYS[2] repeat key\n      ARGV[1] jobId\n      ARGV[2] remove children\n      ARGV[3] queue prefix\n    Events:\n      \'removed\'\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to check if the job belongs to a job scheduler and\n  current delayed job matches with jobId\n]]\nlocal function isJobSchedulerJob(jobId, jobKey, jobSchedulersKey)\n  local repeatJobKey = rcall("HGET", jobKey, "rjk")\n  if repeatJobKey  then\n    local prevMillis = rcall("ZSCORE", jobSchedulersKey, repeatJobKey)\n    if prevMillis then\n      local currentDelayedJobId = "repeat:" .. repeatJobKey .. ":" .. prevMillis\n      return jobId == currentDelayedJobId\n    end\n  end\n  return false\nend\n--[[\n  Function to recursively check if there are no locks\n  on the jobs to be removed.\n  returns:\n    boolean\n]]\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\nlocal function isLocked( prefix, jobId, removeChildren)\n  local jobKey = prefix .. jobId;\n  -- Check if this job is locked\n  local lockKey = jobKey .. \':lock\'\n  local lock = rcall("GET", lockKey)\n  if not lock then\n    if removeChildren == "1" then\n      local dependencies = rcall("SMEMBERS", jobKey .. ":dependencies")\n      if (#dependencies > 0) then\n        for i, childJobKey in ipairs(dependencies) do\n          -- We need to get the jobId for this job.\n          local childJobId = getJobIdFromKey(childJobKey)\n          local childJobPrefix = getJobKeyPrefix(childJobKey, childJobId)\n          local result = isLocked( childJobPrefix, childJobId, removeChildren )\n          if result then\n            return true\n          end\n        end\n      end\n    end\n    return false\n  end\n  return true\nend\n--[[\n    Remove a job from all the statuses it may be in as well as all its data,\n    including its children. Active children can be ignored.\n    Events:\n      \'removed\'\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to remove deduplication key if needed\n  when a job is being removed.\n]]\nlocal function removeDeduplicationKeyIfNeededOnRemoval(prefixKey,\n  jobKey, jobId)\n  local deduplicationId = rcall("HGET", jobKey, "deid")\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local currentJobId = rcall(\'GET\', deduplicationKey)\n    if currentJobId and currentJobId == jobId then\n      return rcall("DEL", deduplicationKey)\n    end\n  end\nend\n--[[\n  Function to remove from any state.\n  returns:\n    prev state\n]]\nlocal function removeJobFromAnyState( prefix, jobId)\n  -- We start with the ZSCORE checks, since they have O(1) complexity\n  if rcall("ZSCORE", prefix .. "completed", jobId) then\n    rcall("ZREM", prefix .. "completed", jobId)\n    return "completed"\n  elseif rcall("ZSCORE", prefix .. "waiting-children", jobId) then\n    rcall("ZREM", prefix .. "waiting-children", jobId)\n    return "waiting-children"\n  elseif rcall("ZSCORE", prefix .. "delayed", jobId) then\n    rcall("ZREM", prefix .. "delayed", jobId)\n    return "delayed"\n  elseif rcall("ZSCORE", prefix .. "failed", jobId) then\n    rcall("ZREM", prefix .. "failed", jobId)\n    return "failed"\n  elseif rcall("ZSCORE", prefix .. "prioritized", jobId) then\n    rcall("ZREM", prefix .. "prioritized", jobId)\n    return "prioritized"\n  -- We remove only 1 element from the list, since we assume they are not added multiple times\n  elseif rcall("LREM", prefix .. "wait", 1, jobId) == 1 then\n    return "wait"\n  elseif rcall("LREM", prefix .. "paused", 1, jobId) == 1 then\n    return "paused"\n  elseif rcall("LREM", prefix .. "active", 1, jobId) == 1 then\n    return "active"\n  end\n  return "unknown"\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal removeJobChildren\nlocal removeJobWithChildren\nremoveJobChildren = function(prefix, jobKey, options)\n    -- Check if this job has children\n    -- If so, we are going to try to remove the children recursively in a depth-first way\n    -- because if some job is locked, we must exit with an error.\n    if not options.ignoreProcessed then\n        local processed = rcall("HGETALL", jobKey .. ":processed")\n        if #processed > 0 then\n            for i = 1, #processed, 2 do\n                local childJobId = getJobIdFromKey(processed[i])\n                local childJobPrefix = getJobKeyPrefix(processed[i], childJobId)\n                removeJobWithChildren(childJobPrefix, childJobId, jobKey, options)\n            end\n        end\n        local failed = rcall("HGETALL", jobKey .. ":failed")\n        if #failed > 0 then\n            for i = 1, #failed, 2 do\n                local childJobId = getJobIdFromKey(failed[i])\n                local childJobPrefix = getJobKeyPrefix(failed[i], childJobId)\n                removeJobWithChildren(childJobPrefix, childJobId, jobKey, options)\n            end\n        end\n        local unsuccessful = rcall("ZRANGE", jobKey .. ":unsuccessful", 0, -1)\n        if #unsuccessful > 0 then\n            for i = 1, #unsuccessful, 1 do\n                local childJobId = getJobIdFromKey(unsuccessful[i])\n                local childJobPrefix = getJobKeyPrefix(unsuccessful[i], childJobId)\n                removeJobWithChildren(childJobPrefix, childJobId, jobKey, options)\n            end\n        end\n    end\n    local dependencies = rcall("SMEMBERS", jobKey .. ":dependencies")\n    if #dependencies > 0 then\n        for i, childJobKey in ipairs(dependencies) do\n            local childJobId = getJobIdFromKey(childJobKey)\n            local childJobPrefix = getJobKeyPrefix(childJobKey, childJobId)\n            removeJobWithChildren(childJobPrefix, childJobId, jobKey, options)\n        end\n    end\nend\nremoveJobWithChildren = function(prefix, jobId, parentKey, options)\n    local jobKey = prefix .. jobId\n    if options.ignoreLocked then\n        if isLocked(prefix, jobId) then\n            return\n        end\n    end\n    -- Check if job is in the failed zset\n    local failedSet = prefix .. "failed"\n    if not (options.ignoreProcessed and rcall("ZSCORE", failedSet, jobId)) then\n        removeParentDependencyKey(jobKey, false, parentKey, nil)\n        if options.removeChildren then\n            removeJobChildren(prefix, jobKey, options)\n        end\n        local prev = removeJobFromAnyState(prefix, jobId)\n        removeDeduplicationKeyIfNeededOnRemoval(prefix, jobKey, jobId)\n        if removeJobKeys(jobKey) > 0 then\n            local metaKey = prefix .. "meta"\n            local maxEvents = getOrSetMaxEvents(metaKey)\n            rcall("XADD", prefix .. "events", "MAXLEN", "~", maxEvents, "*", "event", "removed",\n                "jobId", jobId, "prev", prev)\n        end\n    end\nend\nlocal jobId = ARGV[1]\nlocal shouldRemoveChildren = ARGV[2]\nlocal prefix = ARGV[3]\nlocal jobKey = KEYS[1]\nlocal repeatKey = KEYS[2]\nif isJobSchedulerJob(jobId, jobKey, repeatKey) then\n    return -8\nend\nif not isLocked(prefix, jobId, shouldRemoveChildren) then\n    local options = {\n        removeChildren = shouldRemoveChildren == "1",\n        ignoreProcessed = false,\n        ignoreLocked = false\n    }\n    removeJobWithChildren(prefix, jobId, nil, options)\n    return 1\nend\nreturn 0\n',keys:2}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{removeJobScheduler:()=>r});const r={name:"removeJobScheduler",content:'--[[\n  Removes a job scheduler and its next scheduled job.\n  Input:\n    KEYS[1] job schedulers key\n    KEYS[2] delayed jobs key\n    KEYS[3] events key\n    ARGV[1] job scheduler id\n    ARGV[2] prefix key\n  Output:\n    0 - OK\n    1 - Missing repeat job\n  Events:\n    \'removed\'\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\nlocal jobSchedulerId = ARGV[1]\nlocal prefix = ARGV[2]\nlocal millis = rcall("ZSCORE", KEYS[1], jobSchedulerId)\nif millis then\n  -- Delete next programmed job.\n  local delayedJobId = "repeat:" .. jobSchedulerId .. ":" .. millis\n  if(rcall("ZREM", KEYS[2], delayedJobId) == 1) then\n    removeJobKeys(prefix .. delayedJobId)\n    rcall("XADD", KEYS[3], "*", "event", "removed", "jobId", delayedJobId, "prev", "delayed")\n  end\nend\nif(rcall("ZREM", KEYS[1], jobSchedulerId) == 1) then\n  rcall("DEL", KEYS[1] .. ":" .. jobSchedulerId)\n  return 0\nend\nreturn 1\n',keys:3}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{removeRepeatable:()=>r});const r={name:"removeRepeatable",content:'--[[\n  Removes a repeatable job\n  Input:\n    KEYS[1] repeat jobs key\n    KEYS[2] delayed jobs key\n    KEYS[3] events key\n    ARGV[1] old repeat job id\n    ARGV[2] options concat\n    ARGV[3] repeat job key\n    ARGV[4] prefix key\n  Output:\n    0 - OK\n    1 - Missing repeat job\n  Events:\n    \'removed\'\n]]\nlocal rcall = redis.call\nlocal millis = rcall("ZSCORE", KEYS[1], ARGV[2])\n-- Includes\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n-- legacy removal TODO: remove in next breaking change\nif millis then\n  -- Delete next programmed job.\n  local repeatJobId = ARGV[1] .. millis\n  if(rcall("ZREM", KEYS[2], repeatJobId) == 1) then\n    removeJobKeys(ARGV[4] .. repeatJobId)\n    rcall("XADD", KEYS[3], "*", "event", "removed", "jobId", repeatJobId, "prev", "delayed");\n  end\nend\nif(rcall("ZREM", KEYS[1], ARGV[2]) == 1) then\n  return 0\nend\n-- new removal\nmillis = rcall("ZSCORE", KEYS[1], ARGV[3])\nif millis then\n  -- Delete next programmed job.\n  local repeatJobId = "repeat:" .. ARGV[3] .. ":" .. millis\n  if(rcall("ZREM", KEYS[2], repeatJobId) == 1) then\n    removeJobKeys(ARGV[4] .. repeatJobId)\n    rcall("XADD", KEYS[3], "*", "event", "removed", "jobId", repeatJobId, "prev", "delayed")\n  end\nend\nif(rcall("ZREM", KEYS[1], ARGV[3]) == 1) then\n  rcall("DEL", KEYS[1] .. ":" .. ARGV[3])\n  return 0\nend\nreturn 1\n',keys:3}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{removeUnprocessedChildren:()=>r});const r={name:"removeUnprocessedChildren",content:'--[[\n    Remove a job from all the statuses it may be in as well as all its data.\n    In order to be able to remove a job, it cannot be active.\n    Input:\n      KEYS[1] jobKey\n      KEYS[2] meta key\n      ARGV[1] prefix\n      ARGV[2] jobId\n    Events:\n      \'removed\' for every children removed\n]]\n-- Includes\n--[[\n    Remove a job from all the statuses it may be in as well as all its data,\n    including its children. Active children can be ignored.\n    Events:\n      \'removed\'\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to check if the job belongs to a job scheduler and\n  current delayed job matches with jobId\n]]\nlocal function isJobSchedulerJob(jobId, jobKey, jobSchedulersKey)\n  local repeatJobKey = rcall("HGET", jobKey, "rjk")\n  if repeatJobKey  then\n    local prevMillis = rcall("ZSCORE", jobSchedulersKey, repeatJobKey)\n    if prevMillis then\n      local currentDelayedJobId = "repeat:" .. repeatJobKey .. ":" .. prevMillis\n      return jobId == currentDelayedJobId\n    end\n  end\n  return false\nend\n--[[\n  Function to remove deduplication key if needed\n  when a job is being removed.\n]]\nlocal function removeDeduplicationKeyIfNeededOnRemoval(prefixKey,\n  jobKey, jobId)\n  local deduplicationId = rcall("HGET", jobKey, "deid")\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local currentJobId = rcall(\'GET\', deduplicationKey)\n    if currentJobId and currentJobId == jobId then\n      return rcall("DEL", deduplicationKey)\n    end\n  end\nend\n--[[\n  Function to remove from any state.\n  returns:\n    prev state\n]]\nlocal function removeJobFromAnyState( prefix, jobId)\n  -- We start with the ZSCORE checks, since they have O(1) complexity\n  if rcall("ZSCORE", prefix .. "completed", jobId) then\n    rcall("ZREM", prefix .. "completed", jobId)\n    return "completed"\n  elseif rcall("ZSCORE", prefix .. "waiting-children", jobId) then\n    rcall("ZREM", prefix .. "waiting-children", jobId)\n    return "waiting-children"\n  elseif rcall("ZSCORE", prefix .. "delayed", jobId) then\n    rcall("ZREM", prefix .. "delayed", jobId)\n    return "delayed"\n  elseif rcall("ZSCORE", prefix .. "failed", jobId) then\n    rcall("ZREM", prefix .. "failed", jobId)\n    return "failed"\n  elseif rcall("ZSCORE", prefix .. "prioritized", jobId) then\n    rcall("ZREM", prefix .. "prioritized", jobId)\n    return "prioritized"\n  -- We remove only 1 element from the list, since we assume they are not added multiple times\n  elseif rcall("LREM", prefix .. "wait", 1, jobId) == 1 then\n    return "wait"\n  elseif rcall("LREM", prefix .. "paused", 1, jobId) == 1 then\n    return "paused"\n  elseif rcall("LREM", prefix .. "active", 1, jobId) == 1 then\n    return "active"\n  end\n  return "unknown"\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\n--[[\n  Function to recursively check if there are no locks\n  on the jobs to be removed.\n  returns:\n    boolean\n]]\nlocal function isLocked( prefix, jobId, removeChildren)\n  local jobKey = prefix .. jobId;\n  -- Check if this job is locked\n  local lockKey = jobKey .. \':lock\'\n  local lock = rcall("GET", lockKey)\n  if not lock then\n    if removeChildren == "1" then\n      local dependencies = rcall("SMEMBERS", jobKey .. ":dependencies")\n      if (#dependencies > 0) then\n        for i, childJobKey in ipairs(dependencies) do\n          -- We need to get the jobId for this job.\n          local childJobId = getJobIdFromKey(childJobKey)\n          local childJobPrefix = getJobKeyPrefix(childJobKey, childJobId)\n          local result = isLocked( childJobPrefix, childJobId, removeChildren )\n          if result then\n            return true\n          end\n        end\n      end\n    end\n    return false\n  end\n  return true\nend\nlocal removeJobChildren\nlocal removeJobWithChildren\nremoveJobChildren = function(prefix, jobKey, options)\n    -- Check if this job has children\n    -- If so, we are going to try to remove the children recursively in a depth-first way\n    -- because if some job is locked, we must exit with an error.\n    if not options.ignoreProcessed then\n        local processed = rcall("HGETALL", jobKey .. ":processed")\n        if #processed > 0 then\n            for i = 1, #processed, 2 do\n                local childJobId = getJobIdFromKey(processed[i])\n                local childJobPrefix = getJobKeyPrefix(processed[i], childJobId)\n                removeJobWithChildren(childJobPrefix, childJobId, jobKey, options)\n            end\n        end\n        local failed = rcall("HGETALL", jobKey .. ":failed")\n        if #failed > 0 then\n            for i = 1, #failed, 2 do\n                local childJobId = getJobIdFromKey(failed[i])\n                local childJobPrefix = getJobKeyPrefix(failed[i], childJobId)\n                removeJobWithChildren(childJobPrefix, childJobId, jobKey, options)\n            end\n        end\n        local unsuccessful = rcall("ZRANGE", jobKey .. ":unsuccessful", 0, -1)\n        if #unsuccessful > 0 then\n            for i = 1, #unsuccessful, 1 do\n                local childJobId = getJobIdFromKey(unsuccessful[i])\n                local childJobPrefix = getJobKeyPrefix(unsuccessful[i], childJobId)\n                removeJobWithChildren(childJobPrefix, childJobId, jobKey, options)\n            end\n        end\n    end\n    local dependencies = rcall("SMEMBERS", jobKey .. ":dependencies")\n    if #dependencies > 0 then\n        for i, childJobKey in ipairs(dependencies) do\n            local childJobId = getJobIdFromKey(childJobKey)\n            local childJobPrefix = getJobKeyPrefix(childJobKey, childJobId)\n            removeJobWithChildren(childJobPrefix, childJobId, jobKey, options)\n        end\n    end\nend\nremoveJobWithChildren = function(prefix, jobId, parentKey, options)\n    local jobKey = prefix .. jobId\n    if options.ignoreLocked then\n        if isLocked(prefix, jobId) then\n            return\n        end\n    end\n    -- Check if job is in the failed zset\n    local failedSet = prefix .. "failed"\n    if not (options.ignoreProcessed and rcall("ZSCORE", failedSet, jobId)) then\n        removeParentDependencyKey(jobKey, false, parentKey, nil)\n        if options.removeChildren then\n            removeJobChildren(prefix, jobKey, options)\n        end\n        local prev = removeJobFromAnyState(prefix, jobId)\n        removeDeduplicationKeyIfNeededOnRemoval(prefix, jobKey, jobId)\n        if removeJobKeys(jobKey) > 0 then\n            local metaKey = prefix .. "meta"\n            local maxEvents = getOrSetMaxEvents(metaKey)\n            rcall("XADD", prefix .. "events", "MAXLEN", "~", maxEvents, "*", "event", "removed",\n                "jobId", jobId, "prev", prev)\n        end\n    end\nend\nlocal prefix = ARGV[1]\nlocal jobId = ARGV[2]\nlocal jobKey = KEYS[1]\nlocal metaKey = KEYS[2]\nlocal options = {\n  removeChildren = "1",\n  ignoreProcessed = true,\n  ignoreLocked = true\n}\nremoveJobChildren(prefix, jobKey, options) \n',keys:2}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{reprocessJob:()=>r});const r={name:"reprocessJob",content:'--[[\n  Attempts to reprocess a job\n  Input:\n    KEYS[1] job key\n    KEYS[2] events stream\n    KEYS[3] job state\n    KEYS[4] wait key\n    KEYS[5] meta\n    KEYS[6] paused key\n    KEYS[7] active key\n    KEYS[8] marker key\n    ARGV[1] job.id\n    ARGV[2] (job.opts.lifo ? \'R\' : \'L\') + \'PUSH\'\n    ARGV[3] propVal - failedReason/returnvalue\n    ARGV[4] prev state - failed/completed\n  Output:\n     1 means the operation was a success\n    -1 means the job does not exist\n    -3 means the job was not found in the expected set.\n]]\nlocal rcall = redis.call;\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nif rcall("EXISTS", KEYS[1]) == 1 then\n  local jobId = ARGV[1]\n  if (rcall("ZREM", KEYS[3], jobId) == 1) then\n    rcall("HDEL", KEYS[1], "finishedOn", "processedOn", ARGV[3])\n    local target, isPausedOrMaxed = getTargetQueueList(KEYS[5], KEYS[7], KEYS[4], KEYS[6])\n    addJobInTargetList(target, KEYS[8], ARGV[2], isPausedOrMaxed, jobId)\n    local maxEvents = getOrSetMaxEvents(KEYS[5])\n    -- Emit waiting event\n    rcall("XADD", KEYS[2], "MAXLEN", "~", maxEvents, "*", "event", "waiting",\n      "jobId", jobId, "prev", ARGV[4]);\n    return 1\n  else\n    return -3\n  end\nelse\n  return -1\nend\n',keys:8}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{retryJob:()=>r});const r={name:"retryJob",content:'--[[\n  Retries a failed job by moving it back to the wait queue.\n    Input:\n      KEYS[1]  \'active\',\n      KEYS[2]  \'wait\'\n      KEYS[3]  \'paused\'\n      KEYS[4]  job key\n      KEYS[5]  \'meta\'\n      KEYS[6]  events stream\n      KEYS[7]  delayed key\n      KEYS[8]  prioritized key\n      KEYS[9]  \'pc\' priority counter\n      KEYS[10] \'marker\'\n      KEYS[11] \'stalled\'\n      ARGV[1]  key prefix\n      ARGV[2]  timestamp\n      ARGV[3]  pushCmd\n      ARGV[4]  jobId\n      ARGV[5]  token\n      ARGV[6]  optional job fields to update\n    Events:\n      \'waiting\'\n    Output:\n     0  - OK\n     -1 - Missing key\n     -2 - Missing lock\n     -3 - Job not in active set\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\n--[[\n  Updates the delay set, by moving delayed jobs that should\n  be processed now to "wait".\n     Events:\n      \'waiting\'\n]]\n-- Includes\n-- Try to get as much as 1000 jobs at once\nlocal function promoteDelayedJobs(delayedKey, markerKey, targetKey, prioritizedKey,\n                                  eventStreamKey, prefix, timestamp, priorityCounterKey, isPaused)\n    local jobs = rcall("ZRANGEBYSCORE", delayedKey, 0, (timestamp + 1) * 0x1000 - 1, "LIMIT", 0, 1000)\n    if (#jobs > 0) then\n        rcall("ZREM", delayedKey, unpack(jobs))\n        for _, jobId in ipairs(jobs) do\n            local jobKey = prefix .. jobId\n            local priority =\n                tonumber(rcall("HGET", jobKey, "priority")) or 0\n            if priority == 0 then\n                -- LIFO or FIFO\n                rcall("LPUSH", targetKey, jobId)\n            else\n                local score = getPriorityScore(priority, priorityCounterKey)\n                rcall("ZADD", prioritizedKey, score, jobId)\n            end\n            -- Emit waiting event\n            rcall("XADD", eventStreamKey, "*", "event", "waiting", "jobId",\n                  jobId, "prev", "delayed")\n            rcall("HSET", jobKey, "delay", 0)\n        end\n        addBaseMarkerIfNeeded(markerKey, isPaused)\n    end\nend\nlocal function removeLock(jobKey, stalledKey, token, jobId)\n  if token ~= "0" then\n    local lockKey = jobKey .. \':lock\'\n    local lockToken = rcall("GET", lockKey)\n    if lockToken == token then\n      rcall("DEL", lockKey)\n      rcall("SREM", stalledKey, jobId)\n    else\n      if lockToken then\n        -- Lock exists but token does not match\n        return -6\n      else\n        -- Lock is missing completely\n        return -2\n      end\n    end\n  end\n  return 0\nend\n--[[\n  Function to update a bunch of fields in a job.\n]]\nlocal function updateJobFields(jobKey, msgpackedFields)\n  if msgpackedFields and #msgpackedFields > 0 then\n    local fieldsToUpdate = cmsgpack.unpack(msgpackedFields)\n    if fieldsToUpdate then\n      rcall("HMSET", jobKey, unpack(fieldsToUpdate))\n    end\n  end\nend\nlocal target, isPausedOrMaxed = getTargetQueueList(KEYS[5], KEYS[1], KEYS[2], KEYS[3])\nlocal markerKey = KEYS[10]\n-- Check if there are delayed jobs that we can move to wait.\n-- test example: when there are delayed jobs between retries\npromoteDelayedJobs(KEYS[7], markerKey, target, KEYS[8], KEYS[6], ARGV[1], ARGV[2], KEYS[9], isPausedOrMaxed)\nlocal jobKey = KEYS[4]\nif rcall("EXISTS", jobKey) == 1 then\n  local errorCode = removeLock(jobKey, KEYS[11], ARGV[5], ARGV[4]) \n  if errorCode < 0 then\n    return errorCode\n  end\n  updateJobFields(jobKey, ARGV[6])\n  local numRemovedElements = rcall("LREM", KEYS[1], -1, ARGV[4])\n  if (numRemovedElements < 1) then return -3 end\n  local priority = tonumber(rcall("HGET", jobKey, "priority")) or 0\n  --need to re-evaluate after removing job from active\n  isPausedOrMaxed = isQueuePausedOrMaxed(KEYS[5], KEYS[1])\n  -- Standard or priority add\n  if priority == 0 then\n    addJobInTargetList(target, markerKey, ARGV[3], isPausedOrMaxed, ARGV[4])\n  else\n    addJobWithPriority(markerKey, KEYS[8], priority, ARGV[4], KEYS[9], isPausedOrMaxed)\n  end\n  rcall("HINCRBY", jobKey, "atm", 1)\n  local maxEvents = getOrSetMaxEvents(KEYS[5])\n  -- Emit waiting event\n  rcall("XADD", KEYS[6], "MAXLEN", "~", maxEvents, "*", "event", "waiting",\n    "jobId", ARGV[4], "prev", "failed")\n  return 0\nelse\n  return -1\nend\n',keys:11}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{saveStacktrace:()=>r});const r={name:"saveStacktrace",content:'--[[\n  Save stacktrace and failedReason.\n  Input:\n    KEYS[1] job key\n    ARGV[1]  stacktrace\n    ARGV[2]  failedReason\n  Output:\n     0 - OK\n    -1 - Missing key\n]]\nlocal rcall = redis.call\nif rcall("EXISTS", KEYS[1]) == 1 then\n  rcall("HMSET", KEYS[1], "stacktrace", ARGV[1], "failedReason", ARGV[2])\n  return 0\nelse\n  return -1\nend\n',keys:1}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{updateData:()=>r});const r={name:"updateData",content:'--[[\n  Update job data\n  Input:\n    KEYS[1] Job id key\n    ARGV[1] data\n  Output:\n    0 - OK\n   -1 - Missing job.\n]]\nlocal rcall = redis.call\nif rcall("EXISTS",KEYS[1]) == 1 then -- // Make sure job exists\n  rcall("HSET", KEYS[1], "data", ARGV[1])\n  return 0\nelse\n  return -1\nend\n',keys:1}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{updateJobScheduler:()=>r});const r={name:"updateJobScheduler",content:'--[[\n  Updates a job scheduler and adds next delayed job\n  Input:\n    KEYS[1]  \'repeat\' key\n    KEYS[2]  \'delayed\'\n    KEYS[3]  \'wait\' key\n    KEYS[4]  \'paused\' key\n    KEYS[5]  \'meta\'\n    KEYS[6]  \'prioritized\' key\n    KEYS[7]  \'marker\',\n    KEYS[8]  \'id\'\n    KEYS[9]  events stream key\n    KEYS[10] \'pc\' priority counter\n    KEYS[11] producer key\n    KEYS[12] \'active\' key\n    ARGV[1] next milliseconds\n    ARGV[2] jobs scheduler id\n    ARGV[3] Json stringified delayed data\n    ARGV[4] msgpacked delayed opts\n    ARGV[5] timestamp\n    ARGV[6] prefix key\n    ARGV[7] producer id\n    Output:\n      next delayed job id  - OK\n]]\nlocal rcall = redis.call\nlocal repeatKey = KEYS[1]\nlocal delayedKey = KEYS[2]\nlocal waitKey = KEYS[3]\nlocal pausedKey = KEYS[4]\nlocal metaKey = KEYS[5]\nlocal prioritizedKey = KEYS[6]\nlocal nextMillis = ARGV[1]\nlocal jobSchedulerId = ARGV[2]\nlocal timestamp = ARGV[5]\nlocal prefixKey = ARGV[6]\nlocal producerId = ARGV[7]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Adds a delayed job to the queue by doing the following:\n    - Creates a new job key with the job data.\n    - adds to delayed zset.\n    - Emits a global event \'delayed\' if the job is delayed.\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Bake in the job id first 12 bits into the timestamp\n  to guarantee correct execution order of delayed jobs\n  (up to 4096 jobs per given timestamp or 4096 jobs apart per timestamp)\n  WARNING: Jobs that are so far apart that they wrap around will cause FIFO to fail\n]]\nlocal function getDelayedScore(delayedKey, timestamp, delay)\n  local delayedTimestamp = (delay > 0 and (tonumber(timestamp) + delay)) or tonumber(timestamp)\n  local minScore = delayedTimestamp * 0x1000\n  local maxScore = (delayedTimestamp + 1 ) * 0x1000 - 1\n  local result = rcall("ZREVRANGEBYSCORE", delayedKey, maxScore,\n    minScore, "WITHSCORES","LIMIT", 0, 1)\n  if #result then\n    local currentMaxScore = tonumber(result[2])\n    if currentMaxScore ~= nil then\n      if currentMaxScore >= maxScore then\n        return maxScore, delayedTimestamp\n      else\n        return currentMaxScore + 1, delayedTimestamp\n      end\n    end\n  end\n  return minScore, delayedTimestamp\nend\nlocal function addDelayedJob(jobId, delayedKey, eventsKey, timestamp,\n  maxEvents, markerKey, delay)\n  local score, delayedTimestamp = getDelayedScore(delayedKey, timestamp, tonumber(delay))\n  rcall("ZADD", delayedKey, score, jobId)\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "delayed",\n    "jobId", jobId, "delay", delayedTimestamp)\n  -- mark that a delayed job is available\n  addDelayMarkerIfNeeded(markerKey, delayedKey)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePaused(queueMetaKey)\n  return rcall("HEXISTS", queueMetaKey, "paused") == 1\nend\n--[[\n  Function to store a job\n]]\nlocal function storeJob(eventsKey, jobIdKey, jobId, name, data, opts, timestamp,\n                        parentKey, parentData, repeatJobKey)\n    local jsonOpts = cjson.encode(opts)\n    local delay = opts[\'delay\'] or 0\n    local priority = opts[\'priority\'] or 0\n    local debounceId = opts[\'de\'] and opts[\'de\'][\'id\']\n    local optionalValues = {}\n    if parentKey ~= nil then\n        table.insert(optionalValues, "parentKey")\n        table.insert(optionalValues, parentKey)\n        table.insert(optionalValues, "parent")\n        table.insert(optionalValues, parentData)\n    end\n    if repeatJobKey then\n        table.insert(optionalValues, "rjk")\n        table.insert(optionalValues, repeatJobKey)\n    end\n    if debounceId then\n        table.insert(optionalValues, "deid")\n        table.insert(optionalValues, debounceId)\n    end\n    rcall("HMSET", jobIdKey, "name", name, "data", data, "opts", jsonOpts,\n          "timestamp", timestamp, "delay", delay, "priority", priority,\n          unpack(optionalValues))\n    rcall("XADD", eventsKey, "*", "event", "added", "jobId", jobId, "name", name)\n    return delay, priority\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\nlocal function addJobFromScheduler(jobKey, jobId, rawOpts, waitKey, pausedKey, activeKey, metaKey, \n  prioritizedKey, priorityCounter, delayedKey, markerKey, eventsKey, name, maxEvents, timestamp,\n  data, jobSchedulerId)\n  local opts = cmsgpack.unpack(rawOpts)\n  local delay, priority = storeJob(eventsKey, jobKey, jobId, name, data,\n    opts, timestamp, nil, nil, jobSchedulerId)\n  if delay ~= 0 then\n    addDelayedJob(jobId, delayedKey, eventsKey, timestamp, maxEvents, markerKey, delay)\n  else\n    local target, isPausedOrMaxed = getTargetQueueList(metaKey, activeKey, waitKey, pausedKey)\n    -- Standard or priority add\n    if priority == 0 then\n      local pushCmd = opts[\'lifo\'] and \'RPUSH\' or \'LPUSH\'\n      addJobInTargetList(target, markerKey, pushCmd, isPausedOrMaxed, jobId)\n    else\n      -- Priority add\n      addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounter, isPausedOrMaxed)\n    end\n    -- Emit waiting event\n    rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents,  "*", "event", "waiting", "jobId", jobId)\n  end\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\nlocal schedulerKey = repeatKey .. ":" .. jobSchedulerId\nlocal nextDelayedJobId = "repeat:" .. jobSchedulerId .. ":" .. nextMillis\nlocal nextDelayedJobKey = schedulerKey .. ":" .. nextMillis\n-- Validate that scheduler exists.\nlocal prevMillis = rcall("ZSCORE", repeatKey, jobSchedulerId)\nif prevMillis then\n    local currentDelayedJobId = "repeat:" .. jobSchedulerId .. ":" .. prevMillis\n    if producerId == currentDelayedJobId then\n        local eventsKey = KEYS[9]\n        local maxEvents = getOrSetMaxEvents(metaKey)\n        if rcall("EXISTS", nextDelayedJobKey) ~= 1 then\n            local schedulerAttributes = rcall("HMGET", schedulerKey, "name", "data")\n            rcall("ZADD", repeatKey, nextMillis, jobSchedulerId)\n            rcall("HINCRBY", schedulerKey, "ic", 1)\n            rcall("INCR", KEYS[8])\n            -- TODO: remove this workaround in next breaking change,\n            -- all job-schedulers must save job data\n            local templateData = schedulerAttributes[2] or ARGV[3]\n            if templateData and templateData ~= \'{}\' then\n                rcall("HSET", schedulerKey, "data", templateData)\n            end\n            addJobFromScheduler(nextDelayedJobKey, nextDelayedJobId, ARGV[4], waitKey, pausedKey, \n                KEYS[12], metaKey, prioritizedKey, KEYS[10], delayedKey, KEYS[7], eventsKey, \n                schedulerAttributes[1], maxEvents, ARGV[5], templateData or \'{}\', jobSchedulerId)\n            -- TODO: remove this workaround in next breaking change\n            if KEYS[11] ~= "" then\n                rcall("HSET", KEYS[11], "nrjid", nextDelayedJobId)\n            end\n            return nextDelayedJobId .. "" -- convert to string\n        else\n            rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n                "duplicated", "jobId", nextDelayedJobId)\n        end\n    end\nend\n',keys:12}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{updateProgress:()=>r});const r={name:"updateProgress",content:'--[[\n  Update job progress\n  Input:\n    KEYS[1] Job id key\n    KEYS[2] event stream key\n    KEYS[3] meta key\n    ARGV[1] id\n    ARGV[2] progress\n  Output:\n     0 - OK\n    -1 - Missing job.\n  Event:\n    progress(jobId, progress)\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\nif rcall("EXISTS", KEYS[1]) == 1 then -- // Make sure job exists\n    local maxEvents = getOrSetMaxEvents(KEYS[3])\n    rcall("HSET", KEYS[1], "progress", ARGV[2])\n    rcall("XADD", KEYS[2], "MAXLEN", "~", maxEvents, "*", "event", "progress",\n          "jobId", ARGV[1], "data", ARGV[2]);\n    return 0\nelse\n    return -1\nend\n',keys:3}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{updateRepeatableJobMillis:()=>r});const r={name:"updateRepeatableJobMillis",content:'--[[\n  Adds a repeatable job\n    Input:\n      KEYS[1] \'repeat\' key\n      ARGV[1] next milliseconds\n      ARGV[2] custom key\n      ARGV[3] legacy custom key TODO: remove this logic in next breaking change\n      Output:\n        repeatableKey  - OK\n]]\nlocal rcall = redis.call\nlocal repeatKey = KEYS[1]\nlocal nextMillis = ARGV[1]\nlocal customKey = ARGV[2]\nlocal legacyCustomKey = ARGV[3]\nif rcall("ZSCORE", repeatKey, customKey) then\n    rcall("ZADD", repeatKey, nextMillis, customKey)\n    return customKey\nelseif rcall("ZSCORE", repeatKey, legacyCustomKey) ~= false then\n    rcall("ZADD", repeatKey, nextMillis, legacyCustomKey)\n    return legacyCustomKey\nend\nreturn \'\'\n',keys:1}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>a});var r=n(291),i=n(292),o=n(293);const a=function(e,t,n){if(r.default.randomUUID&&!t&&!e)return r.default.randomUUID();const a=(e=e||{}).random||(e.rng||i.default)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,t){n=n||0;for(let e=0;e<16;++e)t[n+e]=a[e];return t}return(0,o.unsafeStringify)(a)}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)}},(e,t,n)=>{"use strict";let r;n.r(t),n.d(t,{default:()=>o});const i=new Uint8Array(16);function o(){if(!r&&(r="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!r))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return r(i)}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>a,unsafeStringify:()=>o});var r=n(294);const i=[];for(let e=0;e<256;++e)i.push((e+256).toString(16).slice(1));function o(e,t=0){return i[e[t+0]]+i[e[t+1]]+i[e[t+2]]+i[e[t+3]]+"-"+i[e[t+4]]+i[e[t+5]]+"-"+i[e[t+6]]+i[e[t+7]]+"-"+i[e[t+8]]+i[e[t+9]]+"-"+i[e[t+10]]+i[e[t+11]]+i[e[t+12]]+i[e[t+13]]+i[e[t+14]]+i[e[t+15]]}const a=function(e,t=0){const n=o(e,t);if(!(0,r.default)(n))throw TypeError("Stringified UUID is invalid");return n}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>i});var r=n(295);const i=function(e){return"string"==typeof e&&r.default.test(e)}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i},(e,t,n)=>{"use strict";n.r(t),n.d(t,{JobScheduler:()=>c,defaultRepeatStrategy:()=>u});var r=n(238),i=n(297),o=n(237),a=n(306),s=n(12),l=n(22);class c extends a.QueueBase{constructor(e,t,n){super(e,t,n),this.repeatStrategy=t.settings&&t.settings.repeatStrategy||u}async upsertJobScheduler(e,t,n,i,a,{override:l,producerId:c}){const{every:u,limit:d,pattern:p,offset:h}=t;if(p&&u)throw new Error("Both .pattern and .every options are defined for this repeatable job");if(!p&&!u)throw new Error("Either .pattern or .every options must be defined for this repeatable job");if(t.immediately&&t.startDate)throw new Error("Both .immediately and .startDate options are defined for this repeatable job");t.immediately&&t.every&&console.warn("Using option immediately with every does not affect the job's schedule. Job will run immediately anyway.");const f=t.count?t.count+1:1;if(void 0!==t.limit&&f>t.limit)return;let y=Date.now();const{endDate:m}=t;if(m&&y>new Date(m).getTime())return;const b=a.prevMillis||0;y=b<y?y:b;const{startDate:g,immediately:v}=t,E=(0,r.__rest)(t,["startDate","immediately"]);let w,S=(y>b?y:b)+(h||0);g&&(S=new Date(g).getTime(),S=S>y?S:y);let K=null;if(u){const e=Math.floor((S-(h||0))/u)*u;K="number"==typeof h?h:S-e;w=b||h?e+u:e}else p&&(w=await this.repeatStrategy(y,t,n),w<y&&(w=y));return w?this.trace(s.SpanKind.PRODUCER,"add",`${this.name}.${n}`,async(r,h)=>{var y,b;let g=a.telemetry;if(h){const e=null===(y=a.telemetry)||void 0===y?void 0:y.omitContext,t=(null===(b=a.telemetry)||void 0===b?void 0:b.metadata)||!e&&h;(t||e)&&(g={metadata:t,omitContext:e})}const v=this.getNextJobOpts(w,e,Object.assign(Object.assign({},a),{repeat:E,telemetry:g}),f,K);if(l){const l=await this.scripts.addJobScheduler(e,w,JSON.stringify(void 0===i?{}:i),o.Job.optsAsJSON(a),{name:n,endDate:m?new Date(m).getTime():void 0,tz:t.tz,pattern:p,every:u,limit:d,offset:K},o.Job.optsAsJSON(v),c),h=new this.Job(this,n,i,v,l);return h.id=l,null==r||r.setAttributes({[s.TelemetryAttributes.JobSchedulerId]:e,[s.TelemetryAttributes.JobId]:h.id}),h}{const t=await this.scripts.updateJobSchedulerNextMillis(e,w,JSON.stringify(void 0===i?{}:i),o.Job.optsAsJSON(v),c);if(t){const o=new this.Job(this,n,i,v,t);return o.id=t,null==r||r.setAttributes({[s.TelemetryAttributes.JobSchedulerId]:e,[s.TelemetryAttributes.JobId]:o.id}),o}}}):void 0}getNextJobOpts(e,t,n,r,i){var o;const a=this.getSchedulerNextJobId({jobSchedulerId:t,nextMillis:e}),s=Date.now(),l=e+i-s,c=Object.assign(Object.assign({},n),{jobId:a,delay:l<0?0:l,timestamp:s,prevMillis:e,repeatJobKey:t});return c.repeat=Object.assign(Object.assign({},n.repeat),{offset:i,count:r,endDate:(null===(o=n.repeat)||void 0===o?void 0:o.endDate)?new Date(n.repeat.endDate).getTime():void 0}),c}async removeJobScheduler(e){return this.scripts.removeJobScheduler(e)}async getSchedulerData(e,t,n){const r=await e.hgetall(this.toKey("repeat:"+t));return this.transformSchedulerData(t,r,n)}transformSchedulerData(e,t,n){if(t){const r={key:e,name:t.name,next:n};return t.ic&&(r.iterationCount=parseInt(t.ic)),t.limit&&(r.limit=parseInt(t.limit)),t.endDate&&(r.endDate=parseInt(t.endDate)),t.tz&&(r.tz=t.tz),t.pattern&&(r.pattern=t.pattern),t.every&&(r.every=parseInt(t.every)),t.offset&&(r.offset=parseInt(t.offset)),(t.data||t.opts)&&(r.template=this.getTemplateFromJSON(t.data,t.opts)),r}if(e.includes(":"))return this.keyToData(e,n)}keyToData(e,t){const n=e.split(":"),r=n.slice(4).join(":")||null;return{key:e,name:n[0],id:n[1]||null,endDate:parseInt(n[2])||null,tz:n[3]||null,pattern:r,next:t}}async getScheduler(e){const[t,n]=await this.scripts.getJobScheduler(e);return this.transformSchedulerData(e,t?(0,l.array2obj)(t):null,n?parseInt(n):null)}getTemplateFromJSON(e,t){const n={};return e&&(n.data=JSON.parse(e)),t&&(n.opts=o.Job.optsFromJSON(t)),n}async getJobSchedulers(e=0,t=-1,n=!1){const r=await this.client,i=this.keys.repeat,o=n?await r.zrange(i,e,t,"WITHSCORES"):await r.zrevrange(i,e,t,"WITHSCORES"),a=[];for(let e=0;e<o.length;e+=2)a.push(this.getSchedulerData(r,o[e],parseInt(o[e+1])));return Promise.all(a)}async getSchedulersCount(){const e=this.keys.repeat;return(await this.client).zcard(e)}getSchedulerNextJobId({nextMillis:e,jobSchedulerId:t}){return`repeat:${t}:${e}`}}const u=(e,t)=>{const{pattern:n}=t,r=new Date(e),o=t.startDate&&new Date(t.startDate),a=o>r?o:r,s=(0,i.parseExpression)(n,Object.assign(Object.assign({},t),{currentDate:a}));try{return t.immediately?(new Date).getTime():s.next().getTime()}catch(e){}}},(e,t,n)=>{"use strict";var r=n(298);function i(){}i._parseEntry=function(e){var t=e.split(" ");if(6===t.length)return{interval:r.parse(e)};if(t.length>6)return{interval:r.parse(t.slice(0,6).join(" ")),command:t.slice(6,t.length)};throw new Error("Invalid entry: "+e)},i.parseExpression=function(e,t){return r.parse(e,t)},i.fieldsToExpression=function(e,t){return r.fieldsToExpression(e,t)},i.parseString=function(e){for(var t=e.split("\n"),n={variables:{},expressions:[],errors:{}},r=0,o=t.length;r<o;r++){var a=null,s=t[r].trim();if(s.length>0){if(s.match(/^#/))continue;if(a=s.match(/^(.*)=(.*)$/))n.variables[a[1]]=a[2];else{var l=null;try{l=i._parseEntry("0 "+s),n.expressions.push(l.interval)}catch(e){n.errors[s]=e}}}}return n},i.parseFile=function(e,t){n(305).readFile(e,function(e,n){if(!e)return t(null,i.parseString(n.toString()));t(e)})},e.exports=i},(e,t,n)=>{"use strict";var r=n(299),i=n(303);function o(e,t){this._options=t,this._utc=t.utc||!1,this._tz=this._utc?"UTC":t.tz,this._currentDate=new r(t.currentDate,this._tz),this._startDate=t.startDate?new r(t.startDate,this._tz):null,this._endDate=t.endDate?new r(t.endDate,this._tz):null,this._isIterator=t.iterator||!1,this._hasIterated=!1,this._nthDayOfWeek=t.nthDayOfWeek||0,this.fields=o._freezeFields(e)}o.map=["second","minute","hour","dayOfMonth","month","dayOfWeek"],o.predefined={"@yearly":"0 0 1 1 *","@monthly":"0 0 1 * *","@weekly":"0 0 * * 0","@daily":"0 0 * * *","@hourly":"0 * * * *"},o.constraints=[{min:0,max:59,chars:[]},{min:0,max:59,chars:[]},{min:0,max:23,chars:[]},{min:1,max:31,chars:["L"]},{min:1,max:12,chars:[]},{min:0,max:7,chars:["L"]}],o.daysInMonth=[31,29,31,30,31,30,31,31,30,31,30,31],o.aliases={month:{jan:1,feb:2,mar:3,apr:4,may:5,jun:6,jul:7,aug:8,sep:9,oct:10,nov:11,dec:12},dayOfWeek:{sun:0,mon:1,tue:2,wed:3,thu:4,fri:5,sat:6}},o.parseDefaults=["0","*","*","*","*","*"],o.standardValidCharacters=/^[,*\d/-]+$/,o.dayOfWeekValidCharacters=/^[?,*\dL#/-]+$/,o.dayOfMonthValidCharacters=/^[?,*\dL/-]+$/,o.validCharacters={second:o.standardValidCharacters,minute:o.standardValidCharacters,hour:o.standardValidCharacters,dayOfMonth:o.dayOfMonthValidCharacters,month:o.standardValidCharacters,dayOfWeek:o.dayOfWeekValidCharacters},o._isValidConstraintChar=function(e,t){return"string"==typeof t&&e.chars.some(function(e){return t.indexOf(e)>-1})},o._parseField=function(e,t,n){switch(e){case"month":case"dayOfWeek":var r=o.aliases[e];t=t.replace(/[a-z]{3}/gi,function(e){if(e=e.toLowerCase(),void 0!==r[e])return r[e];throw new Error('Validation error, cannot resolve alias "'+e+'"')})}if(!o.validCharacters[e].test(t))throw new Error("Invalid characters, got value: "+t);function i(e){var t=e.split("/");if(t.length>2)throw new Error("Invalid repeat: "+e);return t.length>1?(t[0]==+t[0]&&(t=[t[0]+"-"+n.max,t[1]]),a(t[0],t[t.length-1])):a(e,1)}function a(t,r){var i=[],o=t.split("-");if(o.length>1){if(o.length<2)return+t;if(!o[0].length){if(!o[1].length)throw new Error("Invalid range: "+t);return+t}var a=+o[0],s=+o[1];if(Number.isNaN(a)||Number.isNaN(s)||a<n.min||s>n.max)throw new Error("Constraint error, got range "+a+"-"+s+" expected range "+n.min+"-"+n.max);if(a>s)throw new Error("Invalid range: "+t);var l=+r;if(Number.isNaN(l)||l<=0)throw new Error("Constraint error, cannot repeat at every "+l+" time.");"dayOfWeek"===e&&s%7==0&&i.push(0);for(var c=a,u=s;c<=u;c++){!(-1!==i.indexOf(c))&&l>0&&l%r===0?(l=1,i.push(c)):l++}return i}return Number.isNaN(+t)?t:+t}return-1!==t.indexOf("*")?t=t.replace(/\*/g,n.min+"-"+n.max):-1!==t.indexOf("?")&&(t=t.replace(/\?/g,n.min+"-"+n.max)),function(t){var r=[];function a(t){if(t instanceof Array)for(var i=0,a=t.length;i<a;i++){var s=t[i];if(o._isValidConstraintChar(n,s))r.push(s);else{if("number"!=typeof s||Number.isNaN(s)||s<n.min||s>n.max)throw new Error("Constraint error, got value "+s+" expected range "+n.min+"-"+n.max);r.push(s)}}else{if(o._isValidConstraintChar(n,t))return void r.push(t);var l=+t;if(Number.isNaN(l)||l<n.min||l>n.max)throw new Error("Constraint error, got value "+t+" expected range "+n.min+"-"+n.max);"dayOfWeek"===e&&(l%=7),r.push(l)}}var s=t.split(",");if(!s.every(function(e){return e.length>0}))throw new Error("Invalid list value format");if(s.length>1)for(var l=0,c=s.length;l<c;l++)a(i(s[l]));else a(i(t));return r.sort(o._sortCompareFn),r}(t)},o._sortCompareFn=function(e,t){var n="number"==typeof e,r="number"==typeof t;return n&&r?e-t:!n&&r?1:n&&!r?-1:e.localeCompare(t)},o._handleMaxDaysInMonth=function(e){if(1===e.month.length){var t=o.daysInMonth[e.month[0]-1];if(e.dayOfMonth[0]>t)throw new Error("Invalid explicit day of month definition");return e.dayOfMonth.filter(function(e){return"L"===e||e<=t}).sort(o._sortCompareFn)}},o._freezeFields=function(e){for(var t=0,n=o.map.length;t<n;++t){var r=o.map[t],i=e[r];e[r]=Object.freeze(i)}return Object.freeze(e)},o.prototype._applyTimezoneShift=function(e,t,n){if("Month"===n||"Day"===n){var r=e.getTime();e[t+n](),r===e.getTime()&&(0===e.getMinutes()&&0===e.getSeconds()?e.addHour():59===e.getMinutes()&&59===e.getSeconds()&&e.subtractHour())}else{var i=e.getHours();e[t+n]();var o=e.getHours(),a=o-i;2===a?24!==this.fields.hour.length&&(this._dstStart=o):0===a&&0===e.getMinutes()&&0===e.getSeconds()&&24!==this.fields.hour.length&&(this._dstEnd=o)}},o.prototype._findSchedule=function(e){function t(e,t){for(var n=0,r=t.length;n<r;n++)if(t[n]>=e)return t[n]===e;return t[0]===e}function n(e,t){if(t<6){if(e.getDate()<8&&1===t)return!0;var n=e.getDate()%7?1:0,r=e.getDate()-e.getDate()%7;return Math.floor(r/7)+n===t}return!1}function i(e){return e.length>0&&e.some(function(e){return"string"==typeof e&&e.indexOf("L")>=0})}var a=(e=e||!1)?"subtract":"add",s=new r(this._currentDate,this._tz),l=this._startDate,c=this._endDate,u=s.getTime(),d=0;function p(e){return e.some(function(e){if(!i([e]))return!1;var t=Number.parseInt(e[0])%7;if(Number.isNaN(t))throw new Error("Invalid last weekday of the month expression: "+e);return s.getDay()===t&&s.isLastWeekdayOfMonth()})}for(;d<1e4;){if(d++,e){if(l&&s.getTime()-l.getTime()<0)throw new Error("Out of the timespan range")}else if(c&&c.getTime()-s.getTime()<0)throw new Error("Out of the timespan range");var h=t(s.getDate(),this.fields.dayOfMonth);i(this.fields.dayOfMonth)&&(h=h||s.isLastDayOfMonth());var f=t(s.getDay(),this.fields.dayOfWeek);i(this.fields.dayOfWeek)&&(f=f||p(this.fields.dayOfWeek));var y=this.fields.dayOfMonth.length>=o.daysInMonth[s.getMonth()],m=this.fields.dayOfWeek.length===o.constraints[5].max-o.constraints[5].min+1,b=s.getHours();if(h||f&&!m)if(y||!m||h)if(!y||m||f)if(this._nthDayOfWeek>0&&!n(s,this._nthDayOfWeek))this._applyTimezoneShift(s,a,"Day");else if(t(s.getMonth()+1,this.fields.month)){if(t(b,this.fields.hour)){if(this._dstEnd===b&&!e){this._dstEnd=null,this._applyTimezoneShift(s,"add","Hour");continue}}else{if(this._dstStart!==b){this._dstStart=null,this._applyTimezoneShift(s,a,"Hour");continue}if(!t(b-1,this.fields.hour)){s[a+"Hour"]();continue}}if(t(s.getMinutes(),this.fields.minute))if(t(s.getSeconds(),this.fields.second)){if(u!==s.getTime())break;"add"===a||0===s.getMilliseconds()?this._applyTimezoneShift(s,a,"Second"):s.setMilliseconds(0)}else this._applyTimezoneShift(s,a,"Second");else this._applyTimezoneShift(s,a,"Minute")}else this._applyTimezoneShift(s,a,"Month");else this._applyTimezoneShift(s,a,"Day");else this._applyTimezoneShift(s,a,"Day");else this._applyTimezoneShift(s,a,"Day")}if(d>=1e4)throw new Error("Invalid expression, loop limit exceeded");return this._currentDate=new r(s,this._tz),this._hasIterated=!0,s},o.prototype.next=function(){var e=this._findSchedule();return this._isIterator?{value:e,done:!this.hasNext()}:e},o.prototype.prev=function(){var e=this._findSchedule(!0);return this._isIterator?{value:e,done:!this.hasPrev()}:e},o.prototype.hasNext=function(){var e=this._currentDate,t=this._hasIterated;try{return this._findSchedule(),!0}catch(e){return!1}finally{this._currentDate=e,this._hasIterated=t}},o.prototype.hasPrev=function(){var e=this._currentDate,t=this._hasIterated;try{return this._findSchedule(!0),!0}catch(e){return!1}finally{this._currentDate=e,this._hasIterated=t}},o.prototype.iterate=function(e,t){var n=[];if(e>=0)for(var r=0,i=e;r<i;r++)try{var o=this.next();n.push(o),t&&t(o,r)}catch(e){break}else for(r=0,i=e;r>i;r--)try{o=this.prev();n.push(o),t&&t(o,r)}catch(e){break}return n},o.prototype.reset=function(e){this._currentDate=new r(e||this._options.currentDate)},o.prototype.stringify=function(e){for(var t=[],n=e?0:1,r=o.map.length;n<r;++n){var a=o.map[n],s=this.fields[a],l=o.constraints[n];"dayOfMonth"===a&&1===this.fields.month.length?l={min:1,max:o.daysInMonth[this.fields.month[0]-1]}:"dayOfWeek"===a&&(l={min:0,max:6},s=7===s[s.length-1]?s.slice(0,-1):s),t.push(i(s,l.min,l.max))}return t.join(" ")},o.parse=function(e,t){var n=this;function i(e,t){t||(t={}),void 0===t.currentDate&&(t.currentDate=new r(void 0,n._tz)),o.predefined[e]&&(e=o.predefined[e]);var i=[],a=(e+"").trim().split(/\s+/);if(a.length>6)throw new Error("Invalid cron expression");for(var s=o.map.length-a.length,l=0,c=o.map.length;l<c;++l){var u=o.map[l],d=a[a.length>c?l:l-s];if(l<s||!d)i.push(o._parseField(u,o.parseDefaults[l],o.constraints[l]));else{var p="dayOfWeek"===u?y(d):d;i.push(o._parseField(u,p,o.constraints[l]))}}var h={};for(l=0,c=o.map.length;l<c;l++){h[o.map[l]]=i[l]}var f=o._handleMaxDaysInMonth(h);return h.dayOfMonth=f||h.dayOfMonth,new o(h,t);function y(e){var n=e.split("#");if(n.length>1){var r=+n[n.length-1];if(/,/.test(e))throw new Error("Constraint error, invalid dayOfWeek `#` and `,` special characters are incompatible");if(/\//.test(e))throw new Error("Constraint error, invalid dayOfWeek `#` and `/` special characters are incompatible");if(/-/.test(e))throw new Error("Constraint error, invalid dayOfWeek `#` and `-` special characters are incompatible");if(n.length>2||Number.isNaN(r)||r<1||r>5)throw new Error("Constraint error, invalid dayOfWeek occurrence number (#)");return t.nthDayOfWeek=r,n[0]}return e}}return"function"==typeof t&&(t={}),i(e,t)},o.fieldsToExpression=function(e,t){function n(e,t,n){if(!t)throw new Error("Validation error, Field "+e+" is missing");if(0===t.length)throw new Error("Validation error, Field "+e+" contains no values");for(var r=0,i=t.length;r<i;r++){var a=t[r];if(!o._isValidConstraintChar(n,a)&&("number"!=typeof a||Number.isNaN(a)||a<n.min||a>n.max))throw new Error("Constraint error, got value "+a+" expected range "+n.min+"-"+n.max)}}for(var r={},i=0,a=o.map.length;i<a;++i){var s=o.map[i],l=e[s];n(s,l,o.constraints[i]);for(var c=[],u=-1;++u<l.length;)c[u]=l[u];if((l=c.sort(o._sortCompareFn).filter(function(e,t,n){return!t||e!==n[t-1]})).length!==c.length)throw new Error("Validation error, Field "+s+" contains duplicate values");r[s]=l}var d=o._handleMaxDaysInMonth(r);return r.dayOfMonth=d||r.dayOfMonth,new o(r,t||{})},e.exports=o},(e,t,n)=>{"use strict";var r=n(300);function i(e,t){var n={zone:t};if(e?e instanceof i?this._date=e._date:e instanceof Date?this._date=r.DateTime.fromJSDate(e,n):"number"==typeof e?this._date=r.DateTime.fromMillis(e,n):"string"==typeof e&&(this._date=r.DateTime.fromISO(e,n),this._date.isValid||(this._date=r.DateTime.fromRFC2822(e,n)),this._date.isValid||(this._date=r.DateTime.fromSQL(e,n)),this._date.isValid||(this._date=r.DateTime.fromFormat(e,"EEE, d MMM yyyy HH:mm:ss",n))):this._date=r.DateTime.local(),!this._date||!this._date.isValid)throw new Error("CronDate: unhandled timestamp: "+JSON.stringify(e));t&&t!==this._date.zoneName&&(this._date=this._date.setZone(t))}i.prototype.addYear=function(){this._date=this._date.plus({years:1})},i.prototype.addMonth=function(){this._date=this._date.plus({months:1}).startOf("month")},i.prototype.addDay=function(){this._date=this._date.plus({days:1}).startOf("day")},i.prototype.addHour=function(){var e=this._date;this._date=this._date.plus({hours:1}).startOf("hour"),this._date<=e&&(this._date=this._date.plus({hours:1}))},i.prototype.addMinute=function(){var e=this._date;this._date=this._date.plus({minutes:1}).startOf("minute"),this._date<e&&(this._date=this._date.plus({hours:1}))},i.prototype.addSecond=function(){var e=this._date;this._date=this._date.plus({seconds:1}).startOf("second"),this._date<e&&(this._date=this._date.plus({hours:1}))},i.prototype.subtractYear=function(){this._date=this._date.minus({years:1})},i.prototype.subtractMonth=function(){this._date=this._date.minus({months:1}).endOf("month").startOf("second")},i.prototype.subtractDay=function(){this._date=this._date.minus({days:1}).endOf("day").startOf("second")},i.prototype.subtractHour=function(){var e=this._date;this._date=this._date.minus({hours:1}).endOf("hour").startOf("second"),this._date>=e&&(this._date=this._date.minus({hours:1}))},i.prototype.subtractMinute=function(){var e=this._date;this._date=this._date.minus({minutes:1}).endOf("minute").startOf("second"),this._date>e&&(this._date=this._date.minus({hours:1}))},i.prototype.subtractSecond=function(){var e=this._date;this._date=this._date.minus({seconds:1}).startOf("second"),this._date>e&&(this._date=this._date.minus({hours:1}))},i.prototype.getDate=function(){return this._date.day},i.prototype.getFullYear=function(){return this._date.year},i.prototype.getDay=function(){var e=this._date.weekday;return 7==e?0:e},i.prototype.getMonth=function(){return this._date.month-1},i.prototype.getHours=function(){return this._date.hour},i.prototype.getMinutes=function(){return this._date.minute},i.prototype.getSeconds=function(){return this._date.second},i.prototype.getMilliseconds=function(){return this._date.millisecond},i.prototype.getTime=function(){return this._date.valueOf()},i.prototype.getUTCDate=function(){return this._getUTC().day},i.prototype.getUTCFullYear=function(){return this._getUTC().year},i.prototype.getUTCDay=function(){var e=this._getUTC().weekday;return 7==e?0:e},i.prototype.getUTCMonth=function(){return this._getUTC().month-1},i.prototype.getUTCHours=function(){return this._getUTC().hour},i.prototype.getUTCMinutes=function(){return this._getUTC().minute},i.prototype.getUTCSeconds=function(){return this._getUTC().second},i.prototype.toISOString=function(){return this._date.toUTC().toISO()},i.prototype.toJSON=function(){return this._date.toJSON()},i.prototype.setDate=function(e){this._date=this._date.set({day:e})},i.prototype.setFullYear=function(e){this._date=this._date.set({year:e})},i.prototype.setDay=function(e){this._date=this._date.set({weekday:e})},i.prototype.setMonth=function(e){this._date=this._date.set({month:e+1})},i.prototype.setHours=function(e){this._date=this._date.set({hour:e})},i.prototype.setMinutes=function(e){this._date=this._date.set({minute:e})},i.prototype.setSeconds=function(e){this._date=this._date.set({second:e})},i.prototype.setMilliseconds=function(e){this._date=this._date.set({millisecond:e})},i.prototype._getUTC=function(){return this._date.toUTC()},i.prototype.toString=function(){return this.toDate().toString()},i.prototype.toDate=function(){return this._date.toJSDate()},i.prototype.isLastDayOfMonth=function(){var e=this._date.plus({days:1}).startOf("day");return this._date.month!==e.month},i.prototype.isLastWeekdayOfMonth=function(){var e=this._date.plus({days:7}).startOf("day");return this._date.month!==e.month},e.exports=i},(e,t,n)=>{"use strict";var r=n(1),i=n(301);const o=["base"],a=["padTo","floor"];function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach(function(t){r(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}Object.defineProperty(t,"__esModule",{value:!0});class c extends Error{}class u extends c{constructor(e){super(`Invalid DateTime: ${e.toMessage()}`)}}class d extends c{constructor(e){super(`Invalid Interval: ${e.toMessage()}`)}}class p extends c{constructor(e){super(`Invalid Duration: ${e.toMessage()}`)}}class h extends c{}class f extends c{constructor(e){super(`Invalid unit ${e}`)}}class y extends c{}class m extends c{constructor(){super("Zone is an abstract class")}}const b="numeric",g="short",v="long",E={year:b,month:b,day:b},w={year:b,month:g,day:b},S={year:b,month:g,day:b,weekday:g},K={year:b,month:v,day:b},I={year:b,month:v,day:b,weekday:v},k={hour:b,minute:b},j={hour:b,minute:b,second:b},x={hour:b,minute:b,second:b,timeZoneName:g},A={hour:b,minute:b,second:b,timeZoneName:v},O={hour:b,minute:b,hourCycle:"h23"},T={hour:b,minute:b,second:b,hourCycle:"h23"},R={hour:b,minute:b,second:b,hourCycle:"h23",timeZoneName:g},D={hour:b,minute:b,second:b,hourCycle:"h23",timeZoneName:v},C={year:b,month:b,day:b,hour:b,minute:b},P={year:b,month:b,day:b,hour:b,minute:b,second:b},M={year:b,month:g,day:b,hour:b,minute:b},N={year:b,month:g,day:b,hour:b,minute:b,second:b},_={year:b,month:g,day:b,weekday:g,hour:b,minute:b},L={year:b,month:v,day:b,hour:b,minute:b,timeZoneName:g},J={year:b,month:v,day:b,hour:b,minute:b,second:b,timeZoneName:g},F={year:b,month:v,day:b,weekday:v,hour:b,minute:b,timeZoneName:v},V={year:b,month:v,day:b,weekday:v,hour:b,minute:b,second:b,timeZoneName:v};class G{get type(){throw new m}get name(){throw new m}get ianaName(){return this.name}get isUniversal(){throw new m}offsetName(e,t){throw new m}formatOffset(e,t){throw new m}offset(e){throw new m}equals(e){throw new m}get isValid(){throw new m}}let q=null;class B extends G{static get instance(){return null===q&&(q=new B),q}get type(){return"system"}get name(){return(new Intl.DateTimeFormat).resolvedOptions().timeZone}get isUniversal(){return!1}offsetName(e,{format:t,locale:n}){return ut(e,t,n)}formatOffset(e,t){return ft(this.offset(e),t)}offset(e){return-new Date(e).getTimezoneOffset()}equals(e){return"system"===e.type}get isValid(){return!0}}const U=new Map;const Y={year:0,month:1,day:2,era:3,hour:4,minute:5,second:6};const z=new Map;class W extends G{static create(e){let t=z.get(e);return void 0===t&&z.set(e,t=new W(e)),t}static resetCache(){z.clear(),U.clear()}static isValidSpecifier(e){return this.isValidZone(e)}static isValidZone(e){if(!e)return!1;try{return new Intl.DateTimeFormat("en-US",{timeZone:e}).format(),!0}catch(e){return!1}}constructor(e){super(),this.zoneName=e,this.valid=W.isValidZone(e)}get type(){return"iana"}get name(){return this.zoneName}get isUniversal(){return!1}offsetName(e,{format:t,locale:n}){return ut(e,t,n,this.name)}formatOffset(e,t){return ft(this.offset(e),t)}offset(e){if(!this.valid)return NaN;const t=new Date(e);if(isNaN(t))return NaN;const n=function(e){let t=U.get(e);return void 0===t&&(t=new Intl.DateTimeFormat("en-US",{hour12:!1,timeZone:e,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",era:"short"}),U.set(e,t)),t}(this.name);let[r,i,o,a,s,l,c]=n.formatToParts?function(e,t){const n=e.formatToParts(t),r=[];for(let e=0;e<n.length;e++){const{type:t,value:i}=n[e],o=Y[t];"era"===t?r[o]=i:qe(o)||(r[o]=parseInt(i,10))}return r}(n,t):function(e,t){const n=e.format(t).replace(/\u200E/g,""),r=/(\d+)\/(\d+)\/(\d+) (AD|BC),? (\d+):(\d+):(\d+)/.exec(n),[,i,o,a,s,l,c,u]=r;return[a,i,o,s,l,c,u]}(n,t);"BC"===a&&(r=1-Math.abs(r));let u=+t;const d=u%1e3;return u-=d>=0?d:1e3+d,(at({year:r,month:i,day:o,hour:24===s?0:s,minute:l,second:c,millisecond:0})-u)/6e4}equals(e){return"iana"===e.type&&e.name===this.name}get isValid(){return this.valid}}let $={};const Q=new Map;function H(e,t={}){const n=JSON.stringify([e,t]);let r=Q.get(n);return void 0===r&&(r=new Intl.DateTimeFormat(e,t),Q.set(n,r)),r}const Z=new Map;const X=new Map;let ee=null;const te=new Map;function ne(e){let t=te.get(e);return void 0===t&&(t=new Intl.DateTimeFormat(e).resolvedOptions(),te.set(e,t)),t}const re=new Map;function ie(e,t,n,r){const i=e.listingMode();return"error"===i?null:"en"===i?n(t):r(t)}class oe{constructor(e,t,n){this.padTo=n.padTo||0,this.floor=n.floor||!1;const{padTo:r,floor:o}=n,s=i(n,a);if(!t||Object.keys(s).length>0){const t=l({useGrouping:!1},n);n.padTo>0&&(t.minimumIntegerDigits=n.padTo),this.inf=function(e,t={}){const n=JSON.stringify([e,t]);let r=Z.get(n);return void 0===r&&(r=new Intl.NumberFormat(e,t),Z.set(n,r)),r}(e,t)}}format(e){if(this.inf){const t=this.floor?Math.floor(e):e;return this.inf.format(t)}return Ze(this.floor?Math.floor(e):nt(e,3),this.padTo)}}class ae{constructor(e,t,n){let r;if(this.opts=n,this.originalZone=void 0,this.opts.timeZone)this.dt=e;else if("fixed"===e.zone.type){const t=e.offset/60*-1,n=t>=0?`Etc/GMT+${t}`:`Etc/GMT${t}`;0!==e.offset&&W.create(n).valid?(r=n,this.dt=e):(r="UTC",this.dt=0===e.offset?e:e.setZone("UTC").plus({minutes:e.offset}),this.originalZone=e.zone)}else"system"===e.zone.type?this.dt=e:"iana"===e.zone.type?(this.dt=e,r=e.zone.name):(r="UTC",this.dt=e.setZone("UTC").plus({minutes:e.offset}),this.originalZone=e.zone);const i=l({},this.opts);i.timeZone=i.timeZone||r,this.dtf=H(t,i)}format(){return this.originalZone?this.formatToParts().map(({value:e})=>e).join(""):this.dtf.format(this.dt.toJSDate())}formatToParts(){const e=this.dtf.formatToParts(this.dt.toJSDate());return this.originalZone?e.map(e=>{if("timeZoneName"===e.type){const t=this.originalZone.offsetName(this.dt.ts,{locale:this.dt.locale,format:this.opts.timeZoneName});return l(l({},e),{},{value:t})}return e}):e}resolvedOptions(){return this.dtf.resolvedOptions()}}class se{constructor(e,t,n){this.opts=l({style:"long"},n),!t&&Ye()&&(this.rtf=function(e,t={}){const{base:n}=t,r=i(t,o),a=JSON.stringify([e,r]);let s=X.get(a);return void 0===s&&(s=new Intl.RelativeTimeFormat(e,t),X.set(a,s)),s}(e,n))}format(e,t){return this.rtf?this.rtf.format(e,t):function(e,t,n="always",r=!1){const i={years:["year","yr."],quarters:["quarter","qtr."],months:["month","mo."],weeks:["week","wk."],days:["day","day","days"],hours:["hour","hr."],minutes:["minute","min."],seconds:["second","sec."]},o=-1===["hours","minutes","seconds"].indexOf(e);if("auto"===n&&o){const n="days"===e;switch(t){case 1:return n?"tomorrow":`next ${i[e][0]}`;case-1:return n?"yesterday":`last ${i[e][0]}`;case 0:return n?"today":`this ${i[e][0]}`}}const a=Object.is(t,-0)||t<0,s=Math.abs(t),l=1===s,c=i[e],u=r?l?c[1]:c[2]||c[1]:l?i[e][0]:e;return a?`${s} ${u} ago`:`in ${s} ${u}`}(t,e,this.opts.numeric,"long"!==this.opts.style)}formatToParts(e,t){return this.rtf?this.rtf.formatToParts(e,t):[]}}const le={firstDay:1,minimalDays:4,weekend:[6,7]};class ce{static fromOpts(e){return ce.create(e.locale,e.numberingSystem,e.outputCalendar,e.weekSettings,e.defaultToEN)}static create(e,t,n,r,i=!1){const o=e||xe.defaultLocale,a=o||(i?"en-US":ee||(ee=(new Intl.DateTimeFormat).resolvedOptions().locale,ee)),s=t||xe.defaultNumberingSystem,l=n||xe.defaultOutputCalendar,c=Qe(r)||xe.defaultWeekSettings;return new ce(a,s,l,c,o)}static resetCache(){ee=null,Q.clear(),Z.clear(),X.clear(),te.clear(),re.clear()}static fromObject({locale:e,numberingSystem:t,outputCalendar:n,weekSettings:r}={}){return ce.create(e,t,n,r)}constructor(e,t,n,r,i){const[o,a,s]=function(e){const t=e.indexOf("-x-");-1!==t&&(e=e.substring(0,t));const n=e.indexOf("-u-");if(-1===n)return[e];{let t,r;try{t=H(e).resolvedOptions(),r=e}catch(i){const o=e.substring(0,n);t=H(o).resolvedOptions(),r=o}const{numberingSystem:i,calendar:o}=t;return[r,i,o]}}(e);this.locale=o,this.numberingSystem=t||a||null,this.outputCalendar=n||s||null,this.weekSettings=r,this.intl=function(e,t,n){return n||t?(e.includes("-u-")||(e+="-u"),n&&(e+=`-ca-${n}`),t&&(e+=`-nu-${t}`),e):e}(this.locale,this.numberingSystem,this.outputCalendar),this.weekdaysCache={format:{},standalone:{}},this.monthsCache={format:{},standalone:{}},this.meridiemCache=null,this.eraCache={},this.specifiedLocale=i,this.fastNumbersCached=null}get fastNumbers(){var e;return null==this.fastNumbersCached&&(this.fastNumbersCached=(!(e=this).numberingSystem||"latn"===e.numberingSystem)&&("latn"===e.numberingSystem||!e.locale||e.locale.startsWith("en")||"latn"===ne(e.locale).numberingSystem)),this.fastNumbersCached}listingMode(){const e=this.isEnglish(),t=!(null!==this.numberingSystem&&"latn"!==this.numberingSystem||null!==this.outputCalendar&&"gregory"!==this.outputCalendar);return e&&t?"en":"intl"}clone(e){return e&&0!==Object.getOwnPropertyNames(e).length?ce.create(e.locale||this.specifiedLocale,e.numberingSystem||this.numberingSystem,e.outputCalendar||this.outputCalendar,Qe(e.weekSettings)||this.weekSettings,e.defaultToEN||!1):this}redefaultToEN(e={}){return this.clone(l(l({},e),{},{defaultToEN:!0}))}redefaultToSystem(e={}){return this.clone(l(l({},e),{},{defaultToEN:!1}))}months(e,t=!1){return ie(this,e,vt,()=>{const n=t?{month:e,day:"numeric"}:{month:e},r=t?"format":"standalone";return this.monthsCache[r][e]||(this.monthsCache[r][e]=function(e){const t=[];for(let n=1;n<=12;n++){const r=Kr.utc(2009,n,1);t.push(e(r))}return t}(e=>this.extract(e,n,"month"))),this.monthsCache[r][e]})}weekdays(e,t=!1){return ie(this,e,Kt,()=>{const n=t?{weekday:e,year:"numeric",month:"long",day:"numeric"}:{weekday:e},r=t?"format":"standalone";return this.weekdaysCache[r][e]||(this.weekdaysCache[r][e]=function(e){const t=[];for(let n=1;n<=7;n++){const r=Kr.utc(2016,11,13+n);t.push(e(r))}return t}(e=>this.extract(e,n,"weekday"))),this.weekdaysCache[r][e]})}meridiems(){return ie(this,void 0,()=>It,()=>{if(!this.meridiemCache){const e={hour:"numeric",hourCycle:"h12"};this.meridiemCache=[Kr.utc(2016,11,13,9),Kr.utc(2016,11,13,19)].map(t=>this.extract(t,e,"dayperiod"))}return this.meridiemCache})}eras(e){return ie(this,e,At,()=>{const t={era:e};return this.eraCache[e]||(this.eraCache[e]=[Kr.utc(-40,1,1),Kr.utc(2017,1,1)].map(e=>this.extract(e,t,"era"))),this.eraCache[e]})}extract(e,t,n){const r=this.dtFormatter(e,t).formatToParts().find(e=>e.type.toLowerCase()===n);return r?r.value:null}numberFormatter(e={}){return new oe(this.intl,e.forceSimple||this.fastNumbers,e)}dtFormatter(e,t={}){return new ae(e,this.intl,t)}relFormatter(e={}){return new se(this.intl,this.isEnglish(),e)}listFormatter(e={}){return function(e,t={}){const n=JSON.stringify([e,t]);let r=$[n];return r||(r=new Intl.ListFormat(e,t),$[n]=r),r}(this.intl,e)}isEnglish(){return"en"===this.locale||"en-us"===this.locale.toLowerCase()||ne(this.intl).locale.startsWith("en-us")}getWeekSettings(){return this.weekSettings?this.weekSettings:ze()?function(e){let t=re.get(e);if(!t){const n=new Intl.Locale(e);t="getWeekInfo"in n?n.getWeekInfo():n.weekInfo,"minimalDays"in t||(t=l(l({},le),t)),re.set(e,t)}return t}(this.locale):le}getStartOfWeek(){return this.getWeekSettings().firstDay}getMinDaysInFirstWeek(){return this.getWeekSettings().minimalDays}getWeekendDays(){return this.getWeekSettings().weekend}equals(e){return this.locale===e.locale&&this.numberingSystem===e.numberingSystem&&this.outputCalendar===e.outputCalendar}toString(){return`Locale(${this.locale}, ${this.numberingSystem}, ${this.outputCalendar})`}}let ue=null;class de extends G{static get utcInstance(){return null===ue&&(ue=new de(0)),ue}static instance(e){return 0===e?de.utcInstance:new de(e)}static parseSpecifier(e){if(e){const t=e.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);if(t)return new de(dt(t[1],t[2]))}return null}constructor(e){super(),this.fixed=e}get type(){return"fixed"}get name(){return 0===this.fixed?"UTC":`UTC${ft(this.fixed,"narrow")}`}get ianaName(){return 0===this.fixed?"Etc/UTC":`Etc/GMT${ft(-this.fixed,"narrow")}`}offsetName(){return this.name}formatOffset(e,t){return ft(this.fixed,t)}get isUniversal(){return!0}offset(){return this.fixed}equals(e){return"fixed"===e.type&&e.fixed===this.fixed}get isValid(){return!0}}class pe extends G{constructor(e){super(),this.zoneName=e}get type(){return"invalid"}get name(){return this.zoneName}get isUniversal(){return!1}offsetName(){return null}formatOffset(){return""}offset(){return NaN}equals(){return!1}get isValid(){return!1}}function he(e,t){if(qe(e)||null===e)return t;if(e instanceof G)return e;if("string"==typeof e){const n=e.toLowerCase();return"default"===n?t:"local"===n||"system"===n?B.instance:"utc"===n||"gmt"===n?de.utcInstance:de.parseSpecifier(n)||W.create(e)}return Be(e)?de.instance(e):"object"==typeof e&&"offset"in e&&"function"==typeof e.offset?e:new pe(e)}const fe={arab:"[٠-٩]",arabext:"[۰-۹]",bali:"[᭐-᭙]",beng:"[০-৯]",deva:"[०-९]",fullwide:"[０-９]",gujr:"[૦-૯]",hanidec:"[〇|一|二|三|四|五|六|七|八|九]",khmr:"[០-៩]",knda:"[೦-೯]",laoo:"[໐-໙]",limb:"[᥆-᥏]",mlym:"[൦-൯]",mong:"[᠐-᠙]",mymr:"[၀-၉]",orya:"[୦-୯]",tamldec:"[௦-௯]",telu:"[౦-౯]",thai:"[๐-๙]",tibt:"[༠-༩]",latn:"\\d"},ye={arab:[1632,1641],arabext:[1776,1785],bali:[6992,7001],beng:[2534,2543],deva:[2406,2415],fullwide:[65296,65303],gujr:[2790,2799],khmr:[6112,6121],knda:[3302,3311],laoo:[3792,3801],limb:[6470,6479],mlym:[3430,3439],mong:[6160,6169],mymr:[4160,4169],orya:[2918,2927],tamldec:[3046,3055],telu:[3174,3183],thai:[3664,3673],tibt:[3872,3881]},me=fe.hanidec.replace(/[\[|\]]/g,"").split("");const be=new Map;function ge({numberingSystem:e},t=""){const n=e||"latn";let r=be.get(n);void 0===r&&(r=new Map,be.set(n,r));let i=r.get(t);return void 0===i&&(i=new RegExp(`${fe[n]}${t}`),r.set(t,i)),i}let ve,Ee=()=>Date.now(),we="system",Se=null,Ke=null,Ie=null,ke=60,je=null;class xe{static get now(){return Ee}static set now(e){Ee=e}static set defaultZone(e){we=e}static get defaultZone(){return he(we,B.instance)}static get defaultLocale(){return Se}static set defaultLocale(e){Se=e}static get defaultNumberingSystem(){return Ke}static set defaultNumberingSystem(e){Ke=e}static get defaultOutputCalendar(){return Ie}static set defaultOutputCalendar(e){Ie=e}static get defaultWeekSettings(){return je}static set defaultWeekSettings(e){je=Qe(e)}static get twoDigitCutoffYear(){return ke}static set twoDigitCutoffYear(e){ke=e%100}static get throwOnInvalid(){return ve}static set throwOnInvalid(e){ve=e}static resetCaches(){ce.resetCache(),W.resetCache(),Kr.resetCache(),be.clear()}}class Ae{constructor(e,t){this.reason=e,this.explanation=t}toMessage(){return this.explanation?`${this.reason}: ${this.explanation}`:this.reason}}const Oe=[0,31,59,90,120,151,181,212,243,273,304,334],Te=[0,31,60,91,121,152,182,213,244,274,305,335];function Re(e,t){return new Ae("unit out of range",`you specified ${t} (of type ${typeof t}) as a ${e}, which is invalid`)}function De(e,t,n){const r=new Date(Date.UTC(e,t-1,n));e<100&&e>=0&&r.setUTCFullYear(r.getUTCFullYear()-1900);const i=r.getUTCDay();return 0===i?7:i}function Ce(e,t,n){return n+(rt(e)?Te:Oe)[t-1]}function Pe(e,t){const n=rt(e)?Te:Oe,r=n.findIndex(e=>e<t);return{month:r+1,day:t-n[r]}}function Me(e,t){return(e-t+7)%7+1}function Ne(e,t=4,n=1){const{year:r,month:i,day:o}=e,a=Ce(r,i,o),s=Me(De(r,i,o),n);let c,u=Math.floor((a-s+14-t)/7);return u<1?(c=r-1,u=lt(c,t,n)):u>lt(r,t,n)?(c=r+1,u=1):c=r,l({weekYear:c,weekNumber:u,weekday:s},yt(e))}function _e(e,t=4,n=1){const{weekYear:r,weekNumber:i,weekday:o}=e,a=Me(De(r,1,t),n),s=it(r);let c,u=7*i+o-a-7+t;u<1?(c=r-1,u+=it(c)):u>s?(c=r+1,u-=it(r)):c=r;const{month:d,day:p}=Pe(c,u);return l({year:c,month:d,day:p},yt(e))}function Le(e){const{year:t,month:n,day:r}=e;return l({year:t,ordinal:Ce(t,n,r)},yt(e))}function Je(e){const{year:t,ordinal:n}=e,{month:r,day:i}=Pe(t,n);return l({year:t,month:r,day:i},yt(e))}function Fe(e,t){if(!qe(e.localWeekday)||!qe(e.localWeekNumber)||!qe(e.localWeekYear)){if(!qe(e.weekday)||!qe(e.weekNumber)||!qe(e.weekYear))throw new h("Cannot mix locale-based week fields with ISO-based week fields");return qe(e.localWeekday)||(e.weekday=e.localWeekday),qe(e.localWeekNumber)||(e.weekNumber=e.localWeekNumber),qe(e.localWeekYear)||(e.weekYear=e.localWeekYear),delete e.localWeekday,delete e.localWeekNumber,delete e.localWeekYear,{minDaysInFirstWeek:t.getMinDaysInFirstWeek(),startOfWeek:t.getStartOfWeek()}}return{minDaysInFirstWeek:4,startOfWeek:1}}function Ve(e){const t=Ue(e.year),n=He(e.month,1,12),r=He(e.day,1,ot(e.year,e.month));return t?n?!r&&Re("day",e.day):Re("month",e.month):Re("year",e.year)}function Ge(e){const{hour:t,minute:n,second:r,millisecond:i}=e,o=He(t,0,23)||24===t&&0===n&&0===r&&0===i,a=He(n,0,59),s=He(r,0,59),l=He(i,0,999);return o?a?s?!l&&Re("millisecond",i):Re("second",r):Re("minute",n):Re("hour",t)}function qe(e){return void 0===e}function Be(e){return"number"==typeof e}function Ue(e){return"number"==typeof e&&e%1==0}function Ye(){try{return"undefined"!=typeof Intl&&!!Intl.RelativeTimeFormat}catch(e){return!1}}function ze(){try{return"undefined"!=typeof Intl&&!!Intl.Locale&&("weekInfo"in Intl.Locale.prototype||"getWeekInfo"in Intl.Locale.prototype)}catch(e){return!1}}function We(e,t,n){if(0!==e.length)return e.reduce((e,r)=>{const i=[t(r),r];return e&&n(e[0],i[0])===e[0]?e:i},null)[1]}function $e(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function Qe(e){if(null==e)return null;if("object"!=typeof e)throw new y("Week settings must be an object");if(!He(e.firstDay,1,7)||!He(e.minimalDays,1,7)||!Array.isArray(e.weekend)||e.weekend.some(e=>!He(e,1,7)))throw new y("Invalid week settings");return{firstDay:e.firstDay,minimalDays:e.minimalDays,weekend:Array.from(e.weekend)}}function He(e,t,n){return Ue(e)&&e>=t&&e<=n}function Ze(e,t=2){let n;return n=e<0?"-"+(""+-e).padStart(t,"0"):(""+e).padStart(t,"0"),n}function Xe(e){return qe(e)||null===e||""===e?void 0:parseInt(e,10)}function et(e){return qe(e)||null===e||""===e?void 0:parseFloat(e)}function tt(e){if(!qe(e)&&null!==e&&""!==e){const t=1e3*parseFloat("0."+e);return Math.floor(t)}}function nt(e,t,n=!1){const r=10**t;return(n?Math.trunc:Math.round)(e*r)/r}function rt(e){return e%4==0&&(e%100!=0||e%400==0)}function it(e){return rt(e)?366:365}function ot(e,t){const n=function(e,t){return e-t*Math.floor(e/t)}(t-1,12)+1;return 2===n?rt(e+(t-n)/12)?29:28:[31,null,31,30,31,30,31,31,30,31,30,31][n-1]}function at(e){let t=Date.UTC(e.year,e.month-1,e.day,e.hour,e.minute,e.second,e.millisecond);return e.year<100&&e.year>=0&&(t=new Date(t),t.setUTCFullYear(e.year,e.month-1,e.day)),+t}function st(e,t,n){return-Me(De(e,1,t),n)+t-1}function lt(e,t=4,n=1){const r=st(e,t,n),i=st(e+1,t,n);return(it(e)-r+i)/7}function ct(e){return e>99?e:e>xe.twoDigitCutoffYear?1900+e:2e3+e}function ut(e,t,n,r=null){const i=new Date(e),o={hourCycle:"h23",year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit"};r&&(o.timeZone=r);const a=l({timeZoneName:t},o),s=new Intl.DateTimeFormat(n,a).formatToParts(i).find(e=>"timezonename"===e.type.toLowerCase());return s?s.value:null}function dt(e,t){let n=parseInt(e,10);Number.isNaN(n)&&(n=0);const r=parseInt(t,10)||0;return 60*n+(n<0||Object.is(n,-0)?-r:r)}function pt(e){const t=Number(e);if("boolean"==typeof e||""===e||Number.isNaN(t))throw new y(`Invalid unit value ${e}`);return t}function ht(e,t){const n={};for(const r in e)if($e(e,r)){const i=e[r];if(null==i)continue;n[t(r)]=pt(i)}return n}function ft(e,t){const n=Math.trunc(Math.abs(e/60)),r=Math.trunc(Math.abs(e%60)),i=e>=0?"+":"-";switch(t){case"short":return`${i}${Ze(n,2)}:${Ze(r,2)}`;case"narrow":return`${i}${n}${r>0?`:${r}`:""}`;case"techie":return`${i}${Ze(n,2)}${Ze(r,2)}`;default:throw new RangeError(`Value format ${t} is out of range for property format`)}}function yt(e){return function(e,t){return t.reduce((t,n)=>(t[n]=e[n],t),{})}(e,["hour","minute","second","millisecond"])}const mt=["January","February","March","April","May","June","July","August","September","October","November","December"],bt=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],gt=["J","F","M","A","M","J","J","A","S","O","N","D"];function vt(e){switch(e){case"narrow":return[...gt];case"short":return[...bt];case"long":return[...mt];case"numeric":return["1","2","3","4","5","6","7","8","9","10","11","12"];case"2-digit":return["01","02","03","04","05","06","07","08","09","10","11","12"];default:return null}}const Et=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],wt=["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],St=["M","T","W","T","F","S","S"];function Kt(e){switch(e){case"narrow":return[...St];case"short":return[...wt];case"long":return[...Et];case"numeric":return["1","2","3","4","5","6","7"];default:return null}}const It=["AM","PM"],kt=["Before Christ","Anno Domini"],jt=["BC","AD"],xt=["B","A"];function At(e){switch(e){case"narrow":return[...xt];case"short":return[...jt];case"long":return[...kt];default:return null}}function Ot(e,t){let n="";for(const r of e)r.literal?n+=r.val:n+=t(r.val);return n}const Tt={D:E,DD:w,DDD:K,DDDD:I,t:k,tt:j,ttt:x,tttt:A,T:O,TT:T,TTT:R,TTTT:D,f:C,ff:M,fff:L,ffff:F,F:P,FF:N,FFF:J,FFFF:V};class Rt{static create(e,t={}){return new Rt(e,t)}static parseFormat(e){let t=null,n="",r=!1;const i=[];for(let o=0;o<e.length;o++){const a=e.charAt(o);"'"===a?(n.length>0&&i.push({literal:r||/^\s+$/.test(n),val:n}),t=null,n="",r=!r):r||a===t?n+=a:(n.length>0&&i.push({literal:/^\s+$/.test(n),val:n}),n=a,t=a)}return n.length>0&&i.push({literal:r||/^\s+$/.test(n),val:n}),i}static macroTokenToFormatOpts(e){return Tt[e]}constructor(e,t){this.opts=t,this.loc=e,this.systemLoc=null}formatWithSystemDefault(e,t){null===this.systemLoc&&(this.systemLoc=this.loc.redefaultToSystem());return this.systemLoc.dtFormatter(e,l(l({},this.opts),t)).format()}dtFormatter(e,t={}){return this.loc.dtFormatter(e,l(l({},this.opts),t))}formatDateTime(e,t){return this.dtFormatter(e,t).format()}formatDateTimeParts(e,t){return this.dtFormatter(e,t).formatToParts()}formatInterval(e,t){return this.dtFormatter(e.start,t).dtf.formatRange(e.start.toJSDate(),e.end.toJSDate())}resolvedOptions(e,t){return this.dtFormatter(e,t).resolvedOptions()}num(e,t=0){if(this.opts.forceSimple)return Ze(e,t);const n=l({},this.opts);return t>0&&(n.padTo=t),this.loc.numberFormatter(n).format(e)}formatDateTimeFromString(e,t){const n="en"===this.loc.listingMode(),r=this.loc.outputCalendar&&"gregory"!==this.loc.outputCalendar,i=(t,n)=>this.loc.extract(e,t,n),o=t=>e.isOffsetFixed&&0===e.offset&&t.allowZ?"Z":e.isValid?e.zone.formatOffset(e.ts,t.format):"",a=()=>n?function(e){return It[e.hour<12?0:1]}(e):i({hour:"numeric",hourCycle:"h12"},"dayperiod"),s=(t,r)=>n?function(e,t){return vt(t)[e.month-1]}(e,t):i(r?{month:t}:{month:t,day:"numeric"},"month"),l=(t,r)=>n?function(e,t){return Kt(t)[e.weekday-1]}(e,t):i(r?{weekday:t}:{weekday:t,month:"long",day:"numeric"},"weekday"),c=t=>{const n=Rt.macroTokenToFormatOpts(t);return n?this.formatWithSystemDefault(e,n):t},u=t=>n?function(e,t){return At(t)[e.year<0?0:1]}(e,t):i({era:t},"era");return Ot(Rt.parseFormat(t),t=>{switch(t){case"S":return this.num(e.millisecond);case"u":case"SSS":return this.num(e.millisecond,3);case"s":return this.num(e.second);case"ss":return this.num(e.second,2);case"uu":return this.num(Math.floor(e.millisecond/10),2);case"uuu":return this.num(Math.floor(e.millisecond/100));case"m":return this.num(e.minute);case"mm":return this.num(e.minute,2);case"h":return this.num(e.hour%12==0?12:e.hour%12);case"hh":return this.num(e.hour%12==0?12:e.hour%12,2);case"H":return this.num(e.hour);case"HH":return this.num(e.hour,2);case"Z":return o({format:"narrow",allowZ:this.opts.allowZ});case"ZZ":return o({format:"short",allowZ:this.opts.allowZ});case"ZZZ":return o({format:"techie",allowZ:this.opts.allowZ});case"ZZZZ":return e.zone.offsetName(e.ts,{format:"short",locale:this.loc.locale});case"ZZZZZ":return e.zone.offsetName(e.ts,{format:"long",locale:this.loc.locale});case"z":return e.zoneName;case"a":return a();case"d":return r?i({day:"numeric"},"day"):this.num(e.day);case"dd":return r?i({day:"2-digit"},"day"):this.num(e.day,2);case"c":case"E":return this.num(e.weekday);case"ccc":return l("short",!0);case"cccc":return l("long",!0);case"ccccc":return l("narrow",!0);case"EEE":return l("short",!1);case"EEEE":return l("long",!1);case"EEEEE":return l("narrow",!1);case"L":return r?i({month:"numeric",day:"numeric"},"month"):this.num(e.month);case"LL":return r?i({month:"2-digit",day:"numeric"},"month"):this.num(e.month,2);case"LLL":return s("short",!0);case"LLLL":return s("long",!0);case"LLLLL":return s("narrow",!0);case"M":return r?i({month:"numeric"},"month"):this.num(e.month);case"MM":return r?i({month:"2-digit"},"month"):this.num(e.month,2);case"MMM":return s("short",!1);case"MMMM":return s("long",!1);case"MMMMM":return s("narrow",!1);case"y":return r?i({year:"numeric"},"year"):this.num(e.year);case"yy":return r?i({year:"2-digit"},"year"):this.num(e.year.toString().slice(-2),2);case"yyyy":return r?i({year:"numeric"},"year"):this.num(e.year,4);case"yyyyyy":return r?i({year:"numeric"},"year"):this.num(e.year,6);case"G":return u("short");case"GG":return u("long");case"GGGGG":return u("narrow");case"kk":return this.num(e.weekYear.toString().slice(-2),2);case"kkkk":return this.num(e.weekYear,4);case"W":return this.num(e.weekNumber);case"WW":return this.num(e.weekNumber,2);case"n":return this.num(e.localWeekNumber);case"nn":return this.num(e.localWeekNumber,2);case"ii":return this.num(e.localWeekYear.toString().slice(-2),2);case"iiii":return this.num(e.localWeekYear,4);case"o":return this.num(e.ordinal);case"ooo":return this.num(e.ordinal,3);case"q":return this.num(e.quarter);case"qq":return this.num(e.quarter,2);case"X":return this.num(Math.floor(e.ts/1e3));case"x":return this.num(e.ts);default:return c(t)}})}formatDurationFromString(e,t){const n=e=>{switch(e[0]){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":return"hour";case"d":return"day";case"w":return"week";case"M":return"month";case"y":return"year";default:return null}},r=Rt.parseFormat(t),i=r.reduce((e,{literal:t,val:n})=>t?e:e.concat(n),[]);return Ot(r,(e=>t=>{const r=n(t);return r?this.num(e.get(r),t.length):t})(e.shiftTo(...i.map(n).filter(e=>e))))}}const Dt=/[A-Za-z_+-]{1,256}(?::?\/[A-Za-z0-9_+-]{1,256}(?:\/[A-Za-z0-9_+-]{1,256})?)?/;function Ct(...e){const t=e.reduce((e,t)=>e+t.source,"");return RegExp(`^${t}$`)}function Pt(...e){return t=>e.reduce(([e,n,r],i)=>{const[o,a,s]=i(t,r);return[l(l({},e),o),a||n,s]},[{},null,1]).slice(0,2)}function Mt(e,...t){if(null==e)return[null,null];for(const[n,r]of t){const t=n.exec(e);if(t)return r(t)}return[null,null]}function Nt(...e){return(t,n)=>{const r={};let i;for(i=0;i<e.length;i++)r[e[i]]=Xe(t[n+i]);return[r,null,n+i]}}const _t=/(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/,Lt=/(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/,Jt=RegExp(`${Lt.source}${`(?:${_t.source}?(?:\\[(${Dt.source})\\])?)?`}`),Ft=RegExp(`(?:T${Jt.source})?`),Vt=Nt("weekYear","weekNumber","weekDay"),Gt=Nt("year","ordinal"),qt=RegExp(`${Lt.source} ?(?:${_t.source}|(${Dt.source}))?`),Bt=RegExp(`(?: ${qt.source})?`);function Ut(e,t,n){const r=e[t];return qe(r)?n:Xe(r)}function Yt(e,t){return[{hours:Ut(e,t,0),minutes:Ut(e,t+1,0),seconds:Ut(e,t+2,0),milliseconds:tt(e[t+3])},null,t+4]}function zt(e,t){const n=!e[t]&&!e[t+1],r=dt(e[t+1],e[t+2]);return[{},n?null:de.instance(r),t+3]}function Wt(e,t){return[{},e[t]?W.create(e[t]):null,t+1]}const $t=RegExp(`^T?${Lt.source}$`),Qt=/^-?P(?:(?:(-?\d{1,20}(?:\.\d{1,20})?)Y)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20}(?:\.\d{1,20})?)W)?(?:(-?\d{1,20}(?:\.\d{1,20})?)D)?(?:T(?:(-?\d{1,20}(?:\.\d{1,20})?)H)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,20}))?S)?)?)$/;function Ht(e){const[t,n,r,i,o,a,s,l,c]=e,u="-"===t[0],d=l&&"-"===l[0],p=(e,t=!1)=>void 0!==e&&(t||e&&u)?-e:e;return[{years:p(et(n)),months:p(et(r)),weeks:p(et(i)),days:p(et(o)),hours:p(et(a)),minutes:p(et(s)),seconds:p(et(l),"-0"===l),milliseconds:p(tt(c),d)}]}const Zt={GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function Xt(e,t,n,r,i,o,a){const s={year:2===t.length?ct(Xe(t)):Xe(t),month:bt.indexOf(n)+1,day:Xe(r),hour:Xe(i),minute:Xe(o)};return a&&(s.second=Xe(a)),e&&(s.weekday=e.length>3?Et.indexOf(e)+1:wt.indexOf(e)+1),s}const en=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;function tn(e){const[,t,n,r,i,o,a,s,l,c,u,d]=e,p=Xt(t,i,r,n,o,a,s);let h;return h=l?Zt[l]:c?0:dt(u,d),[p,new de(h)]}const nn=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,rn=/^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,on=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;function an(e){const[,t,n,r,i,o,a,s]=e;return[Xt(t,i,r,n,o,a,s),de.utcInstance]}function sn(e){const[,t,n,r,i,o,a,s]=e;return[Xt(t,s,n,r,i,o,a),de.utcInstance]}const ln=Ct(/([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/,Ft),cn=Ct(/(\d{4})-?W(\d\d)(?:-?(\d))?/,Ft),un=Ct(/(\d{4})-?(\d{3})/,Ft),dn=Ct(Jt),pn=Pt(function(e,t){return[{year:Ut(e,t),month:Ut(e,t+1,1),day:Ut(e,t+2,1)},null,t+3]},Yt,zt,Wt),hn=Pt(Vt,Yt,zt,Wt),fn=Pt(Gt,Yt,zt,Wt),yn=Pt(Yt,zt,Wt);const mn=Pt(Yt);const bn=Ct(/(\d{4})-(\d\d)-(\d\d)/,Bt),gn=Ct(qt),vn=Pt(Yt,zt,Wt);const En="Invalid Duration",wn={weeks:{days:7,hours:168,minutes:10080,seconds:604800,milliseconds:6048e5},days:{hours:24,minutes:1440,seconds:86400,milliseconds:864e5},hours:{minutes:60,seconds:3600,milliseconds:36e5},minutes:{seconds:60,milliseconds:6e4},seconds:{milliseconds:1e3}},Sn=l({years:{quarters:4,months:12,weeks:52,days:365,hours:8760,minutes:525600,seconds:31536e3,milliseconds:31536e6},quarters:{months:3,weeks:13,days:91,hours:2184,minutes:131040,seconds:7862400,milliseconds:78624e5},months:{weeks:4,days:30,hours:720,minutes:43200,seconds:2592e3,milliseconds:2592e6}},wn),Kn=365.2425,In=30.436875,kn=l({years:{quarters:4,months:12,weeks:52.1775,days:Kn,hours:8765.82,minutes:525949.2,seconds:525949.2*60,milliseconds:525949.2*60*1e3},quarters:{months:3,weeks:13.044375,days:91.310625,hours:2191.455,minutes:131487.3,seconds:525949.2*60/4,milliseconds:7889237999.999999},months:{weeks:4.3481250000000005,days:In,hours:730.485,minutes:43829.1,seconds:2629746,milliseconds:2629746e3}},wn),jn=["years","quarters","months","weeks","days","hours","minutes","seconds","milliseconds"],xn=jn.slice(0).reverse();function An(e,t,n=!1){const r={values:n?t.values:l(l({},e.values),t.values||{}),loc:e.loc.clone(t.loc),conversionAccuracy:t.conversionAccuracy||e.conversionAccuracy,matrix:t.matrix||e.matrix};return new Rn(r)}function On(e,t){var n;let r=null!=(n=t.milliseconds)?n:0;for(const n of xn.slice(1))t[n]&&(r+=t[n]*e[n].milliseconds);return r}function Tn(e,t){const n=On(e,t)<0?-1:1;jn.reduceRight((r,i)=>{if(qe(t[i]))return r;if(r){const o=t[r]*n,a=e[i][r],s=Math.floor(o/a);t[i]+=s*n,t[r]-=s*a*n}return i},null),jn.reduce((n,r)=>{if(qe(t[r]))return n;if(n){const i=t[n]%1;t[n]-=i,t[r]+=i*e[n][r]}return r},null)}class Rn{constructor(e){const t="longterm"===e.conversionAccuracy||!1;let n=t?kn:Sn;e.matrix&&(n=e.matrix),this.values=e.values,this.loc=e.loc||ce.create(),this.conversionAccuracy=t?"longterm":"casual",this.invalid=e.invalid||null,this.matrix=n,this.isLuxonDuration=!0}static fromMillis(e,t){return Rn.fromObject({milliseconds:e},t)}static fromObject(e,t={}){if(null==e||"object"!=typeof e)throw new y("Duration.fromObject: argument expected to be an object, got "+(null===e?"null":typeof e));return new Rn({values:ht(e,Rn.normalizeUnit),loc:ce.fromObject(t),conversionAccuracy:t.conversionAccuracy,matrix:t.matrix})}static fromDurationLike(e){if(Be(e))return Rn.fromMillis(e);if(Rn.isDuration(e))return e;if("object"==typeof e)return Rn.fromObject(e);throw new y(`Unknown duration argument ${e} of type ${typeof e}`)}static fromISO(e,t){const[n]=function(e){return Mt(e,[Qt,Ht])}(e);return n?Rn.fromObject(n,t):Rn.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static fromISOTime(e,t){const[n]=function(e){return Mt(e,[$t,mn])}(e);return n?Rn.fromObject(n,t):Rn.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static invalid(e,t=null){if(!e)throw new y("need to specify a reason the Duration is invalid");const n=e instanceof Ae?e:new Ae(e,t);if(xe.throwOnInvalid)throw new p(n);return new Rn({invalid:n})}static normalizeUnit(e){const t={year:"years",years:"years",quarter:"quarters",quarters:"quarters",month:"months",months:"months",week:"weeks",weeks:"weeks",day:"days",days:"days",hour:"hours",hours:"hours",minute:"minutes",minutes:"minutes",second:"seconds",seconds:"seconds",millisecond:"milliseconds",milliseconds:"milliseconds"}[e?e.toLowerCase():e];if(!t)throw new f(e);return t}static isDuration(e){return e&&e.isLuxonDuration||!1}get locale(){return this.isValid?this.loc.locale:null}get numberingSystem(){return this.isValid?this.loc.numberingSystem:null}toFormat(e,t={}){const n=l(l({},t),{},{floor:!1!==t.round&&!1!==t.floor});return this.isValid?Rt.create(this.loc,n).formatDurationFromString(this,e):En}toHuman(e={}){if(!this.isValid)return En;const t=jn.map(t=>{const n=this.values[t];return qe(n)?null:this.loc.numberFormatter(l(l({style:"unit",unitDisplay:"long"},e),{},{unit:t.slice(0,-1)})).format(n)}).filter(e=>e);return this.loc.listFormatter(l({type:"conjunction",style:e.listStyle||"narrow"},e)).format(t)}toObject(){return this.isValid?l({},this.values):{}}toISO(){if(!this.isValid)return null;let e="P";return 0!==this.years&&(e+=this.years+"Y"),0===this.months&&0===this.quarters||(e+=this.months+3*this.quarters+"M"),0!==this.weeks&&(e+=this.weeks+"W"),0!==this.days&&(e+=this.days+"D"),0===this.hours&&0===this.minutes&&0===this.seconds&&0===this.milliseconds||(e+="T"),0!==this.hours&&(e+=this.hours+"H"),0!==this.minutes&&(e+=this.minutes+"M"),0===this.seconds&&0===this.milliseconds||(e+=nt(this.seconds+this.milliseconds/1e3,3)+"S"),"P"===e&&(e+="T0S"),e}toISOTime(e={}){if(!this.isValid)return null;const t=this.toMillis();if(t<0||t>=864e5)return null;e=l(l({suppressMilliseconds:!1,suppressSeconds:!1,includePrefix:!1,format:"extended"},e),{},{includeOffset:!1});return Kr.fromMillis(t,{zone:"UTC"}).toISOTime(e)}toJSON(){return this.toISO()}toString(){return this.toISO()}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`Duration { values: ${JSON.stringify(this.values)} }`:`Duration { Invalid, reason: ${this.invalidReason} }`}toMillis(){return this.isValid?On(this.matrix,this.values):NaN}valueOf(){return this.toMillis()}plus(e){if(!this.isValid)return this;const t=Rn.fromDurationLike(e),n={};for(const e of jn)($e(t.values,e)||$e(this.values,e))&&(n[e]=t.get(e)+this.get(e));return An(this,{values:n},!0)}minus(e){if(!this.isValid)return this;const t=Rn.fromDurationLike(e);return this.plus(t.negate())}mapUnits(e){if(!this.isValid)return this;const t={};for(const n of Object.keys(this.values))t[n]=pt(e(this.values[n],n));return An(this,{values:t},!0)}get(e){return this[Rn.normalizeUnit(e)]}set(e){if(!this.isValid)return this;return An(this,{values:l(l({},this.values),ht(e,Rn.normalizeUnit))})}reconfigure({locale:e,numberingSystem:t,conversionAccuracy:n,matrix:r}={}){return An(this,{loc:this.loc.clone({locale:e,numberingSystem:t}),matrix:r,conversionAccuracy:n})}as(e){return this.isValid?this.shiftTo(e).get(e):NaN}normalize(){if(!this.isValid)return this;const e=this.toObject();return Tn(this.matrix,e),An(this,{values:e},!0)}rescale(){if(!this.isValid)return this;return An(this,{values:function(e){const t={};for(const[n,r]of Object.entries(e))0!==r&&(t[n]=r);return t}(this.normalize().shiftToAll().toObject())},!0)}shiftTo(...e){if(!this.isValid)return this;if(0===e.length)return this;e=e.map(e=>Rn.normalizeUnit(e));const t={},n={},r=this.toObject();let i;for(const o of jn)if(e.indexOf(o)>=0){i=o;let e=0;for(const t in n)e+=this.matrix[t][o]*n[t],n[t]=0;Be(r[o])&&(e+=r[o]);const a=Math.trunc(e);t[o]=a,n[o]=(1e3*e-1e3*a)/1e3}else Be(r[o])&&(n[o]=r[o]);for(const e in n)0!==n[e]&&(t[i]+=e===i?n[e]:n[e]/this.matrix[i][e]);return Tn(this.matrix,t),An(this,{values:t},!0)}shiftToAll(){return this.isValid?this.shiftTo("years","months","weeks","days","hours","minutes","seconds","milliseconds"):this}negate(){if(!this.isValid)return this;const e={};for(const t of Object.keys(this.values))e[t]=0===this.values[t]?0:-this.values[t];return An(this,{values:e},!0)}get years(){return this.isValid?this.values.years||0:NaN}get quarters(){return this.isValid?this.values.quarters||0:NaN}get months(){return this.isValid?this.values.months||0:NaN}get weeks(){return this.isValid?this.values.weeks||0:NaN}get days(){return this.isValid?this.values.days||0:NaN}get hours(){return this.isValid?this.values.hours||0:NaN}get minutes(){return this.isValid?this.values.minutes||0:NaN}get seconds(){return this.isValid?this.values.seconds||0:NaN}get milliseconds(){return this.isValid?this.values.milliseconds||0:NaN}get isValid(){return null===this.invalid}get invalidReason(){return this.invalid?this.invalid.reason:null}get invalidExplanation(){return this.invalid?this.invalid.explanation:null}equals(e){if(!this.isValid||!e.isValid)return!1;if(!this.loc.equals(e.loc))return!1;function t(e,t){return void 0===e||0===e?void 0===t||0===t:e===t}for(const n of jn)if(!t(this.values[n],e.values[n]))return!1;return!0}}const Dn="Invalid Interval";class Cn{constructor(e){this.s=e.start,this.e=e.end,this.invalid=e.invalid||null,this.isLuxonInterval=!0}static invalid(e,t=null){if(!e)throw new y("need to specify a reason the Interval is invalid");const n=e instanceof Ae?e:new Ae(e,t);if(xe.throwOnInvalid)throw new d(n);return new Cn({invalid:n})}static fromDateTimes(e,t){const n=Ir(e),r=Ir(t),i=function(e,t){return e&&e.isValid?t&&t.isValid?t<e?Cn.invalid("end before start",`The end of an interval must be after its start, but you had start=${e.toISO()} and end=${t.toISO()}`):null:Cn.invalid("missing or invalid end"):Cn.invalid("missing or invalid start")}(n,r);return null==i?new Cn({start:n,end:r}):i}static after(e,t){const n=Rn.fromDurationLike(t),r=Ir(e);return Cn.fromDateTimes(r,r.plus(n))}static before(e,t){const n=Rn.fromDurationLike(t),r=Ir(e);return Cn.fromDateTimes(r.minus(n),r)}static fromISO(e,t){const[n,r]=(e||"").split("/",2);if(n&&r){let e,i,o,a;try{e=Kr.fromISO(n,t),i=e.isValid}catch(r){i=!1}try{o=Kr.fromISO(r,t),a=o.isValid}catch(r){a=!1}if(i&&a)return Cn.fromDateTimes(e,o);if(i){const n=Rn.fromISO(r,t);if(n.isValid)return Cn.after(e,n)}else if(a){const e=Rn.fromISO(n,t);if(e.isValid)return Cn.before(o,e)}}return Cn.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static isInterval(e){return e&&e.isLuxonInterval||!1}get start(){return this.isValid?this.s:null}get end(){return this.isValid?this.e:null}get lastDateTime(){return this.isValid&&this.e?this.e.minus(1):null}get isValid(){return null===this.invalidReason}get invalidReason(){return this.invalid?this.invalid.reason:null}get invalidExplanation(){return this.invalid?this.invalid.explanation:null}length(e="milliseconds"){return this.isValid?this.toDuration(e).get(e):NaN}count(e="milliseconds",t){if(!this.isValid)return NaN;const n=this.start.startOf(e,t);let r;return r=null!=t&&t.useLocaleWeeks?this.end.reconfigure({locale:n.locale}):this.end,r=r.startOf(e,t),Math.floor(r.diff(n,e).get(e))+(r.valueOf()!==this.end.valueOf())}hasSame(e){return!!this.isValid&&(this.isEmpty()||this.e.minus(1).hasSame(this.s,e))}isEmpty(){return this.s.valueOf()===this.e.valueOf()}isAfter(e){return!!this.isValid&&this.s>e}isBefore(e){return!!this.isValid&&this.e<=e}contains(e){return!!this.isValid&&(this.s<=e&&this.e>e)}set({start:e,end:t}={}){return this.isValid?Cn.fromDateTimes(e||this.s,t||this.e):this}splitAt(...e){if(!this.isValid)return[];const t=e.map(Ir).filter(e=>this.contains(e)).sort((e,t)=>e.toMillis()-t.toMillis()),n=[];let{s:r}=this,i=0;for(;r<this.e;){const e=t[i]||this.e,o=+e>+this.e?this.e:e;n.push(Cn.fromDateTimes(r,o)),r=o,i+=1}return n}splitBy(e){const t=Rn.fromDurationLike(e);if(!this.isValid||!t.isValid||0===t.as("milliseconds"))return[];let n,{s:r}=this,i=1;const o=[];for(;r<this.e;){const e=this.start.plus(t.mapUnits(e=>e*i));n=+e>+this.e?this.e:e,o.push(Cn.fromDateTimes(r,n)),r=n,i+=1}return o}divideEqually(e){return this.isValid?this.splitBy(this.length()/e).slice(0,e):[]}overlaps(e){return this.e>e.s&&this.s<e.e}abutsStart(e){return!!this.isValid&&+this.e===+e.s}abutsEnd(e){return!!this.isValid&&+e.e===+this.s}engulfs(e){return!!this.isValid&&(this.s<=e.s&&this.e>=e.e)}equals(e){return!(!this.isValid||!e.isValid)&&(this.s.equals(e.s)&&this.e.equals(e.e))}intersection(e){if(!this.isValid)return this;const t=this.s>e.s?this.s:e.s,n=this.e<e.e?this.e:e.e;return t>=n?null:Cn.fromDateTimes(t,n)}union(e){if(!this.isValid)return this;const t=this.s<e.s?this.s:e.s,n=this.e>e.e?this.e:e.e;return Cn.fromDateTimes(t,n)}static merge(e){const[t,n]=e.sort((e,t)=>e.s-t.s).reduce(([e,t],n)=>t?t.overlaps(n)||t.abutsStart(n)?[e,t.union(n)]:[e.concat([t]),n]:[e,n],[[],null]);return n&&t.push(n),t}static xor(e){let t=null,n=0;const r=[],i=e.map(e=>[{time:e.s,type:"s"},{time:e.e,type:"e"}]),o=Array.prototype.concat(...i).sort((e,t)=>e.time-t.time);for(const e of o)n+="s"===e.type?1:-1,1===n?t=e.time:(t&&+t!==+e.time&&r.push(Cn.fromDateTimes(t,e.time)),t=null);return Cn.merge(r)}difference(...e){return Cn.xor([this].concat(e)).map(e=>this.intersection(e)).filter(e=>e&&!e.isEmpty())}toString(){return this.isValid?`[${this.s.toISO()} – ${this.e.toISO()})`:Dn}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`Interval { start: ${this.s.toISO()}, end: ${this.e.toISO()} }`:`Interval { Invalid, reason: ${this.invalidReason} }`}toLocaleString(e=E,t={}){return this.isValid?Rt.create(this.s.loc.clone(t),e).formatInterval(this):Dn}toISO(e){return this.isValid?`${this.s.toISO(e)}/${this.e.toISO(e)}`:Dn}toISODate(){return this.isValid?`${this.s.toISODate()}/${this.e.toISODate()}`:Dn}toISOTime(e){return this.isValid?`${this.s.toISOTime(e)}/${this.e.toISOTime(e)}`:Dn}toFormat(e,{separator:t=" – "}={}){return this.isValid?`${this.s.toFormat(e)}${t}${this.e.toFormat(e)}`:Dn}toDuration(e,t){return this.isValid?this.e.diff(this.s,e,t):Rn.invalid(this.invalidReason)}mapEndpoints(e){return Cn.fromDateTimes(e(this.s),e(this.e))}}class Pn{static hasDST(e=xe.defaultZone){const t=Kr.now().setZone(e).set({month:12});return!e.isUniversal&&t.offset!==t.set({month:6}).offset}static isValidIANAZone(e){return W.isValidZone(e)}static normalizeZone(e){return he(e,xe.defaultZone)}static getStartOfWeek({locale:e=null,locObj:t=null}={}){return(t||ce.create(e)).getStartOfWeek()}static getMinimumDaysInFirstWeek({locale:e=null,locObj:t=null}={}){return(t||ce.create(e)).getMinDaysInFirstWeek()}static getWeekendWeekdays({locale:e=null,locObj:t=null}={}){return(t||ce.create(e)).getWeekendDays().slice()}static months(e="long",{locale:t=null,numberingSystem:n=null,locObj:r=null,outputCalendar:i="gregory"}={}){return(r||ce.create(t,n,i)).months(e)}static monthsFormat(e="long",{locale:t=null,numberingSystem:n=null,locObj:r=null,outputCalendar:i="gregory"}={}){return(r||ce.create(t,n,i)).months(e,!0)}static weekdays(e="long",{locale:t=null,numberingSystem:n=null,locObj:r=null}={}){return(r||ce.create(t,n,null)).weekdays(e)}static weekdaysFormat(e="long",{locale:t=null,numberingSystem:n=null,locObj:r=null}={}){return(r||ce.create(t,n,null)).weekdays(e,!0)}static meridiems({locale:e=null}={}){return ce.create(e).meridiems()}static eras(e="short",{locale:t=null}={}){return ce.create(t,null,"gregory").eras(e)}static features(){return{relative:Ye(),localeWeek:ze()}}}function Mn(e,t){const n=e=>e.toUTC(0,{keepLocalTime:!0}).startOf("day").valueOf(),r=n(t)-n(e);return Math.floor(Rn.fromMillis(r).as("days"))}function Nn(e,t,n,r){let[i,o,a,s]=function(e,t,n){const r=[["years",(e,t)=>t.year-e.year],["quarters",(e,t)=>t.quarter-e.quarter+4*(t.year-e.year)],["months",(e,t)=>t.month-e.month+12*(t.year-e.year)],["weeks",(e,t)=>{const n=Mn(e,t);return(n-n%7)/7}],["days",Mn]],i={},o=e;let a,s;for(const[l,c]of r)n.indexOf(l)>=0&&(a=l,i[l]=c(e,t),s=o.plus(i),s>t?(i[l]--,(e=o.plus(i))>t&&(s=e,i[l]--,e=o.plus(i))):e=s);return[e,i,s,a]}(e,t,n);const l=t-i,c=n.filter(e=>["hours","minutes","seconds","milliseconds"].indexOf(e)>=0);0===c.length&&(a<t&&(a=i.plus({[s]:1})),a!==i&&(o[s]=(o[s]||0)+l/(a-i)));const u=Rn.fromObject(o,r);return c.length>0?Rn.fromMillis(l,r).shiftTo(...c).plus(u):u}function _n(e,t=e=>e){return{regex:e,deser:([e])=>t(function(e){let t=parseInt(e,10);if(isNaN(t)){t="";for(let n=0;n<e.length;n++){const r=e.charCodeAt(n);if(-1!==e[n].search(fe.hanidec))t+=me.indexOf(e[n]);else for(const e in ye){const[n,i]=ye[e];r>=n&&r<=i&&(t+=r-n)}}return parseInt(t,10)}return t}(e))}}const Ln=`[ ${String.fromCharCode(160)}]`,Jn=new RegExp(Ln,"g");function Fn(e){return e.replace(/\./g,"\\.?").replace(Jn,Ln)}function Vn(e){return e.replace(/\./g,"").replace(Jn," ").toLowerCase()}function Gn(e,t){return null===e?null:{regex:RegExp(e.map(Fn).join("|")),deser:([n])=>e.findIndex(e=>Vn(n)===Vn(e))+t}}function qn(e,t){return{regex:e,deser:([,e,t])=>dt(e,t),groups:t}}function Bn(e){return{regex:e,deser:([e])=>e}}const Un={year:{"2-digit":"yy",numeric:"yyyyy"},month:{numeric:"M","2-digit":"MM",short:"MMM",long:"MMMM"},day:{numeric:"d","2-digit":"dd"},weekday:{short:"EEE",long:"EEEE"},dayperiod:"a",dayPeriod:"a",hour12:{numeric:"h","2-digit":"hh"},hour24:{numeric:"H","2-digit":"HH"},minute:{numeric:"m","2-digit":"mm"},second:{numeric:"s","2-digit":"ss"},timeZoneName:{long:"ZZZZZ",short:"ZZZ"}};let Yn=null;function zn(e,t){return Array.prototype.concat(...e.map(e=>function(e,t){if(e.literal)return e;const n=Qn(Rt.macroTokenToFormatOpts(e.val),t);return null==n||n.includes(void 0)?e:n}(e,t)))}class Wn{constructor(e,t){if(this.locale=e,this.format=t,this.tokens=zn(Rt.parseFormat(t),e),this.units=this.tokens.map(t=>function(e,t){const n=ge(t),r=ge(t,"{2}"),i=ge(t,"{3}"),o=ge(t,"{4}"),a=ge(t,"{6}"),s=ge(t,"{1,2}"),l=ge(t,"{1,3}"),c=ge(t,"{1,6}"),u=ge(t,"{1,9}"),d=ge(t,"{2,4}"),p=ge(t,"{4,6}"),h=e=>{return{regex:RegExp((t=e.val,t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"))),deser:([e])=>e,literal:!0};var t},f=(f=>{if(e.literal)return h(f);switch(f.val){case"G":return Gn(t.eras("short"),0);case"GG":return Gn(t.eras("long"),0);case"y":return _n(c);case"yy":case"kk":return _n(d,ct);case"yyyy":case"kkkk":return _n(o);case"yyyyy":return _n(p);case"yyyyyy":return _n(a);case"M":case"L":case"d":case"H":case"h":case"m":case"q":case"s":case"W":return _n(s);case"MM":case"LL":case"dd":case"HH":case"hh":case"mm":case"qq":case"ss":case"WW":return _n(r);case"MMM":return Gn(t.months("short",!0),1);case"MMMM":return Gn(t.months("long",!0),1);case"LLL":return Gn(t.months("short",!1),1);case"LLLL":return Gn(t.months("long",!1),1);case"o":case"S":return _n(l);case"ooo":case"SSS":return _n(i);case"u":return Bn(u);case"uu":return Bn(s);case"uuu":case"E":case"c":return _n(n);case"a":return Gn(t.meridiems(),0);case"EEE":return Gn(t.weekdays("short",!1),1);case"EEEE":return Gn(t.weekdays("long",!1),1);case"ccc":return Gn(t.weekdays("short",!0),1);case"cccc":return Gn(t.weekdays("long",!0),1);case"Z":case"ZZ":return qn(new RegExp(`([+-]${s.source})(?::(${r.source}))?`),2);case"ZZZ":return qn(new RegExp(`([+-]${s.source})(${r.source})?`),2);case"z":return Bn(/[a-z_+-/]{1,256}?/i);case" ":return Bn(/[^\S\n\r]/);default:return h(f)}})(e)||{invalidReason:"missing Intl.DateTimeFormat.formatToParts support"};return f.token=e,f}(t,e)),this.disqualifyingUnit=this.units.find(e=>e.invalidReason),!this.disqualifyingUnit){const[e,t]=[`^${(n=this.units).map(e=>e.regex).reduce((e,t)=>`${e}(${t.source})`,"")}$`,n];this.regex=RegExp(e,"i"),this.handlers=t}var n}explainFromTokens(e){if(this.isValid){const[t,n]=function(e,t,n){const r=e.match(t);if(r){const e={};let t=1;for(const i in n)if($e(n,i)){const o=n[i],a=o.groups?o.groups+1:1;!o.literal&&o.token&&(e[o.token.val[0]]=o.deser(r.slice(t,t+a))),t+=a}return[r,e]}return[r,{}]}(e,this.regex,this.handlers),[r,i,o]=n?function(e){let t,n=null;return qe(e.z)||(n=W.create(e.z)),qe(e.Z)||(n||(n=new de(e.Z)),t=e.Z),qe(e.q)||(e.M=3*(e.q-1)+1),qe(e.h)||(e.h<12&&1===e.a?e.h+=12:12===e.h&&0===e.a&&(e.h=0)),0===e.G&&e.y&&(e.y=-e.y),qe(e.u)||(e.S=tt(e.u)),[Object.keys(e).reduce((t,n)=>{const r=(e=>{switch(e){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":case"H":return"hour";case"d":return"day";case"o":return"ordinal";case"L":case"M":return"month";case"y":return"year";case"E":case"c":return"weekday";case"W":return"weekNumber";case"k":return"weekYear";case"q":return"quarter";default:return null}})(n);return r&&(t[r]=e[n]),t},{}),n,t]}(n):[null,null,void 0];if($e(n,"a")&&$e(n,"H"))throw new h("Can't include meridiem when specifying 24-hour format");return{input:e,tokens:this.tokens,regex:this.regex,rawMatches:t,matches:n,result:r,zone:i,specificOffset:o}}return{input:e,tokens:this.tokens,invalidReason:this.invalidReason}}get isValid(){return!this.disqualifyingUnit}get invalidReason(){return this.disqualifyingUnit?this.disqualifyingUnit.invalidReason:null}}function $n(e,t,n){return new Wn(e,n).explainFromTokens(t)}function Qn(e,t){if(!e)return null;const n=Rt.create(t,e).dtFormatter((Yn||(Yn=Kr.fromMillis(1555555555555)),Yn)),r=n.formatToParts(),i=n.resolvedOptions();return r.map(t=>function(e,t,n){const{type:r,value:i}=e;if("literal"===r){const e=/^\s+$/.test(i);return{literal:!e,val:e?" ":i}}const o=t[r];let a=r;"hour"===r&&(a=null!=t.hour12?t.hour12?"hour12":"hour24":null!=t.hourCycle?"h11"===t.hourCycle||"h12"===t.hourCycle?"hour12":"hour24":n.hour12?"hour12":"hour24");let s=Un[a];if("object"==typeof s&&(s=s[o]),s)return{literal:!1,val:s}}(t,e,i))}const Hn="Invalid DateTime",Zn=864e13;function Xn(e){return new Ae("unsupported zone",`the zone "${e.name}" is not supported`)}function er(e){return null===e.weekData&&(e.weekData=Ne(e.c)),e.weekData}function tr(e){return null===e.localWeekData&&(e.localWeekData=Ne(e.c,e.loc.getMinDaysInFirstWeek(),e.loc.getStartOfWeek())),e.localWeekData}function nr(e,t){const n={ts:e.ts,zone:e.zone,c:e.c,o:e.o,loc:e.loc,invalid:e.invalid};return new Kr(l(l(l({},n),t),{},{old:n}))}function rr(e,t,n){let r=e-60*t*1e3;const i=n.offset(r);if(t===i)return[r,t];r-=60*(i-t)*1e3;const o=n.offset(r);return i===o?[r,i]:[e-60*Math.min(i,o)*1e3,Math.max(i,o)]}function ir(e,t){const n=new Date(e+=60*t*1e3);return{year:n.getUTCFullYear(),month:n.getUTCMonth()+1,day:n.getUTCDate(),hour:n.getUTCHours(),minute:n.getUTCMinutes(),second:n.getUTCSeconds(),millisecond:n.getUTCMilliseconds()}}function or(e,t,n){return rr(at(e),t,n)}function ar(e,t){const n=e.o,r=e.c.year+Math.trunc(t.years),i=e.c.month+Math.trunc(t.months)+3*Math.trunc(t.quarters),o=l(l({},e.c),{},{year:r,month:i,day:Math.min(e.c.day,ot(r,i))+Math.trunc(t.days)+7*Math.trunc(t.weeks)}),a=Rn.fromObject({years:t.years-Math.trunc(t.years),quarters:t.quarters-Math.trunc(t.quarters),months:t.months-Math.trunc(t.months),weeks:t.weeks-Math.trunc(t.weeks),days:t.days-Math.trunc(t.days),hours:t.hours,minutes:t.minutes,seconds:t.seconds,milliseconds:t.milliseconds}).as("milliseconds"),s=at(o);let[c,u]=rr(s,n,e.zone);return 0!==a&&(c+=a,u=e.zone.offset(c)),{ts:c,o:u}}function sr(e,t,n,r,i,o){const{setZone:a,zone:s}=n;if(e&&0!==Object.keys(e).length||t){const r=t||s,i=Kr.fromObject(e,l(l({},n),{},{zone:r,specificOffset:o}));return a?i:i.setZone(s)}return Kr.invalid(new Ae("unparsable",`the input "${i}" can't be parsed as ${r}`))}function lr(e,t,n=!0){return e.isValid?Rt.create(ce.create("en-US"),{allowZ:n,forceSimple:!0}).formatDateTimeFromString(e,t):null}function cr(e,t){const n=e.c.year>9999||e.c.year<0;let r="";return n&&e.c.year>=0&&(r+="+"),r+=Ze(e.c.year,n?6:4),t?(r+="-",r+=Ze(e.c.month),r+="-",r+=Ze(e.c.day)):(r+=Ze(e.c.month),r+=Ze(e.c.day)),r}function ur(e,t,n,r,i,o){let a=Ze(e.c.hour);return t?(a+=":",a+=Ze(e.c.minute),0===e.c.millisecond&&0===e.c.second&&n||(a+=":")):a+=Ze(e.c.minute),0===e.c.millisecond&&0===e.c.second&&n||(a+=Ze(e.c.second),0===e.c.millisecond&&r||(a+=".",a+=Ze(e.c.millisecond,3))),i&&(e.isOffsetFixed&&0===e.offset&&!o?a+="Z":e.o<0?(a+="-",a+=Ze(Math.trunc(-e.o/60)),a+=":",a+=Ze(Math.trunc(-e.o%60))):(a+="+",a+=Ze(Math.trunc(e.o/60)),a+=":",a+=Ze(Math.trunc(e.o%60)))),o&&(a+="["+e.zone.ianaName+"]"),a}const dr={month:1,day:1,hour:0,minute:0,second:0,millisecond:0},pr={weekNumber:1,weekday:1,hour:0,minute:0,second:0,millisecond:0},hr={ordinal:1,hour:0,minute:0,second:0,millisecond:0},fr=["year","month","day","hour","minute","second","millisecond"],yr=["weekYear","weekNumber","weekday","hour","minute","second","millisecond"],mr=["year","ordinal","hour","minute","second","millisecond"];function br(e){switch(e.toLowerCase()){case"localweekday":case"localweekdays":return"localWeekday";case"localweeknumber":case"localweeknumbers":return"localWeekNumber";case"localweekyear":case"localweekyears":return"localWeekYear";default:return function(e){const t={year:"year",years:"year",month:"month",months:"month",day:"day",days:"day",hour:"hour",hours:"hour",minute:"minute",minutes:"minute",quarter:"quarter",quarters:"quarter",second:"second",seconds:"second",millisecond:"millisecond",milliseconds:"millisecond",weekday:"weekday",weekdays:"weekday",weeknumber:"weekNumber",weeksnumber:"weekNumber",weeknumbers:"weekNumber",weekyear:"weekYear",weekyears:"weekYear",ordinal:"ordinal"}[e.toLowerCase()];if(!t)throw new f(e);return t}(e)}}function gr(e,t){const n=he(t.zone,xe.defaultZone);if(!n.isValid)return Kr.invalid(Xn(n));const r=ce.fromObject(t);let i,o;if(qe(e.year))i=xe.now();else{for(const t of fr)qe(e[t])&&(e[t]=dr[t]);const t=Ve(e)||Ge(e);if(t)return Kr.invalid(t);const r=function(e){if(void 0===wr&&(wr=xe.now()),"iana"!==e.type)return e.offset(wr);const t=e.name;let n=Sr.get(t);return void 0===n&&(n=e.offset(wr),Sr.set(t,n)),n}(n);[i,o]=or(e,r,n)}return new Kr({ts:i,zone:n,loc:r,o})}function vr(e,t,n){const r=!!qe(n.round)||n.round,i=(e,i)=>{e=nt(e,r||n.calendary?0:2,!0);return t.loc.clone(n).relFormatter(n).format(e,i)},o=r=>n.calendary?t.hasSame(e,r)?0:t.startOf(r).diff(e.startOf(r),r).get(r):t.diff(e,r).get(r);if(n.unit)return i(o(n.unit),n.unit);for(const e of n.units){const t=o(e);if(Math.abs(t)>=1)return i(t,e)}return i(e>t?-0:0,n.units[n.units.length-1])}function Er(e){let t,n={};return e.length>0&&"object"==typeof e[e.length-1]?(n=e[e.length-1],t=Array.from(e).slice(0,e.length-1)):t=Array.from(e),[n,t]}let wr;const Sr=new Map;class Kr{constructor(e){const t=e.zone||xe.defaultZone;let n=e.invalid||(Number.isNaN(e.ts)?new Ae("invalid input"):null)||(t.isValid?null:Xn(t));this.ts=qe(e.ts)?xe.now():e.ts;let r=null,i=null;if(!n){if(e.old&&e.old.ts===this.ts&&e.old.zone.equals(t))[r,i]=[e.old.c,e.old.o];else{const o=Be(e.o)&&!e.old?e.o:t.offset(this.ts);r=ir(this.ts,o),n=Number.isNaN(r.year)?new Ae("invalid input"):null,r=n?null:r,i=n?null:o}}this._zone=t,this.loc=e.loc||ce.create(),this.invalid=n,this.weekData=null,this.localWeekData=null,this.c=r,this.o=i,this.isLuxonDateTime=!0}static now(){return new Kr({})}static local(){const[e,t]=Er(arguments),[n,r,i,o,a,s,l]=t;return gr({year:n,month:r,day:i,hour:o,minute:a,second:s,millisecond:l},e)}static utc(){const[e,t]=Er(arguments),[n,r,i,o,a,s,l]=t;return e.zone=de.utcInstance,gr({year:n,month:r,day:i,hour:o,minute:a,second:s,millisecond:l},e)}static fromJSDate(e,t={}){const n=(r=e,"[object Date]"===Object.prototype.toString.call(r)?e.valueOf():NaN);var r;if(Number.isNaN(n))return Kr.invalid("invalid input");const i=he(t.zone,xe.defaultZone);return i.isValid?new Kr({ts:n,zone:i,loc:ce.fromObject(t)}):Kr.invalid(Xn(i))}static fromMillis(e,t={}){if(Be(e))return e<-Zn||e>Zn?Kr.invalid("Timestamp out of range"):new Kr({ts:e,zone:he(t.zone,xe.defaultZone),loc:ce.fromObject(t)});throw new y(`fromMillis requires a numerical input, but received a ${typeof e} with value ${e}`)}static fromSeconds(e,t={}){if(Be(e))return new Kr({ts:1e3*e,zone:he(t.zone,xe.defaultZone),loc:ce.fromObject(t)});throw new y("fromSeconds requires a numerical input")}static fromObject(e,t={}){e=e||{};const n=he(t.zone,xe.defaultZone);if(!n.isValid)return Kr.invalid(Xn(n));const r=ce.fromObject(t),i=ht(e,br),{minDaysInFirstWeek:o,startOfWeek:a}=Fe(i,r),s=xe.now(),l=qe(t.specificOffset)?n.offset(s):t.specificOffset,c=!qe(i.ordinal),u=!qe(i.year),d=!qe(i.month)||!qe(i.day),p=u||d,f=i.weekYear||i.weekNumber;if((p||c)&&f)throw new h("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(d&&c)throw new h("Can't mix ordinal dates with month/day");const y=f||i.weekday&&!p;let m,b,g=ir(s,l);y?(m=yr,b=pr,g=Ne(g,o,a)):c?(m=mr,b=hr,g=Le(g)):(m=fr,b=dr);let v=!1;for(const e of m){qe(i[e])?i[e]=v?b[e]:g[e]:v=!0}const E=y?function(e,t=4,n=1){const r=Ue(e.weekYear),i=He(e.weekNumber,1,lt(e.weekYear,t,n)),o=He(e.weekday,1,7);return r?i?!o&&Re("weekday",e.weekday):Re("week",e.weekNumber):Re("weekYear",e.weekYear)}(i,o,a):c?function(e){const t=Ue(e.year),n=He(e.ordinal,1,it(e.year));return t?!n&&Re("ordinal",e.ordinal):Re("year",e.year)}(i):Ve(i),w=E||Ge(i);if(w)return Kr.invalid(w);const S=y?_e(i,o,a):c?Je(i):i,[K,I]=or(S,l,n),k=new Kr({ts:K,zone:n,o:I,loc:r});return i.weekday&&p&&e.weekday!==k.weekday?Kr.invalid("mismatched weekday",`you can't specify both a weekday of ${i.weekday} and a date of ${k.toISO()}`):k.isValid?k:Kr.invalid(k.invalid)}static fromISO(e,t={}){const[n,r]=function(e){return Mt(e,[ln,pn],[cn,hn],[un,fn],[dn,yn])}(e);return sr(n,r,t,"ISO 8601",e)}static fromRFC2822(e,t={}){const[n,r]=function(e){return Mt(function(e){return e.replace(/\([^()]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").trim()}(e),[en,tn])}(e);return sr(n,r,t,"RFC 2822",e)}static fromHTTP(e,t={}){const[n,r]=function(e){return Mt(e,[nn,an],[rn,an],[on,sn])}(e);return sr(n,r,t,"HTTP",t)}static fromFormat(e,t,n={}){if(qe(e)||qe(t))throw new y("fromFormat requires an input string and a format");const{locale:r=null,numberingSystem:i=null}=n,o=ce.fromOpts({locale:r,numberingSystem:i,defaultToEN:!0}),[a,s,l,c]=function(e,t,n){const{result:r,zone:i,specificOffset:o,invalidReason:a}=$n(e,t,n);return[r,i,o,a]}(o,e,t);return c?Kr.invalid(c):sr(a,s,n,`format ${t}`,e,l)}static fromString(e,t,n={}){return Kr.fromFormat(e,t,n)}static fromSQL(e,t={}){const[n,r]=function(e){return Mt(e,[bn,pn],[gn,vn])}(e);return sr(n,r,t,"SQL",e)}static invalid(e,t=null){if(!e)throw new y("need to specify a reason the DateTime is invalid");const n=e instanceof Ae?e:new Ae(e,t);if(xe.throwOnInvalid)throw new u(n);return new Kr({invalid:n})}static isDateTime(e){return e&&e.isLuxonDateTime||!1}static parseFormatForOpts(e,t={}){const n=Qn(e,ce.fromObject(t));return n?n.map(e=>e?e.val:null).join(""):null}static expandFormat(e,t={}){return zn(Rt.parseFormat(e),ce.fromObject(t)).map(e=>e.val).join("")}static resetCache(){wr=void 0,Sr.clear()}get(e){return this[e]}get isValid(){return null===this.invalid}get invalidReason(){return this.invalid?this.invalid.reason:null}get invalidExplanation(){return this.invalid?this.invalid.explanation:null}get locale(){return this.isValid?this.loc.locale:null}get numberingSystem(){return this.isValid?this.loc.numberingSystem:null}get outputCalendar(){return this.isValid?this.loc.outputCalendar:null}get zone(){return this._zone}get zoneName(){return this.isValid?this.zone.name:null}get year(){return this.isValid?this.c.year:NaN}get quarter(){return this.isValid?Math.ceil(this.c.month/3):NaN}get month(){return this.isValid?this.c.month:NaN}get day(){return this.isValid?this.c.day:NaN}get hour(){return this.isValid?this.c.hour:NaN}get minute(){return this.isValid?this.c.minute:NaN}get second(){return this.isValid?this.c.second:NaN}get millisecond(){return this.isValid?this.c.millisecond:NaN}get weekYear(){return this.isValid?er(this).weekYear:NaN}get weekNumber(){return this.isValid?er(this).weekNumber:NaN}get weekday(){return this.isValid?er(this).weekday:NaN}get isWeekend(){return this.isValid&&this.loc.getWeekendDays().includes(this.weekday)}get localWeekday(){return this.isValid?tr(this).weekday:NaN}get localWeekNumber(){return this.isValid?tr(this).weekNumber:NaN}get localWeekYear(){return this.isValid?tr(this).weekYear:NaN}get ordinal(){return this.isValid?Le(this.c).ordinal:NaN}get monthShort(){return this.isValid?Pn.months("short",{locObj:this.loc})[this.month-1]:null}get monthLong(){return this.isValid?Pn.months("long",{locObj:this.loc})[this.month-1]:null}get weekdayShort(){return this.isValid?Pn.weekdays("short",{locObj:this.loc})[this.weekday-1]:null}get weekdayLong(){return this.isValid?Pn.weekdays("long",{locObj:this.loc})[this.weekday-1]:null}get offset(){return this.isValid?+this.o:NaN}get offsetNameShort(){return this.isValid?this.zone.offsetName(this.ts,{format:"short",locale:this.locale}):null}get offsetNameLong(){return this.isValid?this.zone.offsetName(this.ts,{format:"long",locale:this.locale}):null}get isOffsetFixed(){return this.isValid?this.zone.isUniversal:null}get isInDST(){return!this.isOffsetFixed&&(this.offset>this.set({month:1,day:1}).offset||this.offset>this.set({month:5}).offset)}getPossibleOffsets(){if(!this.isValid||this.isOffsetFixed)return[this];const e=864e5,t=6e4,n=at(this.c),r=this.zone.offset(n-e),i=this.zone.offset(n+e),o=this.zone.offset(n-r*t),a=this.zone.offset(n-i*t);if(o===a)return[this];const s=n-o*t,l=n-a*t,c=ir(s,o),u=ir(l,a);return c.hour===u.hour&&c.minute===u.minute&&c.second===u.second&&c.millisecond===u.millisecond?[nr(this,{ts:s}),nr(this,{ts:l})]:[this]}get isInLeapYear(){return rt(this.year)}get daysInMonth(){return ot(this.year,this.month)}get daysInYear(){return this.isValid?it(this.year):NaN}get weeksInWeekYear(){return this.isValid?lt(this.weekYear):NaN}get weeksInLocalWeekYear(){return this.isValid?lt(this.localWeekYear,this.loc.getMinDaysInFirstWeek(),this.loc.getStartOfWeek()):NaN}resolvedLocaleOptions(e={}){const{locale:t,numberingSystem:n,calendar:r}=Rt.create(this.loc.clone(e),e).resolvedOptions(this);return{locale:t,numberingSystem:n,outputCalendar:r}}toUTC(e=0,t={}){return this.setZone(de.instance(e),t)}toLocal(){return this.setZone(xe.defaultZone)}setZone(e,{keepLocalTime:t=!1,keepCalendarTime:n=!1}={}){if((e=he(e,xe.defaultZone)).equals(this.zone))return this;if(e.isValid){let r=this.ts;if(t||n){const t=e.offset(this.ts),n=this.toObject();[r]=or(n,t,e)}return nr(this,{ts:r,zone:e})}return Kr.invalid(Xn(e))}reconfigure({locale:e,numberingSystem:t,outputCalendar:n}={}){return nr(this,{loc:this.loc.clone({locale:e,numberingSystem:t,outputCalendar:n})})}setLocale(e){return this.reconfigure({locale:e})}set(e){if(!this.isValid)return this;const t=ht(e,br),{minDaysInFirstWeek:n,startOfWeek:r}=Fe(t,this.loc),i=!qe(t.weekYear)||!qe(t.weekNumber)||!qe(t.weekday),o=!qe(t.ordinal),a=!qe(t.year),s=!qe(t.month)||!qe(t.day),c=a||s,u=t.weekYear||t.weekNumber;if((c||o)&&u)throw new h("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(s&&o)throw new h("Can't mix ordinal dates with month/day");let d;i?d=_e(l(l({},Ne(this.c,n,r)),t),n,r):qe(t.ordinal)?(d=l(l({},this.toObject()),t),qe(t.day)&&(d.day=Math.min(ot(d.year,d.month),d.day))):d=Je(l(l({},Le(this.c)),t));const[p,f]=or(d,this.o,this.zone);return nr(this,{ts:p,o:f})}plus(e){if(!this.isValid)return this;return nr(this,ar(this,Rn.fromDurationLike(e)))}minus(e){if(!this.isValid)return this;return nr(this,ar(this,Rn.fromDurationLike(e).negate()))}startOf(e,{useLocaleWeeks:t=!1}={}){if(!this.isValid)return this;const n={},r=Rn.normalizeUnit(e);switch(r){case"years":n.month=1;case"quarters":case"months":n.day=1;case"weeks":case"days":n.hour=0;case"hours":n.minute=0;case"minutes":n.second=0;case"seconds":n.millisecond=0}if("weeks"===r)if(t){const e=this.loc.getStartOfWeek(),{weekday:t}=this;t<e&&(n.weekNumber=this.weekNumber-1),n.weekday=e}else n.weekday=1;if("quarters"===r){const e=Math.ceil(this.month/3);n.month=3*(e-1)+1}return this.set(n)}endOf(e,t){return this.isValid?this.plus({[e]:1}).startOf(e,t).minus(1):this}toFormat(e,t={}){return this.isValid?Rt.create(this.loc.redefaultToEN(t)).formatDateTimeFromString(this,e):Hn}toLocaleString(e=E,t={}){return this.isValid?Rt.create(this.loc.clone(t),e).formatDateTime(this):Hn}toLocaleParts(e={}){return this.isValid?Rt.create(this.loc.clone(e),e).formatDateTimeParts(this):[]}toISO({format:e="extended",suppressSeconds:t=!1,suppressMilliseconds:n=!1,includeOffset:r=!0,extendedZone:i=!1}={}){if(!this.isValid)return null;const o="extended"===e;let a=cr(this,o);return a+="T",a+=ur(this,o,t,n,r,i),a}toISODate({format:e="extended"}={}){return this.isValid?cr(this,"extended"===e):null}toISOWeekDate(){return lr(this,"kkkk-'W'WW-c")}toISOTime({suppressMilliseconds:e=!1,suppressSeconds:t=!1,includeOffset:n=!0,includePrefix:r=!1,extendedZone:i=!1,format:o="extended"}={}){if(!this.isValid)return null;return(r?"T":"")+ur(this,"extended"===o,t,e,n,i)}toRFC2822(){return lr(this,"EEE, dd LLL yyyy HH:mm:ss ZZZ",!1)}toHTTP(){return lr(this.toUTC(),"EEE, dd LLL yyyy HH:mm:ss 'GMT'")}toSQLDate(){return this.isValid?cr(this,!0):null}toSQLTime({includeOffset:e=!0,includeZone:t=!1,includeOffsetSpace:n=!0}={}){let r="HH:mm:ss.SSS";return(t||e)&&(n&&(r+=" "),t?r+="z":e&&(r+="ZZ")),lr(this,r,!0)}toSQL(e={}){return this.isValid?`${this.toSQLDate()} ${this.toSQLTime(e)}`:null}toString(){return this.isValid?this.toISO():Hn}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`DateTime { ts: ${this.toISO()}, zone: ${this.zone.name}, locale: ${this.locale} }`:`DateTime { Invalid, reason: ${this.invalidReason} }`}valueOf(){return this.toMillis()}toMillis(){return this.isValid?this.ts:NaN}toSeconds(){return this.isValid?this.ts/1e3:NaN}toUnixInteger(){return this.isValid?Math.floor(this.ts/1e3):NaN}toJSON(){return this.toISO()}toBSON(){return this.toJSDate()}toObject(e={}){if(!this.isValid)return{};const t=l({},this.c);return e.includeConfig&&(t.outputCalendar=this.outputCalendar,t.numberingSystem=this.loc.numberingSystem,t.locale=this.loc.locale),t}toJSDate(){return new Date(this.isValid?this.ts:NaN)}diff(e,t="milliseconds",n={}){if(!this.isValid||!e.isValid)return Rn.invalid("created by diffing an invalid DateTime");const r=l({locale:this.locale,numberingSystem:this.numberingSystem},n),i=(s=t,Array.isArray(s)?s:[s]).map(Rn.normalizeUnit),o=e.valueOf()>this.valueOf(),a=Nn(o?this:e,o?e:this,i,r);var s;return o?a.negate():a}diffNow(e="milliseconds",t={}){return this.diff(Kr.now(),e,t)}until(e){return this.isValid?Cn.fromDateTimes(this,e):this}hasSame(e,t,n){if(!this.isValid)return!1;const r=e.valueOf(),i=this.setZone(e.zone,{keepLocalTime:!0});return i.startOf(t,n)<=r&&r<=i.endOf(t,n)}equals(e){return this.isValid&&e.isValid&&this.valueOf()===e.valueOf()&&this.zone.equals(e.zone)&&this.loc.equals(e.loc)}toRelative(e={}){if(!this.isValid)return null;const t=e.base||Kr.fromObject({},{zone:this.zone}),n=e.padding?this<t?-e.padding:e.padding:0;let r=["years","months","days","hours","minutes","seconds"],i=e.unit;return Array.isArray(e.unit)&&(r=e.unit,i=void 0),vr(t,this.plus(n),l(l({},e),{},{numeric:"always",units:r,unit:i}))}toRelativeCalendar(e={}){return this.isValid?vr(e.base||Kr.fromObject({},{zone:this.zone}),this,l(l({},e),{},{numeric:"auto",units:["years","months","days"],calendary:!0})):null}static min(...e){if(!e.every(Kr.isDateTime))throw new y("min requires all arguments be DateTimes");return We(e,e=>e.valueOf(),Math.min)}static max(...e){if(!e.every(Kr.isDateTime))throw new y("max requires all arguments be DateTimes");return We(e,e=>e.valueOf(),Math.max)}static fromFormatExplain(e,t,n={}){const{locale:r=null,numberingSystem:i=null}=n;return $n(ce.fromOpts({locale:r,numberingSystem:i,defaultToEN:!0}),e,t)}static fromStringExplain(e,t,n={}){return Kr.fromFormatExplain(e,t,n)}static buildFormatParser(e,t={}){const{locale:n=null,numberingSystem:r=null}=t,i=ce.fromOpts({locale:n,numberingSystem:r,defaultToEN:!0});return new Wn(i,e)}static fromFormatParser(e,t,n={}){if(qe(e)||qe(t))throw new y("fromFormatParser requires an input string and a format parser");const{locale:r=null,numberingSystem:i=null}=n,o=ce.fromOpts({locale:r,numberingSystem:i,defaultToEN:!0});if(!o.equals(t.locale))throw new y(`fromFormatParser called with a locale of ${o}, but the format parser was created for ${t.locale}`);const{result:a,zone:s,specificOffset:l,invalidReason:c}=t.explainFromTokens(e);return c?Kr.invalid(c):sr(a,s,n,`format ${t.format}`,e,l)}static get DATE_SHORT(){return E}static get DATE_MED(){return w}static get DATE_MED_WITH_WEEKDAY(){return S}static get DATE_FULL(){return K}static get DATE_HUGE(){return I}static get TIME_SIMPLE(){return k}static get TIME_WITH_SECONDS(){return j}static get TIME_WITH_SHORT_OFFSET(){return x}static get TIME_WITH_LONG_OFFSET(){return A}static get TIME_24_SIMPLE(){return O}static get TIME_24_WITH_SECONDS(){return T}static get TIME_24_WITH_SHORT_OFFSET(){return R}static get TIME_24_WITH_LONG_OFFSET(){return D}static get DATETIME_SHORT(){return C}static get DATETIME_SHORT_WITH_SECONDS(){return P}static get DATETIME_MED(){return M}static get DATETIME_MED_WITH_SECONDS(){return N}static get DATETIME_MED_WITH_WEEKDAY(){return _}static get DATETIME_FULL(){return L}static get DATETIME_FULL_WITH_SECONDS(){return J}static get DATETIME_HUGE(){return F}static get DATETIME_HUGE_WITH_SECONDS(){return V}}function Ir(e){if(Kr.isDateTime(e))return e;if(e&&e.valueOf&&Be(e.valueOf()))return Kr.fromJSDate(e);if(e&&"object"==typeof e)return Kr.fromObject(e);throw new y(`Unknown datetime argument: ${e}, of type ${typeof e}`)}t.DateTime=Kr,t.Duration=Rn,t.FixedOffsetZone=de,t.IANAZone=W,t.Info=Pn,t.Interval=Cn,t.InvalidZone=pe,t.Settings=xe,t.SystemZone=B,t.VERSION="3.6.1",t.Zone=G},(e,t,n)=>{var r=n(302);e.exports=function(e,t){if(null==e)return{};var n,i,o=r(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o},e.exports.__esModule=!0,e.exports.default=e.exports},e=>{e.exports=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i},e.exports.__esModule=!0,e.exports.default=e.exports},(e,t,n)=>{"use strict";var r=n(304);e.exports=function(e,t,n){var i=r(e);if(1===i.length){var o=i[0];if(1===(u=o.step)&&o.start===t&&o.end===n)return"*";if(1!==u&&o.start===t&&o.end===n-u+1)return"*/"+u}for(var a=[],s=0,l=i.length;s<l;++s){var c=i[s];if(1!==c.count){var u=c.step;if(1!==c.step){var d=0==c.start?c.count-1:c.count;c.step*d>c.end?a=a.concat(Array.from({length:c.end-c.start+1}).map(function(e,t){var n=c.start+t;return(n-c.start)%c.step===0?n:null}).filter(function(e){return null!=e})):c.end===n-c.step+1?a.push(c.start+"/"+c.step):a.push(c.start+"-"+c.end+"/"+c.step)}else a.push(c.start+"-"+c.end)}else a.push(c.start)}return a.join(",")}},e=>{"use strict";function t(e){return{start:e,count:1}}function n(e,t){e.end=t,e.step=t-e.start,e.count=2}function r(e,n,r){n&&(2===n.count?(e.push(t(n.start)),e.push(t(n.end))):e.push(n)),r&&e.push(r)}e.exports=function(e){for(var i=[],o=void 0,a=0;a<e.length;a++){var s=e[a];"number"!=typeof s?(r(i,o,t(s)),o=void 0):o?1===o.count?n(o,s):o.step===s-o.end?(o.count++,o.end=s):2===o.count?(i.push(t(o.start)),n(o=t(o.end),s)):(r(i,o),o=t(s)):o=t(s)}return r(i,o),i}},()=>{},(e,t,n)=>{"use strict";n.r(t),n.d(t,{QueueBase:()=>l});var r=n(18),i=n(22),o=n(240),a=n(237),s=n(239);class l extends r.EventEmitter{constructor(e,t={connection:{}},n=o.RedisConnection,r=!1){if(super(),this.name=e,this.opts=t,this.closed=!1,this.hasBlockingConnection=!1,this.hasBlockingConnection=r,this.opts=Object.assign({prefix:"bull"},t),!e)throw new Error("Queue name must be provided");if(e.includes(":"))throw new Error("Queue name cannot contain :");this.connection=new n(t.connection,{shared:(0,i.isRedisInstance)(t.connection),blocking:r,skipVersionCheck:t.skipVersionCheck,skipWaitingForReady:t.skipWaitingForReady}),this.connection.on("error",e=>this.emit("error",e)),this.connection.on("close",()=>{this.closing||this.emit("ioredis:close")});const a=new s.QueueKeys(t.prefix);this.qualifiedName=a.getQueueQualifiedName(e),this.keys=a.getKeys(e),this.toKey=t=>a.toKey(e,t),this.createScripts()}get client(){return this.connection.client}createScripts(){this.scripts=(0,i.createScripts)(this)}get redisVersion(){return this.connection.redisVersion}get Job(){return a.Job}emit(e,...t){try{return super.emit(e,...t)}catch(e){try{return super.emit("error",e)}catch(e){return console.error(e),!1}}}waitUntilReady(){return this.client}base64Name(){return Buffer.from(this.name).toString("base64")}clientName(e=""){const t=this.base64Name();return`${this.opts.prefix}:${t}${e}`}async close(){this.closing||(this.closing=this.connection.close()),await this.closing,this.closed=!0}disconnect(){return this.connection.disconnect()}async checkConnectionError(e,t=i.DELAY_TIME_5){try{return await e()}catch(e){if((0,i.isNotConnectionError)(e)&&this.emit("error",e),this.closing||!t)return;await(0,i.delay)(t)}}trace(e,t,n,r,o){return(0,i.trace)(this.opts.telemetry,e,this.name,t,n,r,o)}}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{QueueEvents:()=>a});var r=n(238),i=n(22),o=n(306);class a extends o.QueueBase{constructor(e,t={connection:{}},n){var{connection:o,autorun:a=!0}=t,s=(0,r.__rest)(t,["connection","autorun"]);super(e,Object.assign(Object.assign({},s),{connection:(0,i.isRedisInstance)(o)?o.duplicate():o}),n,!0),this.running=!1,this.opts=Object.assign({blockingTimeout:1e4},this.opts),a&&this.run().catch(e=>this.emit("error",e))}emit(e,...t){return super.emit(e,...t)}off(e,t){return super.off(e,t),this}on(e,t){return super.on(e,t),this}once(e,t){return super.once(e,t),this}async run(){if(this.running)throw new Error("Queue Events is already running.");try{this.running=!0;const e=await this.client;try{await e.client("SETNAME",this.clientName(i.QUEUE_EVENT_SUFFIX))}catch(e){if(!i.clientCommandMessageReg.test(e.message))throw e}await this.consumeEvents(e)}catch(e){throw this.running=!1,e}}async consumeEvents(e){const t=this.opts,n=this.keys.events;let o=t.lastEventId||"$";for(;!this.closing;){const a=await this.checkConnectionError(()=>e.xread("BLOCK",t.blockingTimeout,"STREAMS",n,o));if(a){const e=a[0][1];for(let t=0;t<e.length;t++){o=e[t][0];const n=(0,i.array2obj)(e[t][1]);switch(n.event){case"progress":n.data=JSON.parse(n.data);break;case"completed":n.returnvalue=JSON.parse(n.returnvalue)}const{event:a}=n,s=(0,r.__rest)(n,["event"]);"drained"===a?this.emit(a,o):(this.emit(a,s,o),s.jobId&&this.emit(`${a}:${s.jobId}`,s,o))}}}}close(){return this.closing||(this.closing=this.disconnect()),this.closing}}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{QueueEventsProducer:()=>o});var r=n(238),i=n(306);class o extends i.QueueBase{constructor(e,t={connection:{}},n){super(e,Object.assign({blockingConnection:!1},t),n),this.opts=t}async publishEvent(e,t=1e3){const n=await this.client,i=this.keys.events,{eventName:o}=e,a=(0,r.__rest)(e,["eventName"]),s=["MAXLEN","~",t,"*","event",o];for(const[e,t]of Object.entries(a))s.push(e,t);await n.xadd(i,...s)}async close(){this.closing||(this.closing=this.connection.close()),await this.closing}}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{QueueGetters:()=>o});var r=n(306),i=n(22);class o extends r.QueueBase{getJob(e){return this.Job.fromId(this,e)}commandByType(e,t,n){return e.map(e=>{e="waiting"===e?"wait":e;const r=this.toKey(e);switch(e){case"completed":case"failed":case"delayed":case"prioritized":case"repeat":case"waiting-children":return n(r,t?"zcard":"zrange");case"active":case"wait":case"paused":return n(r,t?"llen":"lrange")}})}sanitizeJobTypes(e){const t="string"==typeof e?[e]:e;if(Array.isArray(t)&&t.length>0){const e=[...t];return-1!==e.indexOf("waiting")&&e.push("paused"),[...new Set(e)]}return["active","completed","delayed","failed","paused","prioritized","waiting","waiting-children"]}async count(){return await this.getJobCountByTypes("waiting","paused","delayed","prioritized","waiting-children")}async getRateLimitTtl(e){return this.scripts.getRateLimitTtl(e)}async getDebounceJobId(e){return(await this.client).get(`${this.keys.de}:${e}`)}async getDeduplicationJobId(e){return(await this.client).get(`${this.keys.de}:${e}`)}async getJobCountByTypes(...e){const t=await this.getJobCounts(...e);return Object.values(t).reduce((e,t)=>e+t,0)}async getJobCounts(...e){const t=this.sanitizeJobTypes(e),n=await this.scripts.getCounts(t),r={};return n.forEach((e,n)=>{r[t[n]]=e||0}),r}getJobState(e){return this.scripts.getState(e)}getCompletedCount(){return this.getJobCountByTypes("completed")}getFailedCount(){return this.getJobCountByTypes("failed")}getDelayedCount(){return this.getJobCountByTypes("delayed")}getActiveCount(){return this.getJobCountByTypes("active")}getPrioritizedCount(){return this.getJobCountByTypes("prioritized")}async getCountsPerPriority(e){const t=[...new Set(e)],n=await this.scripts.getCountsPerPriority(t),r={};return n.forEach((e,n)=>{r[`${t[n]}`]=e||0}),r}getWaitingCount(){return this.getJobCountByTypes("waiting")}getWaitingChildrenCount(){return this.getJobCountByTypes("waiting-children")}getWaiting(e=0,t=-1){return this.getJobs(["waiting"],e,t,!0)}getWaitingChildren(e=0,t=-1){return this.getJobs(["waiting-children"],e,t,!0)}getActive(e=0,t=-1){return this.getJobs(["active"],e,t,!0)}getDelayed(e=0,t=-1){return this.getJobs(["delayed"],e,t,!0)}getPrioritized(e=0,t=-1){return this.getJobs(["prioritized"],e,t,!0)}getCompleted(e=0,t=-1){return this.getJobs(["completed"],e,t,!1)}getFailed(e=0,t=-1){return this.getJobs(["failed"],e,t,!1)}async getDependencies(e,t,n,r){const i=this.toKey("processed"==t?`${e}:processed`:`${e}:dependencies`),{items:o,total:a,jobs:s}=await this.scripts.paginate(i,{start:n,end:r,fetchJobs:!0});return{items:o,jobs:s,total:a}}async getRanges(e,t=0,n=1,r=!1){const i=[];this.commandByType(e,!1,(e,t)=>{switch(t){case"lrange":i.push("lrange");break;case"zrange":i.push("zrange")}});const o=await this.scripts.getRanges(e,t,n,r);let a=[];return o.forEach((e,t)=>{const n=e||[];a=r&&"lrange"===i[t]?a.concat(n.reverse()):a.concat(n)}),[...new Set(a)]}async getJobs(e,t=0,n=-1,r=!1){const i=this.sanitizeJobTypes(e),o=await this.getRanges(i,t,n,r);return Promise.all(o.map(e=>this.Job.fromId(this,e)))}async getJobLogs(e,t=0,n=-1,r=!0){const i=(await this.client).multi(),o=this.toKey(e+":logs");r?i.lrange(o,t,n):i.lrange(o,-(n+1),-(t+1)),i.llen(o);const a=await i.exec();return r||a[0][1].reverse(),{logs:a[0][1],count:a[1][1]}}async baseGetClients(e){const t=await this.client;try{const n=await t.client("LIST");return this.parseClientList(n,e)}catch(e){if(!i.clientCommandMessageReg.test(e.message))throw e;return[{name:"GCP does not support client list"}]}}getWorkers(){const e=`${this.clientName()}`,t=`${this.clientName()}:w:`;return this.baseGetClients(n=>n&&(n===e||n.startsWith(t)))}async getWorkersCount(){return(await this.getWorkers()).length}async getQueueEvents(){const e=`${this.clientName()}${i.QUEUE_EVENT_SUFFIX}`;return this.baseGetClients(t=>t===e)}async getMetrics(e,t=0,n=-1){const r=await this.client,i=this.toKey(`metrics:${e}`),o=`${i}:data`,a=r.multi();a.hmget(i,"count","prevTS","prevCount"),a.lrange(o,t,n),a.llen(o);const[s,l,c]=await a.exec(),[u,[d,p,h]]=s,[f,y]=l,[m,b]=c;if(u||f)throw u||f||m;return{meta:{count:parseInt(d||"0",10),prevTS:parseInt(p||"0",10),prevCount:parseInt(h||"0",10)},data:y,count:b}}parseClientList(e,t){const n=e.split(/\r?\n/),r=[];return n.forEach(e=>{const n={};e.split(" ").forEach(function(e){const t=e.indexOf("="),r=e.substring(0,t),i=e.substring(t+1);n[r]=i});const i=n.name;t(i)&&(n.name=this.name,n.rawname=i,r.push(n))}),r}async exportPrometheusMetrics(e){const t=await this.getJobCounts(),n=[];n.push("# HELP bullmq_job_count Number of jobs in the queue by state"),n.push("# TYPE bullmq_job_count gauge");const r=e?Object.keys(e).reduce((t,n)=>`${t}, ${n}="${e[n]}"`,""):"";for(const[e,i]of Object.entries(t))n.push(`bullmq_job_count{queue="${this.name}", state="${e}"${r}} ${i}`);return n.join("\n")}}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{Queue:()=>u});var r=n(290),i=n(237),o=n(309),a=n(311),s=n(12),l=n(296),c=n(183);class u extends o.QueueGetters{constructor(e,t,n){var i;super(e,Object.assign({},t),n),this.token=(0,r.default)(),this.libName="bullmq",this.jobsOpts=null!==(i=null==t?void 0:t.defaultJobOptions)&&void 0!==i?i:{},this.waitUntilReady().then(e=>{if(!this.closing&&!(null==t?void 0:t.skipMetasUpdate))return e.hmset(this.keys.meta,this.metaValues)}).catch(e=>{})}emit(e,...t){return super.emit(e,...t)}off(e,t){return super.off(e,t),this}on(e,t){return super.on(e,t),this}once(e,t){return super.once(e,t),this}get defaultJobOptions(){return Object.assign({},this.jobsOpts)}get metaValues(){var e,t,n,r;return{"opts.maxLenEvents":null!==(r=null===(n=null===(t=null===(e=this.opts)||void 0===e?void 0:e.streams)||void 0===t?void 0:t.events)||void 0===n?void 0:n.maxLen)&&void 0!==r?r:1e4,version:`${this.libName}:${c.version}`}}async getVersion(){const e=await this.client;return await e.hget(this.keys.meta,"version")}get repeat(){return new Promise(async e=>{this._repeat||(this._repeat=new a.Repeat(this.name,Object.assign(Object.assign({},this.opts),{connection:await this.client})),this._repeat.on("error",e=>this.emit.bind(this,e))),e(this._repeat)})}get jobScheduler(){return new Promise(async e=>{this._jobScheduler||(this._jobScheduler=new l.JobScheduler(this.name,Object.assign(Object.assign({},this.opts),{connection:await this.client})),this._jobScheduler.on("error",e=>this.emit.bind(this,e))),e(this._jobScheduler)})}async getGlobalConcurrency(){const e=await this.client,t=await e.hget(this.keys.meta,"concurrency");return t?Number(t):null}async setGlobalConcurrency(e){return(await this.client).hset(this.keys.meta,"concurrency",e)}async removeGlobalConcurrency(){return(await this.client).hdel(this.keys.meta,"concurrency")}async add(e,t,n){return this.trace(s.SpanKind.PRODUCER,"add",`${this.name}.${e}`,async(r,i)=>{var o;if(i&&!(null===(o=null==n?void 0:n.telemetry)||void 0===o?void 0:o.omitContext)){const e={metadata:i};n=Object.assign(Object.assign({},n),{telemetry:e})}const a=await this.addJob(e,t,n);return null==r||r.setAttributes({[s.TelemetryAttributes.JobName]:e,[s.TelemetryAttributes.JobId]:a.id}),a})}async addJob(e,t,n){if(n&&n.repeat){if(n.repeat.endDate&&+new Date(n.repeat.endDate)<Date.now())throw new Error("End date must be greater than current timestamp");return(await this.repeat).updateRepeatableJob(e,t,Object.assign(Object.assign({},this.jobsOpts),n),{override:!0})}{const r=null==n?void 0:n.jobId;if("0"==r||(null==r?void 0:r.startsWith("0:")))throw new Error("JobId cannot be '0' or start with 0:");const i=await this.Job.create(this,e,t,Object.assign(Object.assign(Object.assign({},this.jobsOpts),n),{jobId:r}));return this.emit("waiting",i),i}}async addBulk(e){return this.trace(s.SpanKind.PRODUCER,"addBulk",this.name,async(t,n)=>(t&&t.setAttributes({[s.TelemetryAttributes.BulkNames]:e.map(e=>e.name),[s.TelemetryAttributes.BulkCount]:e.length}),await this.Job.createBulk(this,e.map(e=>{var t,r,i,o,a,s;let l=null===(t=e.opts)||void 0===t?void 0:t.telemetry;if(n){const t=null===(i=null===(r=e.opts)||void 0===r?void 0:r.telemetry)||void 0===i?void 0:i.omitContext,s=(null===(a=null===(o=e.opts)||void 0===o?void 0:o.telemetry)||void 0===a?void 0:a.metadata)||!t&&n;(s||t)&&(l={metadata:s,omitContext:t})}return{name:e.name,data:e.data,opts:Object.assign(Object.assign(Object.assign({},this.jobsOpts),e.opts),{jobId:null===(s=e.opts)||void 0===s?void 0:s.jobId,telemetry:l})}}))))}async upsertJobScheduler(e,t,n){var r,i;if(t.endDate&&+new Date(t.endDate)<Date.now())throw new Error("End date must be greater than current timestamp");return(await this.jobScheduler).upsertJobScheduler(e,t,null!==(r=null==n?void 0:n.name)&&void 0!==r?r:e,null!==(i=null==n?void 0:n.data)&&void 0!==i?i:{},Object.assign(Object.assign({},this.jobsOpts),null==n?void 0:n.opts),{override:!0})}async pause(){await this.trace(s.SpanKind.INTERNAL,"pause",this.name,async()=>{await this.scripts.pause(!0),this.emit("paused")})}async close(){await this.trace(s.SpanKind.INTERNAL,"close",this.name,async()=>{this.closing||this._repeat&&await this._repeat.close(),await super.close()})}async rateLimit(e){await this.trace(s.SpanKind.INTERNAL,"rateLimit",this.name,async t=>{null==t||t.setAttributes({[s.TelemetryAttributes.QueueRateLimit]:e}),await this.client.then(t=>t.set(this.keys.limiter,Number.MAX_SAFE_INTEGER,"PX",e))})}async resume(){await this.trace(s.SpanKind.INTERNAL,"resume",this.name,async()=>{await this.scripts.pause(!1),this.emit("resumed")})}async isPaused(){const e=await this.client;return 1===await e.hexists(this.keys.meta,"paused")}isMaxed(){return this.scripts.isMaxed()}async getRepeatableJobs(e,t,n){return(await this.repeat).getRepeatableJobs(e,t,n)}async getJobScheduler(e){return(await this.jobScheduler).getScheduler(e)}async getJobSchedulers(e,t,n){return(await this.jobScheduler).getJobSchedulers(e,t,n)}async getJobSchedulersCount(){return(await this.jobScheduler).getSchedulersCount()}async removeRepeatable(e,t,n){return this.trace(s.SpanKind.INTERNAL,"removeRepeatable",`${this.name}.${e}`,async r=>{null==r||r.setAttributes({[s.TelemetryAttributes.JobName]:e,[s.TelemetryAttributes.JobId]:n});const i=await this.repeat;return!await i.removeRepeatable(e,t,n)})}async removeJobScheduler(e){const t=await this.jobScheduler;return!await t.removeJobScheduler(e)}async removeDebounceKey(e){return this.trace(s.SpanKind.INTERNAL,"removeDebounceKey",`${this.name}`,async t=>{null==t||t.setAttributes({[s.TelemetryAttributes.JobKey]:e});const n=await this.client;return await n.del(`${this.keys.de}:${e}`)})}async removeDeduplicationKey(e){return this.trace(s.SpanKind.INTERNAL,"removeDeduplicationKey",`${this.name}`,async t=>{null==t||t.setAttributes({[s.TelemetryAttributes.DeduplicationKey]:e});return(await this.client).del(`${this.keys.de}:${e}`)})}async removeRateLimitKey(){return(await this.client).del(this.keys.limiter)}async removeRepeatableByKey(e){return this.trace(s.SpanKind.INTERNAL,"removeRepeatableByKey",`${this.name}`,async t=>{null==t||t.setAttributes({[s.TelemetryAttributes.JobKey]:e});const n=await this.repeat;return!await n.removeRepeatableByKey(e)})}async remove(e,{removeChildren:t=!0}={}){return this.trace(s.SpanKind.INTERNAL,"remove",this.name,async n=>(null==n||n.setAttributes({[s.TelemetryAttributes.JobId]:e,[s.TelemetryAttributes.JobOptions]:JSON.stringify({removeChildren:t})}),await this.scripts.remove(e,t)))}async updateJobProgress(e,t){await this.trace(s.SpanKind.INTERNAL,"updateJobProgress",this.name,async n=>{null==n||n.setAttributes({[s.TelemetryAttributes.JobId]:e,[s.TelemetryAttributes.JobProgress]:JSON.stringify(t)}),await this.scripts.updateProgress(e,t)})}async addJobLog(e,t,n){return i.Job.addJobLog(this,e,t,n)}async drain(e=!1){await this.trace(s.SpanKind.INTERNAL,"drain",this.name,async t=>{null==t||t.setAttributes({[s.TelemetryAttributes.QueueDrainDelay]:e}),await this.scripts.drain(e)})}async clean(e,t,n="completed"){return this.trace(s.SpanKind.INTERNAL,"clean",this.name,async r=>{const i=t||1/0,o=Math.min(1e4,i),a=Date.now()-e;let l=0;const c=[],u="waiting"===n?"wait":n;for(;l<i;){const e=await this.scripts.cleanJobsInSet(u,a,o);if(this.emit("cleaned",e,u),l+=e.length,c.push(...e),e.length<o)break}return null==r||r.setAttributes({[s.TelemetryAttributes.QueueGrace]:e,[s.TelemetryAttributes.JobType]:n,[s.TelemetryAttributes.QueueCleanLimit]:i,[s.TelemetryAttributes.JobIds]:c}),c})}async obliterate(e){await this.trace(s.SpanKind.INTERNAL,"obliterate",this.name,async()=>{await this.pause();let t=0;do{t=await this.scripts.obliterate(Object.assign({force:!1,count:1e3},e))}while(t)})}async retryJobs(e={}){await this.trace(s.SpanKind.PRODUCER,"retryJobs",this.name,async t=>{null==t||t.setAttributes({[s.TelemetryAttributes.QueueOptions]:JSON.stringify(e)});let n=0;do{n=await this.scripts.retryJobs(e.state,e.count,e.timestamp)}while(n)})}async promoteJobs(e={}){await this.trace(s.SpanKind.INTERNAL,"promoteJobs",this.name,async t=>{null==t||t.setAttributes({[s.TelemetryAttributes.QueueOptions]:JSON.stringify(e)});let n=0;do{n=await this.scripts.promoteJobs(e.count)}while(n)})}async trimEvents(e){return this.trace(s.SpanKind.INTERNAL,"trimEvents",this.name,async t=>{null==t||t.setAttributes({[s.TelemetryAttributes.QueueEventMaxLength]:e});const n=await this.client;return await n.xtrim(this.keys.events,"MAXLEN","~",e)})}async removeDeprecatedPriorityKey(){return(await this.client).del(this.toKey("priority"))}}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{Repeat:()=>s,getNextMillis:()=>c});var r=n(238),i=n(297),o=n(312),a=n(306);class s extends a.QueueBase{constructor(e,t,n){super(e,t,n),this.repeatStrategy=t.settings&&t.settings.repeatStrategy||c,this.repeatKeyHashAlgorithm=t.settings&&t.settings.repeatKeyHashAlgorithm||"md5"}async updateRepeatableJob(e,t,n,{override:i}){var o,a;const s=Object.assign({},n.repeat);null!==(o=s.pattern)&&void 0!==o||(s.pattern=s.cron),delete s.cron;const c=s.count?s.count+1:1;if(void 0!==s.limit&&c>s.limit)return;let u=Date.now();const{endDate:d}=s;if(d&&u>new Date(d).getTime())return;const p=n.prevMillis||0;u=p<u?u:p;const h=await this.repeatStrategy(u,s,e),{every:f,pattern:y}=s,m=Boolean((f||y)&&s.immediately),b=m&&f?u-h:void 0;if(h){!p&&n.jobId&&(s.jobId=n.jobId);const o=l(e,s),u=null!==(a=n.repeat.key)&&void 0!==a?a:this.hash(o);let g;if(i)g=await this.scripts.addRepeatableJob(u,h,{name:e,endDate:d?new Date(d).getTime():void 0,tz:s.tz,pattern:y,every:f},o);else{const e=await this.client;g=await this.scripts.updateRepeatableJobMillis(e,u,h,o)}const{immediately:v}=s,E=(0,r.__rest)(s,["immediately"]);return this.createNextJob(e,h,g,Object.assign(Object.assign({},n),{repeat:Object.assign({offset:b},E)}),t,c,m)}}async createNextJob(e,t,n,r,i,o,a){const s=this.getRepeatJobKey(e,t,n,i),l=Date.now(),c=t+(r.repeat.offset?r.repeat.offset:0)-l,u=Object.assign(Object.assign({},r),{jobId:s,delay:c<0||a?0:c,timestamp:l,prevMillis:t,repeatJobKey:n});return u.repeat=Object.assign(Object.assign({},r.repeat),{count:o}),this.Job.create(this,e,i,u)}getRepeatJobKey(e,t,n,r){return n.split(":").length>2?this.getRepeatJobId({name:e,nextMillis:t,namespace:this.hash(n),jobId:null==r?void 0:r.id}):this.getRepeatDelayedJobId({customKey:n,nextMillis:t})}async removeRepeatable(e,t,n){var r;const i=l(e,Object.assign(Object.assign({},t),{jobId:n})),o=null!==(r=t.key)&&void 0!==r?r:this.hash(i),a=this.getRepeatJobId({name:e,nextMillis:"",namespace:this.hash(i),jobId:null!=n?n:t.jobId,key:t.key});return this.scripts.removeRepeatable(a,i,o)}async removeRepeatableByKey(e){const t=this.keyToData(e),n=this.getRepeatJobId({name:t.name,nextMillis:"",namespace:this.hash(e),jobId:t.id});return this.scripts.removeRepeatable(n,"",e)}async getRepeatableData(e,t,n){const r=await e.hgetall(this.toKey("repeat:"+t));return r?{key:t,name:r.name,endDate:parseInt(r.endDate)||null,tz:r.tz||null,pattern:r.pattern||null,every:r.every||null,next:n}:this.keyToData(t,n)}keyToData(e,t){const n=e.split(":"),r=n.slice(4).join(":")||null;return{key:e,name:n[0],id:n[1]||null,endDate:parseInt(n[2])||null,tz:n[3]||null,pattern:r,next:t}}async getRepeatableJobs(e=0,t=-1,n=!1){const r=await this.client,i=this.keys.repeat,o=n?await r.zrange(i,e,t,"WITHSCORES"):await r.zrevrange(i,e,t,"WITHSCORES"),a=[];for(let e=0;e<o.length;e+=2)a.push(this.getRepeatableData(r,o[e],parseInt(o[e+1])));return Promise.all(a)}async getRepeatableCount(){return(await this.client).zcard(this.toKey("repeat"))}hash(e){return(0,o.createHash)(this.repeatKeyHashAlgorithm).update(e).digest("hex")}getRepeatDelayedJobId({nextMillis:e,customKey:t}){return`repeat:${t}:${e}`}getRepeatJobId({name:e,nextMillis:t,namespace:n,jobId:r,key:i}){return`repeat:${null!=i?i:this.hash(`${e}${r||""}${n}`)}:${t}`}}function l(e,t){const n=t.endDate?new Date(t.endDate).getTime():"",r=t.tz||"",i=t.pattern,o=i||String(t.every)||"";return`${e}:${t.jobId?t.jobId:""}:${n}:${r}:${o}`}const c=(e,t)=>{const n=t.pattern;if(n&&t.every)throw new Error("Both .pattern and .every options are defined for this repeatable job");if(t.every)return Math.floor(e/t.every)*t.every+(t.immediately?0:t.every);const r=t.startDate&&new Date(t.startDate)>new Date(e)?new Date(t.startDate):new Date(e),o=(0,i.parseExpression)(n,Object.assign(Object.assign({},t),{currentDate:r}));try{return t.immediately?(new Date).getTime():o.next().getTime()}catch(e){}}},()=>{},(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>i});var r=n(12);const i=(e,t)=>async function(n,i){let o,a,s;try{const l=new Promise((l,c)=>{(async()=>{try{s=(e,t)=>{c(new Error("Unexpected exit code: "+e+" signal: "+t))},o=await t.retain(e),o.on("exit",s),a=async e=>{var t,i,a;try{switch(e.cmd){case r.ParentCommand.Completed:l(e.value);break;case r.ParentCommand.Failed:case r.ParentCommand.Error:{const t=new Error;Object.assign(t,e.value),c(t);break}case r.ParentCommand.Progress:await n.updateProgress(e.value);break;case r.ParentCommand.Log:await n.log(e.value);break;case r.ParentCommand.MoveToDelayed:await n.moveToDelayed(null===(t=e.value)||void 0===t?void 0:t.timestamp,null===(i=e.value)||void 0===i?void 0:i.token);break;case r.ParentCommand.MoveToWait:await n.moveToWait(null===(a=e.value)||void 0===a?void 0:a.token);break;case r.ParentCommand.Update:await n.updateData(e.value);break;case r.ParentCommand.GetChildrenValues:{const t=await n.getChildrenValues();o.send({requestId:e.requestId,cmd:r.ChildCommand.GetChildrenValuesResponse,value:t})}break;case r.ParentCommand.GetIgnoredChildrenFailures:{const t=await n.getIgnoredChildrenFailures();o.send({requestId:e.requestId,cmd:r.ChildCommand.GetIgnoredChildrenFailuresResponse,value:t})}}}catch(e){c(e)}},o.on("message",a),o.send({cmd:r.ChildCommand.Start,job:n.asJSONSandbox(),token:i})}catch(e){c(e)}})()});return await l,l}finally{o&&(o.off("message",a),o.off("exit",s),null===o.exitCode&&null===o.signalCode&&t.release(o))}}},(e,t,n)=>{"use strict";n.r(t),n.d(t,{Worker:()=>g});var r=n(315),i=n(110),o=n(20),a=n(290),s=n(316),l=n(22),c=n(306),u=n(311),d=n(19),p=n(240),h=n(313),f=n(7),y=n(184),m=n(12),b=n(296);e=n.hmd(e);class g extends c.QueueBase{static RateLimitError(){return new y.RateLimitError}constructor(t,n,s,c){if(super(t,Object.assign(Object.assign({drainDelay:5,concurrency:1,lockDuration:3e4,maxStalledCount:1,stalledInterval:3e4,autorun:!0,runRetryDelay:15e3},s),{blockingConnection:!0}),c),this.abortDelayController=null,this.blockUntil=0,this.drained=!1,this.extendLocksTimer=null,this.limitUntil=0,this.waiting=null,this.running=!1,this.mainLoopRunning=null,!s||!s.connection)throw new Error("Worker requires a connection");if("number"!=typeof this.opts.maxStalledCount||this.opts.maxStalledCount<0)throw new Error("maxStalledCount must be greater or equal than 0");if("number"!=typeof this.opts.stalledInterval||this.opts.stalledInterval<=0)throw new Error("stalledInterval must be greater than 0");if("number"!=typeof this.opts.drainDelay||this.opts.drainDelay<=0)throw new Error("drainDelay must be greater than 0");if(this.concurrency=this.opts.concurrency,this.opts.lockRenewTime=this.opts.lockRenewTime||this.opts.lockDuration/2,this.id=(0,a.default)(),n){if("function"==typeof n)this.processFn=n;else{if(n instanceof i.URL){if(!r.existsSync(n))throw new Error(`URL ${n} does not exist in the local file system`);n=n.href}else{const e=n+([".js",".ts",".flow",".cjs"].includes(o.extname(n))?"":".js");if(!r.existsSync(e))throw new Error(`File ${e} does not exist`)}const t=o.dirname(e.filename||"/index.js"),a=o.join(t,"main-worker.js"),s=o.join(t,"main.js");let l=this.opts.useWorkerThreads?a:s;try{r.statSync(l)}catch(e){const t=this.opts.useWorkerThreads?"main-worker.js":"main.js";l=o.join(process.cwd(),`dist/cjs/classes/${t}`),r.statSync(l)}this.childPool=new d.ChildPool({mainFile:l,useWorkerThreads:this.opts.useWorkerThreads,workerForkOptions:this.opts.workerForkOptions,workerThreadsOptions:this.opts.workerThreadsOptions}),this.processFn=(0,h.default)(n,this.childPool).bind(this)}this.opts.autorun&&this.run().catch(e=>this.emit("error",e))}const u=this.clientName()+(this.opts.name?`:w:${this.opts.name}`:"");this.blockingConnection=new p.RedisConnection((0,l.isRedisInstance)(s.connection)?s.connection.duplicate({connectionName:u}):Object.assign(Object.assign({},s.connection),{connectionName:u}),{shared:!1,blocking:!0,skipVersionCheck:s.skipVersionCheck}),this.blockingConnection.on("error",e=>this.emit("error",e)),this.blockingConnection.on("ready",()=>setTimeout(()=>this.emit("ready"),0))}emit(e,...t){return super.emit(e,...t)}off(e,t){return super.off(e,t),this}on(e,t){return super.on(e,t),this}once(e,t){return super.once(e,t),this}callProcessJob(e,t){return this.processFn(e,t)}createJob(e,t){return this.Job.fromJSON(this,e,t)}async waitUntilReady(){return await super.waitUntilReady(),this.blockingConnection.client}set concurrency(e){if("number"!=typeof e||e<1||!isFinite(e))throw new Error("concurrency must be a finite number greater than 0");this._concurrency=e}get concurrency(){return this._concurrency}get repeat(){return new Promise(async e=>{if(!this._repeat){const e=await this.client;this._repeat=new u.Repeat(this.name,Object.assign(Object.assign({},this.opts),{connection:e})),this._repeat.on("error",e=>this.emit.bind(this,e))}e(this._repeat)})}get jobScheduler(){return new Promise(async e=>{if(!this._jobScheduler){const e=await this.client;this._jobScheduler=new b.JobScheduler(this.name,Object.assign(Object.assign({},this.opts),{connection:e})),this._jobScheduler.on("error",e=>this.emit.bind(this,e))}e(this._jobScheduler)})}async run(){if(!this.processFn)throw new Error("No process function is defined.");if(this.running)throw new Error("Worker is already running.");try{if(this.running=!0,this.closing||this.paused)return;await this.startStalledCheckTimer();const e=await this.client,t=await this.blockingConnection.client;this.mainLoopRunning=this.mainLoop(e,t),await this.mainLoopRunning}finally{this.running=!1}}async waitForRateLimit(){var e;const t=this.limitUntil;if(t>Date.now()){null===(e=this.abortDelayController)||void 0===e||e.abort(),this.abortDelayController=new s.AbortController;const n=this.getRateLimitDelay(t-Date.now());await this.delay(n,this.abortDelayController)}}async mainLoop(e,t){const n=new f.AsyncFifoQueue,r=new Set;this.startLockExtenderTimer(r);let i=0;for(;!this.closing&&!this.paused||n.numTotal()>0;){for(;!this.closing&&!this.paused&&!this.waiting&&n.numTotal()<this._concurrency&&!this.isRateLimited();){const r=`${this.id}:${i++}`,o=this.retryIfFailed(()=>this._getNextJob(e,t,r,{block:!0}),this.opts.runRetryDelay);if(n.add(o),this.waiting&&n.numTotal()>1)break;if(!await o&&n.numTotal()>1)break;if(this.blockUntil)break}let o;do{o=await n.fetch()}while(!o&&n.numQueued()>0);if(o){const e=o.token;n.add(this.retryIfFailed(()=>this.processJob(o,e,()=>n.numTotal()<=this._concurrency,r),this.opts.runRetryDelay))}else 0===n.numQueued()&&await this.waitForRateLimit()}}async getNextJob(e,{block:t=!0}={}){var n,r;const i=await this._getNextJob(await this.client,await this.blockingConnection.client,e,{block:t});return this.trace(m.SpanKind.INTERNAL,"getNextJob",this.name,async e=>(null==e||e.setAttributes({[m.TelemetryAttributes.WorkerId]:this.id,[m.TelemetryAttributes.QueueName]:this.name,[m.TelemetryAttributes.WorkerName]:this.opts.name,[m.TelemetryAttributes.WorkerOptions]:JSON.stringify({block:t}),[m.TelemetryAttributes.JobId]:null==i?void 0:i.id}),i),null===(r=null===(n=null==i?void 0:i.opts)||void 0===n?void 0:n.telemetry)||void 0===r?void 0:r.metadata)}async _getNextJob(e,t,n,{block:r=!0}={}){if(!this.paused&&!this.closing)if(this.drained&&r&&!this.limitUntil&&!this.waiting){this.waiting=this.waitForJob(t,this.blockUntil);try{if(this.blockUntil=await this.waiting,this.blockUntil<=0||this.blockUntil-Date.now()<1)return await this.moveToActive(e,n,this.opts.name)}catch(e){if(!this.paused&&!this.closing&&(0,l.isNotConnectionError)(e))throw e}finally{this.waiting=null}}else if(!this.isRateLimited())return this.moveToActive(e,n,this.opts.name)}async rateLimit(e){await this.trace(m.SpanKind.INTERNAL,"rateLimit",this.name,async t=>{null==t||t.setAttributes({[m.TelemetryAttributes.WorkerId]:this.id,[m.TelemetryAttributes.WorkerRateLimit]:e}),await this.client.then(t=>t.set(this.keys.limiter,Number.MAX_SAFE_INTEGER,"PX",e))})}get minimumBlockTimeout(){return this.blockingConnection.capabilities.canBlockFor1Ms?.001:.002}isRateLimited(){return this.limitUntil>Date.now()}async moveToActive(e,t,n){const[r,i,o,a]=await this.scripts.moveToActive(e,t,n);return this.updateDelays(o,a),this.nextJobFromJobData(r,i,t)}async waitForJob(e,t){if(this.paused)return 1/0;let n;try{if(!this.closing&&!this.isRateLimited()){let r=this.getBlockTimeout(t);if(r>0){r=this.blockingConnection.capabilities.canDoubleTimeout?r:Math.ceil(r),n=setTimeout(async()=>{e.disconnect(!this.closing)},1e3*r+1e3),this.updateDelays();const i=await e.bzpopmin(this.keys.marker,r);if(i){const[e,n,r]=i;if(n){const e=parseInt(r);return t&&e>t?t:e}}}return 0}}catch(e){(0,l.isNotConnectionError)(e)&&this.emit("error",e),this.closing||await this.delay()}finally{clearTimeout(n)}return 1/0}getBlockTimeout(e){const t=this.opts;if(e){const t=e-Date.now();return t<=0?t:t<1e3*this.minimumBlockTimeout?this.minimumBlockTimeout:Math.min(t/1e3,10)}return Math.max(t.drainDelay,this.minimumBlockTimeout)}getRateLimitDelay(e){return Math.min(e,3e4)}async delay(e,t){await(0,l.delay)(e||l.DELAY_TIME_1,t)}updateDelays(e=0,t=0){const n=Math.max(e,0);this.limitUntil=n>0?Date.now()+n:0,this.blockUntil=Math.max(t,0)||0}async nextJobFromJobData(e,t,n){if(e){this.drained=!1;const r=this.createJob(e,t);if(r.token=n,r.opts.repeat&&!r.nextRepeatableJobId)if(r.repeatJobKey&&r.repeatJobKey.split(":").length<5){const e=await this.jobScheduler;await e.upsertJobScheduler(r.repeatJobKey,r.opts.repeat,r.name,r.data,r.opts,{override:!1,producerId:r.id})}else{const e=await this.repeat;await e.updateRepeatableJob(r.name,r.data,r.opts,{override:!1})}return r}this.drained||(this.emit("drained"),this.drained=!0)}async processJob(e,t,n=()=>!0,r){var i,o;const a=null===(o=null===(i=e.opts)||void 0===i?void 0:i.telemetry)||void 0===o?void 0:o.metadata;return this.trace(m.SpanKind.CONSUMER,"process",this.name,async i=>{null==i||i.setAttributes({[m.TelemetryAttributes.WorkerId]:this.id,[m.TelemetryAttributes.WorkerName]:this.opts.name,[m.TelemetryAttributes.JobId]:e.id}),this.emit("active",e,"waiting");const o=Date.now(),a={job:e,ts:o};try{if(e.deferredFailure){return await this.handleFailed(new y.UnrecoverableError(e.deferredFailure),e,t,n,r,a,i)}r.add(a);const o=await this.callProcessJob(e,t);return await this.handleCompleted(o,e,t,n,r,a,i)}catch(o){return await this.handleFailed(o,e,t,n,r,a,i)}finally{null==i||i.setAttributes({[m.TelemetryAttributes.JobFinishedTimestamp]:Date.now(),[m.TelemetryAttributes.JobProcessedTimestamp]:o})}},a)}async handleCompleted(e,t,n,r=()=>!0,i,o,a){if(i.delete(o),!this.connection.closing){const i=await t.moveToCompleted(e,n,r()&&!(this.closing||this.paused));this.emit("completed",t,e,"active"),null==a||a.addEvent("job completed",{[m.TelemetryAttributes.JobResult]:JSON.stringify(e)});const[o,s,l,c]=i||[];return this.updateDelays(l,c),this.nextJobFromJobData(o,s,n)}}async handleFailed(e,t,n,r=()=>!0,i,o,a){if(i.delete(o),!this.connection.closing)try{if(e.message==y.RATE_LIMIT_ERROR){const e=await this.moveLimitedBackToWait(t,n);return void(this.limitUntil=e>0?Date.now()+e:0)}if(e instanceof y.DelayedError||"DelayedError"==e.name||e instanceof y.WaitingError||"WaitingError"==e.name||e instanceof y.WaitingChildrenError||"WaitingChildrenError"==e.name)return;const i=await t.moveToFailed(e,n,r()&&!(this.closing||this.paused));if(this.emit("failed",t,e,"active"),null==a||a.addEvent("job failed",{[m.TelemetryAttributes.JobFailedReason]:e.message}),i){const[e,t,r,o]=i;return this.updateDelays(r,o),this.nextJobFromJobData(e,t,n)}}catch(e){this.emit("error",e),null==a||a.recordException(e.message)}}async pause(e){await this.trace(m.SpanKind.INTERNAL,"pause",this.name,async t=>{var n;null==t||t.setAttributes({[m.TelemetryAttributes.WorkerId]:this.id,[m.TelemetryAttributes.WorkerName]:this.opts.name,[m.TelemetryAttributes.WorkerDoNotWaitActive]:e}),this.paused||(this.paused=!0,e||await this.whenCurrentJobsFinished(),null===(n=this.stalledCheckStopper)||void 0===n||n.call(this),this.emit("paused"))})}resume(){this.running||this.trace(m.SpanKind.INTERNAL,"resume",this.name,e=>{null==e||e.setAttributes({[m.TelemetryAttributes.WorkerId]:this.id,[m.TelemetryAttributes.WorkerName]:this.opts.name}),this.paused=!1,this.processFn&&this.run(),this.emit("resumed")})}isPaused(){return!!this.paused}isRunning(){return this.running}async close(e=!1){return this.closing?this.closing:(this.closing=(async()=>{await this.trace(m.SpanKind.INTERNAL,"close",this.name,async t=>{var n,r;null==t||t.setAttributes({[m.TelemetryAttributes.WorkerId]:this.id,[m.TelemetryAttributes.WorkerName]:this.opts.name,[m.TelemetryAttributes.WorkerForceClose]:e}),this.emit("closing","closing queue"),null===(n=this.abortDelayController)||void 0===n||n.abort();const i=[()=>e||this.whenCurrentJobsFinished(!1),()=>{var e;return null===(e=this.childPool)||void 0===e?void 0:e.clean()},()=>this.blockingConnection.close(e),()=>this.connection.close(e)];for(const e of i)try{await e()}catch(e){this.emit("error",e)}clearTimeout(this.extendLocksTimer),null===(r=this.stalledCheckStopper)||void 0===r||r.call(this),this.closed=!0,this.emit("closed")})})(),await this.closing)}async startStalledCheckTimer(){this.opts.skipStalledCheck||this.closing||await this.trace(m.SpanKind.INTERNAL,"startStalledCheckTimer",this.name,async e=>{null==e||e.setAttributes({[m.TelemetryAttributes.WorkerId]:this.id,[m.TelemetryAttributes.WorkerName]:this.opts.name}),this.stalledChecker().catch(e=>{this.emit("error",e)})})}async stalledChecker(){for(;!this.closing&&!this.paused;){try{await this.checkConnectionError(()=>this.moveStalledJobsToWait())}catch(e){this.emit("error",e)}await new Promise(e=>{const t=setTimeout(e,this.opts.stalledInterval);this.stalledCheckStopper=()=>{clearTimeout(t),e()}})}}startLockExtenderTimer(e){this.opts.skipLockRenewal||(clearTimeout(this.extendLocksTimer),this.closed||(this.extendLocksTimer=setTimeout(async()=>{const t=Date.now(),n=[];for(const r of e){const{job:e,ts:i}=r;i?i+this.opts.lockRenewTime/2<t&&(r.ts=t,n.push(e)):r.ts=t}try{n.length&&await this.extendLocks(n)}catch(e){this.emit("error",e)}this.startLockExtenderTimer(e)},this.opts.lockRenewTime/2)))}async whenCurrentJobsFinished(e=!0){this.waiting?await this.blockingConnection.disconnect(e):e=!1,this.mainLoopRunning&&await this.mainLoopRunning,e&&await this.blockingConnection.reconnect()}async retryIfFailed(e,t){for(;;)try{return await e()}catch(e){if(this.emit("error",e),!t)return;await this.delay(t)}}async extendLocks(e){await this.trace(m.SpanKind.INTERNAL,"extendLocks",this.name,async t=>{null==t||t.setAttributes({[m.TelemetryAttributes.WorkerId]:this.id,[m.TelemetryAttributes.WorkerName]:this.opts.name,[m.TelemetryAttributes.WorkerJobsToExtendLocks]:e.map(e=>e.id)});try{const t=await this.scripts.extendLocks(e.map(e=>e.id),e.map(e=>e.token),this.opts.lockDuration);for(const e of t)this.emit("error",new Error(`could not renew lock for job ${e}`))}catch(e){this.emit("error",e)}})}async moveStalledJobsToWait(){await this.trace(m.SpanKind.INTERNAL,"moveStalledJobsToWait",this.name,async e=>{const t=await this.scripts.moveStalledJobsToWait();null==e||e.setAttributes({[m.TelemetryAttributes.WorkerId]:this.id,[m.TelemetryAttributes.WorkerName]:this.opts.name,[m.TelemetryAttributes.WorkerStalledJobs]:t}),t.forEach(t=>{null==e||e.addEvent("job stalled",{[m.TelemetryAttributes.JobId]:t}),this.emit("stalled",t,"active")})})}moveLimitedBackToWait(e,t){return e.moveToWait(t)}}},()=>{},e=>{"use strict";const t="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0;if(!t)throw new Error("Unable to find global scope. Are you sure this is running in the browser?");if(!t.AbortController)throw new Error('Could not find "AbortController" in the global scope. You need to polyfill it first');e.exports.AbortController=t.AbortController},(e,t,n)=>{"use strict";n.r(t),n.d(t,{ClientType:()=>r.ClientType});n(318),n(319),n(320),n(321),n(322),n(323),n(324),n(325),n(326),n(327),n(328),n(329),n(330),n(331),n(332),n(333);var r=n(334);n(335),n(336),n(337),n(338),n(339),n(340),n(341),n(342),n(343),n(344),n(345),n(346)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";var r;n.r(t),n.d(t,{ClientType:()=>r}),function(e){e.blocking="blocking",e.normal="normal"}(r||(r={}))},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t);n(348),n(349),n(350),n(351),n(352),n(353),n(354),n(355),n(356),n(357),n(358)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";n.r(t),n.d(t,{agentJobQueue:()=>u,agentJobScheduler:()=>d,connection:()=>l});var r=n(5),i=n(296),o=n(23),a=n.n(o);const s=process.env.REDIS_URL||"redis://localhost:6379",l=new(a())(s),c="agent-jobs",u=new r.Queue(c,{connection:l}),d=new i.JobScheduler(c,{connection:l})},(e,t,n)=>{var r=n(1);function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}e.exports=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach(function(t){r(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}({},n(361))},(e,t,n)=>{var r=n(1);function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}e.exports=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach(function(t){r(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}({},n(362))},(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const{Decimal:r,objectEnumValues:i,makeStrictEnum:o,Public:a,getRuntime:s,skip:l}=n(363),c={};t.Prisma=c,t.$Enums={},c.prismaVersion={client:"6.13.0",engine:"361e86d0ea4987e9f53a565309b3eed797a6bcbd"},c.PrismaClientKnownRequestError=()=>{const e=s().prettyName;throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${e}).\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`)},c.PrismaClientUnknownRequestError=()=>{const e=s().prettyName;throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${e}).\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`)},c.PrismaClientRustPanicError=()=>{const e=s().prettyName;throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${e}).\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`)},c.PrismaClientInitializationError=()=>{const e=s().prettyName;throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${e}).\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`)},c.PrismaClientValidationError=()=>{const e=s().prettyName;throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${e}).\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`)},c.Decimal=r,c.sql=()=>{const e=s().prettyName;throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${e}).\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`)},c.empty=()=>{const e=s().prettyName;throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${e}).\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`)},c.join=()=>{const e=s().prettyName;throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${e}).\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`)},c.raw=()=>{const e=s().prettyName;throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${e}).\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`)},c.validator=a.validator,c.getExtensionContext=()=>{const e=s().prettyName;throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${e}).\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`)},c.defineExtension=()=>{const e=s().prettyName;throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${e}).\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`)},c.DbNull=i.instances.DbNull,c.JsonNull=i.instances.JsonNull,c.AnyNull=i.instances.AnyNull,c.NullTypes={DbNull:i.classes.DbNull,JsonNull:i.classes.JsonNull,AnyNull:i.classes.AnyNull},t.Prisma.TransactionIsolationLevel=o({ReadUncommitted:"ReadUncommitted",ReadCommitted:"ReadCommitted",RepeatableRead:"RepeatableRead",Serializable:"Serializable"}),t.Prisma.UserScalarFieldEnum={id:"id",email:"email",name:"name",orgId:"orgId",role:"role",createdAt:"createdAt",updatedAt:"updatedAt",deletedAt:"deletedAt"},t.Prisma.AgentTemplateScalarFieldEnum={id:"id",name:"name",description:"description",version:"version",category:"category",defaultPrompt:"defaultPrompt",defaultModel:"defaultModel",defaultTools:"defaultTools",defaultConfig:"defaultConfig",isPublic:"isPublic",orgId:"orgId",createdAt:"createdAt",updatedAt:"updatedAt",deletedAt:"deletedAt",steps:"steps",credentials:"credentials",health:"health",jobQueue:"jobQueue"},t.Prisma.AgentInstanceScalarFieldEnum={id:"id",userId:"userId",templateId:"templateId",name:"name",configOverride:"configOverride",status:"status",visibility:"visibility",createdAt:"createdAt",updatedAt:"updatedAt",deletedAt:"deletedAt"},t.Prisma.AgentCredentialScalarFieldEnum={id:"id",userId:"userId",agentInstanceId:"agentInstanceId",provider:"provider",secretId:"secretId",rotatedAt:"rotatedAt",createdAt:"createdAt",updatedAt:"updatedAt"},t.Prisma.SecretScalarFieldEnum={id:"id",encryptedBlob:"encryptedBlob",kmsKeyId:"kmsKeyId",createdAt:"createdAt",updatedAt:"updatedAt"},t.Prisma.AgentRunScalarFieldEnum={id:"id",userId:"userId",agentInstanceId:"agentInstanceId",status:"status",tokensUsed:"tokensUsed",cost:"cost",startedAt:"startedAt",finishedAt:"finishedAt"},t.Prisma.AgentRunStepScalarFieldEnum={id:"id",runId:"runId",index:"index",name:"name",input:"input",output:"output",error:"error",startedAt:"startedAt",finishedAt:"finishedAt"},t.Prisma.AgentEventScalarFieldEnum={id:"id",agentRunId:"agentRunId",eventType:"eventType",payload:"payload",createdAt:"createdAt"},t.Prisma.UsageMeterScalarFieldEnum={id:"id",userId:"userId",orgId:"orgId",model:"model",tool:"tool",agentId:"agentId",count:"count",periodStart:"periodStart",periodEnd:"periodEnd",createdAt:"createdAt",updatedAt:"updatedAt"},t.Prisma.BillingAccountScalarFieldEnum={id:"id",userId:"userId",orgId:"orgId",stripeCustomerId:"stripeCustomerId",createdAt:"createdAt",updatedAt:"updatedAt"},t.Prisma.InvoiceScalarFieldEnum={id:"id",billingAccountId:"billingAccountId",stripeInvoiceId:"stripeInvoiceId",status:"status",amount:"amount",currency:"currency",issuedAt:"issuedAt",paidAt:"paidAt",createdAt:"createdAt",updatedAt:"updatedAt"},t.Prisma.ChargeScalarFieldEnum={id:"id",invoiceId:"invoiceId",stripeChargeId:"stripeChargeId",amount:"amount",currency:"currency",status:"status",createdAt:"createdAt",updatedAt:"updatedAt"},t.Prisma.FeatureFlagScalarFieldEnum={id:"id",name:"name",enabled:"enabled",createdAt:"createdAt",updatedAt:"updatedAt"},t.Prisma.AuditLogScalarFieldEnum={id:"id",userId:"userId",orgId:"orgId",action:"action",targetId:"targetId",details:"details",createdAt:"createdAt",updatedAt:"updatedAt"},t.Prisma.SortOrder={asc:"asc",desc:"desc"},t.Prisma.NullableJsonNullValueInput={DbNull:c.DbNull,JsonNull:c.JsonNull},t.Prisma.JsonNullValueInput={JsonNull:c.JsonNull},t.Prisma.QueryMode={default:"default",insensitive:"insensitive"},t.Prisma.NullsOrder={first:"first",last:"last"},t.Prisma.JsonNullValueFilter={DbNull:c.DbNull,JsonNull:c.JsonNull,AnyNull:c.AnyNull},t.UserRole=t.$Enums.UserRole={USER:"USER",ORG_ADMIN:"ORG_ADMIN",SUPER_ADMIN:"SUPER_ADMIN"},t.AgentVisibility=t.$Enums.AgentVisibility={PRIVATE:"PRIVATE",ORG:"ORG",PUBLIC:"PUBLIC"},t.BillingStatus=t.$Enums.BillingStatus={PENDING:"PENDING",PAID:"PAID",FAILED:"FAILED",CANCELLED:"CANCELLED"},t.Prisma.ModelName={User:"User",AgentTemplate:"AgentTemplate",AgentInstance:"AgentInstance",AgentCredential:"AgentCredential",Secret:"Secret",AgentRun:"AgentRun",AgentRunStep:"AgentRunStep",AgentEvent:"AgentEvent",UsageMeter:"UsageMeter",BillingAccount:"BillingAccount",Invoice:"Invoice",Charge:"Charge",FeatureFlag:"FeatureFlag",AuditLog:"AuditLog"};t.PrismaClient=class{constructor(){return new Proxy(this,{get(e,t){let n;const r=s();throw n=r.isEdge?`PrismaClient is not configured to run in ${r.prettyName}. In order to run Prisma Client on edge runtime, either:\n- Use Prisma Accelerate: https://pris.ly/d/accelerate\n- Use Driver Adapters: https://pris.ly/d/driver-adapters\n`:"PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `"+r.prettyName+"`).",n+="\nIf this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report",new Error(n)}})}},Object.assign(t,c)},e=>{"use strict";var t,n=Object.defineProperty,r=Object.getOwnPropertyDescriptor,i=Object.getOwnPropertyNames,o=Object.prototype.hasOwnProperty,a=(e,t)=>{for(var r in t)n(e,r,{get:t[r],enumerable:!0})},s=(e,t,n)=>t.has(e)?(e=>{throw TypeError(e)})("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,n),l={};a(l,{Decimal:()=>ft,Public:()=>c,getRuntime:()=>D,makeStrictEnum:()=>I,objectEnumValues:()=>w}),e.exports=(t=l,((e,t,a,s)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let l of i(t))!o.call(e,l)&&l!==a&&n(e,l,{get:()=>t[l],enumerable:!(s=r(t,l))||s.enumerable});return e})(n({},"__esModule",{value:!0}),t));var c={};function u(...e){return e=>e}a(c,{validator:()=>u});var d,p=Symbol(),h=new WeakMap,f=class{constructor(e){e===p?h.set(this,"Prisma.".concat(this._getName())):h.set(this,"new Prisma.".concat(this._getNamespace(),".").concat(this._getName(),"()"))}_getName(){return this.constructor.name}toString(){return h.get(this)}},y=class extends f{_getNamespace(){return"NullTypes"}},m=class extends y{constructor(){super(...arguments),s(this,d)}};d=new WeakMap,S(m,"DbNull");var b,g=class extends y{constructor(){super(...arguments),s(this,b)}};b=new WeakMap,S(g,"JsonNull");var v,E=class extends y{constructor(){super(...arguments),s(this,v)}};v=new WeakMap,S(E,"AnyNull");var w={classes:{DbNull:m,JsonNull:g,AnyNull:E},instances:{DbNull:new m(p),JsonNull:new g(p),AnyNull:new E(p)}};function S(e,t){Object.defineProperty(e,"name",{value:t,configurable:!0})}var K=new Set(["toJSON","$$typeof","asymmetricMatch",Symbol.iterator,Symbol.toStringTag,Symbol.isConcatSpreadable,Symbol.toPrimitive]);function I(e){return new Proxy(e,{get(e,t){if(t in e)return e[t];if(!K.has(t))throw new TypeError("Invalid enum value: ".concat(String(t)))}})}var k=()=>{var e,t;return"node"===(null==(t=null==(e=globalThis.process)?void 0:e.release)?void 0:t.name)},j=()=>{var e,t;return!!globalThis.Bun||!(null==(t=null==(e=globalThis.process)?void 0:e.versions)||!t.bun)},x=()=>!!globalThis.Deno,A=()=>"object"==typeof globalThis.Netlify,O=()=>"object"==typeof globalThis.EdgeRuntime,T=()=>{var e;return"Cloudflare-Workers"===(null==(e=globalThis.navigator)?void 0:e.userAgent)};var R={node:"Node.js",workerd:"Cloudflare Workers",deno:"Deno and Deno Deploy",netlify:"Netlify Edge Functions","edge-light":"Edge Runtime (Vercel Edge Functions, Vercel Edge Middleware, Next.js (Pages Router) Edge API Routes, Next.js (App Router) Edge Route Handlers or Next.js Middleware)"};function D(){let e=null!=(t=[[A,"netlify"],[O,"edge-light"],[T,"workerd"],[x,"deno"],[j,"bun"],[k,"node"]].flatMap(e=>e[0]()?[e[1]]:[]).at(0))?t:"";var t;return{id:e,prettyName:R[e]||e,isEdge:["workerd","deno","netlify","edge-light"].includes(e)}}var C,P,M=9e15,N=1e9,_="0123456789abcdef",L="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",J="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",F={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-M,maxE:M,crypto:!1},V=!0,G="[DecimalError] ",q=G+"Invalid argument: ",B=G+"Precision limit exceeded",U=G+"crypto unavailable",Y="[object Decimal]",z=Math.floor,W=Math.pow,$=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,Q=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,H=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,Z=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,X=1e7,ee=L.length-1,te=J.length-1,ne={toStringTag:Y};function re(e){var t,n,r,i=e.length-1,o="",a=e[0];if(i>0){for(o+=a,t=1;t<i;t++)(n=7-(r=e[t]+"").length)&&(o+=fe(n)),o+=r;(n=7-(r=(a=e[t])+"").length)&&(o+=fe(n))}else if(0===a)return"0";for(;a%10==0;)a/=10;return o+a}function ie(e,t,n){if(e!==~~e||e<t||e>n)throw Error(q+e)}function oe(e,t,n,r){var i,o,a,s;for(o=e[0];o>=10;o/=10)--t;return--t<0?(t+=7,i=0):(i=Math.ceil((t+1)/7),t%=7),o=W(10,7-t),s=e[i]%o|0,null==r?t<3?(0==t?s=s/100|0:1==t&&(s=s/10|0),a=n<4&&99999==s||n>3&&49999==s||5e4==s||0==s):a=(n<4&&s+1==o||n>3&&s+1==o/2)&&(e[i+1]/o/100|0)==W(10,t-2)-1||(s==o/2||0==s)&&!(e[i+1]/o/100|0):t<4?(0==t?s=s/1e3|0:1==t?s=s/100|0:2==t&&(s=s/10|0),a=(r||n<4)&&9999==s||!r&&n>3&&4999==s):a=((r||n<4)&&s+1==o||!r&&n>3&&s+1==o/2)&&(e[i+1]/o/1e3|0)==W(10,t-3)-1,a}function ae(e,t,n){for(var r,i,o=[0],a=0,s=e.length;a<s;){for(i=o.length;i--;)o[i]*=t;for(o[0]+=_.indexOf(e.charAt(a++)),r=0;r<o.length;r++)o[r]>n-1&&(void 0===o[r+1]&&(o[r+1]=0),o[r+1]+=o[r]/n|0,o[r]%=n)}return o.reverse()}ne.absoluteValue=ne.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),le(e)},ne.ceil=function(){return le(new this.constructor(this),this.e+1,2)},ne.clampedTo=ne.clamp=function(e,t){var n=this,r=n.constructor;if(e=new r(e),t=new r(t),!e.s||!t.s)return new r(NaN);if(e.gt(t))throw Error(q+t);return n.cmp(e)<0?e:n.cmp(t)>0?t:new r(n)},ne.comparedTo=ne.cmp=function(e){var t,n,r,i,o=this,a=o.d,s=(e=new o.constructor(e)).d,l=o.s,c=e.s;if(!a||!s)return l&&c?l!==c?l:a===s?0:!a^l<0?1:-1:NaN;if(!a[0]||!s[0])return a[0]?l:s[0]?-c:0;if(l!==c)return l;if(o.e!==e.e)return o.e>e.e^l<0?1:-1;for(t=0,n=(r=a.length)<(i=s.length)?r:i;t<n;++t)if(a[t]!==s[t])return a[t]>s[t]^l<0?1:-1;return r===i?0:r>i^l<0?1:-1},ne.cosine=ne.cos=function(){var e,t,n=this,r=n.constructor;return n.d?n.d[0]?(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+7,r.rounding=1,n=function(e,t){var n,r,i;if(t.isZero())return t;r=t.d.length,r<32?(n=Math.ceil(r/3),i=(1/Ke(4,n)).toString()):(n=16,i="2.3283064365386962890625e-10"),e.precision+=n,t=Se(e,1,t.times(i),new e(1));for(var o=n;o--;){var a=t.times(t);t=a.times(a).minus(a).times(8).plus(1)}return e.precision-=n,t}(r,Ie(r,n)),r.precision=e,r.rounding=t,le(2==P||3==P?n.neg():n,e,t,!0)):new r(1):new r(NaN)},ne.cubeRoot=ne.cbrt=function(){var e,t,n,r,i,o,a,s,l,c,u=this,d=u.constructor;if(!u.isFinite()||u.isZero())return new d(u);for(V=!1,(o=u.s*W(u.s*u,1/3))&&Math.abs(o)!=1/0?r=new d(o.toString()):(n=re(u.d),(o=((e=u.e)-n.length+1)%3)&&(n+=1==o||-2==o?"0":"00"),o=W(n,1/3),e=z((e+1)/3)-(e%3==(e<0?-1:2)),o==1/0?n="5e"+e:n=(n=o.toExponential()).slice(0,n.indexOf("e")+1)+e,(r=new d(n)).s=u.s),a=(e=d.precision)+3;;)if(c=(l=(s=r).times(s).times(s)).plus(u),r=se(c.plus(u).times(s),c.plus(l),a+2,1),re(s.d).slice(0,a)===(n=re(r.d)).slice(0,a)){if("9999"!=(n=n.slice(a-3,a+1))&&(i||"4999"!=n)){(!+n||!+n.slice(1)&&"5"==n.charAt(0))&&(le(r,e+1,1),t=!r.times(r).times(r).eq(u));break}if(!i&&(le(s,e+1,0),s.times(s).times(s).eq(u))){r=s;break}a+=4,i=1}return V=!0,le(r,e,d.rounding,t)},ne.decimalPlaces=ne.dp=function(){var e,t=this.d,n=NaN;if(t){if(n=7*((e=t.length-1)-z(this.e/7)),e=t[e])for(;e%10==0;e/=10)n--;n<0&&(n=0)}return n},ne.dividedBy=ne.div=function(e){return se(this,new this.constructor(e))},ne.dividedToIntegerBy=ne.divToInt=function(e){var t=this.constructor;return le(se(this,new t(e),0,1,1),t.precision,t.rounding)},ne.equals=ne.eq=function(e){return 0===this.cmp(e)},ne.floor=function(){return le(new this.constructor(this),this.e+1,3)},ne.greaterThan=ne.gt=function(e){return this.cmp(e)>0},ne.greaterThanOrEqualTo=ne.gte=function(e){var t=this.cmp(e);return 1==t||0===t},ne.hyperbolicCosine=ne.cosh=function(){var e,t,n,r,i,o=this,a=o.constructor,s=new a(1);if(!o.isFinite())return new a(o.s?1/0:NaN);if(o.isZero())return s;n=a.precision,r=a.rounding,a.precision=n+Math.max(o.e,o.sd())+4,a.rounding=1,(i=o.d.length)<32?t=(1/Ke(4,e=Math.ceil(i/3))).toString():(e=16,t="2.3283064365386962890625e-10"),o=Se(a,1,o.times(t),new a(1),!0);for(var l,c=e,u=new a(8);c--;)l=o.times(o),o=s.minus(l.times(u.minus(l.times(u))));return le(o,a.precision=n,a.rounding=r,!0)},ne.hyperbolicSine=ne.sinh=function(){var e,t,n,r,i=this,o=i.constructor;if(!i.isFinite()||i.isZero())return new o(i);if(t=o.precision,n=o.rounding,o.precision=t+Math.max(i.e,i.sd())+4,o.rounding=1,(r=i.d.length)<3)i=Se(o,2,i,i,!0);else{e=(e=1.4*Math.sqrt(r))>16?16:0|e,i=Se(o,2,i=i.times(1/Ke(5,e)),i,!0);for(var a,s=new o(5),l=new o(16),c=new o(20);e--;)a=i.times(i),i=i.times(s.plus(a.times(l.times(a).plus(c))))}return o.precision=t,o.rounding=n,le(i,t,n,!0)},ne.hyperbolicTangent=ne.tanh=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+7,r.rounding=1,se(n.sinh(),n.cosh(),r.precision=e,r.rounding=t)):new r(n.s)},ne.inverseCosine=ne.acos=function(){var e=this,t=e.constructor,n=e.abs().cmp(1),r=t.precision,i=t.rounding;return-1!==n?0===n?e.isNeg()?pe(t,r,i):new t(0):new t(NaN):e.isZero()?pe(t,r+4,i).times(.5):(t.precision=r+6,t.rounding=1,e=new t(1).minus(e).div(e.plus(1)).sqrt().atan(),t.precision=r,t.rounding=i,e.times(2))},ne.inverseHyperbolicCosine=ne.acosh=function(){var e,t,n=this,r=n.constructor;return n.lte(1)?new r(n.eq(1)?0:NaN):n.isFinite()?(e=r.precision,t=r.rounding,r.precision=e+Math.max(Math.abs(n.e),n.sd())+4,r.rounding=1,V=!1,n=n.times(n).minus(1).sqrt().plus(n),V=!0,r.precision=e,r.rounding=t,n.ln()):new r(n)},ne.inverseHyperbolicSine=ne.asinh=function(){var e,t,n=this,r=n.constructor;return!n.isFinite()||n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+2*Math.max(Math.abs(n.e),n.sd())+6,r.rounding=1,V=!1,n=n.times(n).plus(1).sqrt().plus(n),V=!0,r.precision=e,r.rounding=t,n.ln())},ne.inverseHyperbolicTangent=ne.atanh=function(){var e,t,n,r,i=this,o=i.constructor;return i.isFinite()?i.e>=0?new o(i.abs().eq(1)?i.s/0:i.isZero()?i:NaN):(e=o.precision,t=o.rounding,r=i.sd(),Math.max(r,e)<2*-i.e-1?le(new o(i),e,t,!0):(o.precision=n=r-i.e,i=se(i.plus(1),new o(1).minus(i),n+e,1),o.precision=e+4,o.rounding=1,i=i.ln(),o.precision=e,o.rounding=t,i.times(.5))):new o(NaN)},ne.inverseSine=ne.asin=function(){var e,t,n,r,i=this,o=i.constructor;return i.isZero()?new o(i):(t=i.abs().cmp(1),n=o.precision,r=o.rounding,-1!==t?0===t?((e=pe(o,n+4,r).times(.5)).s=i.s,e):new o(NaN):(o.precision=n+6,o.rounding=1,i=i.div(new o(1).minus(i.times(i)).sqrt().plus(1)).atan(),o.precision=n,o.rounding=r,i.times(2)))},ne.inverseTangent=ne.atan=function(){var e,t,n,r,i,o,a,s,l,c=this,u=c.constructor,d=u.precision,p=u.rounding;if(c.isFinite()){if(c.isZero())return new u(c);if(c.abs().eq(1)&&d+4<=te)return(a=pe(u,d+4,p).times(.25)).s=c.s,a}else{if(!c.s)return new u(NaN);if(d+4<=te)return(a=pe(u,d+4,p).times(.5)).s=c.s,a}for(u.precision=s=d+10,u.rounding=1,e=n=Math.min(28,s/7+2|0);e;--e)c=c.div(c.times(c).plus(1).sqrt().plus(1));for(V=!1,t=Math.ceil(s/7),r=1,l=c.times(c),a=new u(c),i=c;-1!==e;)if(i=i.times(l),o=a.minus(i.div(r+=2)),i=i.times(l),void 0!==(a=o.plus(i.div(r+=2))).d[t])for(e=t;a.d[e]===o.d[e]&&e--;);return n&&(a=a.times(2<<n-1)),V=!0,le(a,u.precision=d,u.rounding=p,!0)},ne.isFinite=function(){return!!this.d},ne.isInteger=ne.isInt=function(){return!!this.d&&z(this.e/7)>this.d.length-2},ne.isNaN=function(){return!this.s},ne.isNegative=ne.isNeg=function(){return this.s<0},ne.isPositive=ne.isPos=function(){return this.s>0},ne.isZero=function(){return!!this.d&&0===this.d[0]},ne.lessThan=ne.lt=function(e){return this.cmp(e)<0},ne.lessThanOrEqualTo=ne.lte=function(e){return this.cmp(e)<1},ne.logarithm=ne.log=function(e){var t,n,r,i,o,a,s,l,c=this,u=c.constructor,d=u.precision,p=u.rounding;if(null==e)e=new u(10),t=!0;else{if(n=(e=new u(e)).d,e.s<0||!n||!n[0]||e.eq(1))return new u(NaN);t=e.eq(10)}if(n=c.d,c.s<0||!n||!n[0]||c.eq(1))return new u(n&&!n[0]?-1/0:1!=c.s?NaN:n?0:1/0);if(t)if(n.length>1)o=!0;else{for(i=n[0];i%10==0;)i/=10;o=1!==i}if(V=!1,a=ve(c,s=d+5),r=t?de(u,s+10):ve(e,s),oe((l=se(a,r,s,1)).d,i=d,p))do{if(a=ve(c,s+=10),r=t?de(u,s+10):ve(e,s),l=se(a,r,s,1),!o){+re(l.d).slice(i+1,i+15)+1==1e14&&(l=le(l,d+1,0));break}}while(oe(l.d,i+=10,p));return V=!0,le(l,d,p)},ne.minus=ne.sub=function(e){var t,n,r,i,o,a,s,l,c,u,d,p,h=this,f=h.constructor;if(e=new f(e),!h.d||!e.d)return h.s&&e.s?h.d?e.s=-e.s:e=new f(e.d||h.s!==e.s?h:NaN):e=new f(NaN),e;if(h.s!=e.s)return e.s=-e.s,h.plus(e);if(c=h.d,p=e.d,s=f.precision,l=f.rounding,!c[0]||!p[0]){if(p[0])e.s=-e.s;else{if(!c[0])return new f(3===l?-0:0);e=new f(h)}return V?le(e,s,l):e}if(n=z(e.e/7),u=z(h.e/7),c=c.slice(),o=u-n){for((d=o<0)?(t=c,o=-o,a=p.length):(t=p,n=u,a=c.length),o>(r=Math.max(Math.ceil(s/7),a)+2)&&(o=r,t.length=1),t.reverse(),r=o;r--;)t.push(0);t.reverse()}else{for((d=(r=c.length)<(a=p.length))&&(a=r),r=0;r<a;r++)if(c[r]!=p[r]){d=c[r]<p[r];break}o=0}for(d&&(t=c,c=p,p=t,e.s=-e.s),a=c.length,r=p.length-a;r>0;--r)c[a++]=0;for(r=p.length;r>o;){if(c[--r]<p[r]){for(i=r;i&&0===c[--i];)c[i]=X-1;--c[i],c[r]+=X}c[r]-=p[r]}for(;0===c[--a];)c.pop();for(;0===c[0];c.shift())--n;return c[0]?(e.d=c,e.e=ue(c,n),V?le(e,s,l):e):new f(3===l?-0:0)},ne.modulo=ne.mod=function(e){var t,n=this,r=n.constructor;return e=new r(e),!n.d||!e.s||e.d&&!e.d[0]?new r(NaN):!e.d||n.d&&!n.d[0]?le(new r(n),r.precision,r.rounding):(V=!1,9==r.modulo?(t=se(n,e.abs(),0,3,1)).s*=e.s:t=se(n,e,0,r.modulo,1),t=t.times(e),V=!0,n.minus(t))},ne.naturalExponential=ne.exp=function(){return ge(this)},ne.naturalLogarithm=ne.ln=function(){return ve(this)},ne.negated=ne.neg=function(){var e=new this.constructor(this);return e.s=-e.s,le(e)},ne.plus=ne.add=function(e){var t,n,r,i,o,a,s,l,c,u,d=this,p=d.constructor;if(e=new p(e),!d.d||!e.d)return d.s&&e.s?d.d||(e=new p(e.d||d.s===e.s?d:NaN)):e=new p(NaN),e;if(d.s!=e.s)return e.s=-e.s,d.minus(e);if(c=d.d,u=e.d,s=p.precision,l=p.rounding,!c[0]||!u[0])return u[0]||(e=new p(d)),V?le(e,s,l):e;if(o=z(d.e/7),r=z(e.e/7),c=c.slice(),i=o-r){for(i<0?(n=c,i=-i,a=u.length):(n=u,r=o,a=c.length),i>(a=(o=Math.ceil(s/7))>a?o+1:a+1)&&(i=a,n.length=1),n.reverse();i--;)n.push(0);n.reverse()}for((a=c.length)-(i=u.length)<0&&(i=a,n=u,u=c,c=n),t=0;i;)t=(c[--i]=c[i]+u[i]+t)/X|0,c[i]%=X;for(t&&(c.unshift(t),++r),a=c.length;0==c[--a];)c.pop();return e.d=c,e.e=ue(c,r),V?le(e,s,l):e},ne.precision=ne.sd=function(e){var t,n=this;if(void 0!==e&&e!==!!e&&1!==e&&0!==e)throw Error(q+e);return n.d?(t=he(n.d),e&&n.e+1>t&&(t=n.e+1)):t=NaN,t},ne.round=function(){var e=this,t=e.constructor;return le(new t(e),e.e+1,t.rounding)},ne.sine=ne.sin=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+7,r.rounding=1,n=function(e,t){var n,r=t.d.length;if(r<3)return t.isZero()?t:Se(e,2,t,t);n=1.4*Math.sqrt(r),n=n>16?16:0|n,t=t.times(1/Ke(5,n)),t=Se(e,2,t,t);for(var i,o=new e(5),a=new e(16),s=new e(20);n--;)i=t.times(t),t=t.times(o.plus(i.times(a.times(i).minus(s))));return t}(r,Ie(r,n)),r.precision=e,r.rounding=t,le(P>2?n.neg():n,e,t,!0)):new r(NaN)},ne.squareRoot=ne.sqrt=function(){var e,t,n,r,i,o,a=this,s=a.d,l=a.e,c=a.s,u=a.constructor;if(1!==c||!s||!s[0])return new u(!c||c<0&&(!s||s[0])?NaN:s?a:1/0);for(V=!1,0==(c=Math.sqrt(+a))||c==1/0?(((t=re(s)).length+l)%2==0&&(t+="0"),c=Math.sqrt(t),l=z((l+1)/2)-(l<0||l%2),c==1/0?t="5e"+l:t=(t=c.toExponential()).slice(0,t.indexOf("e")+1)+l,r=new u(t)):r=new u(c.toString()),n=(l=u.precision)+3;;)if(r=(o=r).plus(se(a,o,n+2,1)).times(.5),re(o.d).slice(0,n)===(t=re(r.d)).slice(0,n)){if("9999"!=(t=t.slice(n-3,n+1))&&(i||"4999"!=t)){(!+t||!+t.slice(1)&&"5"==t.charAt(0))&&(le(r,l+1,1),e=!r.times(r).eq(a));break}if(!i&&(le(o,l+1,0),o.times(o).eq(a))){r=o;break}n+=4,i=1}return V=!0,le(r,l,u.rounding,e)},ne.tangent=ne.tan=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+10,r.rounding=1,(n=n.sin()).s=1,n=se(n,new r(1).minus(n.times(n)).sqrt(),e+10,0),r.precision=e,r.rounding=t,le(2==P||4==P?n.neg():n,e,t,!0)):new r(NaN)},ne.times=ne.mul=function(e){var t,n,r,i,o,a,s,l,c,u=this,d=u.constructor,p=u.d,h=(e=new d(e)).d;if(e.s*=u.s,!(p&&p[0]&&h&&h[0]))return new d(!e.s||p&&!p[0]&&!h||h&&!h[0]&&!p?NaN:p&&h?0*e.s:e.s/0);for(n=z(u.e/7)+z(e.e/7),(l=p.length)<(c=h.length)&&(o=p,p=h,h=o,a=l,l=c,c=a),o=[],r=a=l+c;r--;)o.push(0);for(r=c;--r>=0;){for(t=0,i=l+r;i>r;)s=o[i]+h[r]*p[i-r-1]+t,o[i--]=s%X|0,t=s/X|0;o[i]=(o[i]+t)%X|0}for(;!o[--a];)o.pop();return t?++n:o.shift(),e.d=o,e.e=ue(o,n),V?le(e,d.precision,d.rounding):e},ne.toBinary=function(e,t){return ke(this,2,e,t)},ne.toDecimalPlaces=ne.toDP=function(e,t){var n=this,r=n.constructor;return n=new r(n),void 0===e?n:(ie(e,0,N),void 0===t?t=r.rounding:ie(t,0,8),le(n,e+n.e+1,t))},ne.toExponential=function(e,t){var n,r=this,i=r.constructor;return void 0===e?n=ce(r,!0):(ie(e,0,N),void 0===t?t=i.rounding:ie(t,0,8),n=ce(r=le(new i(r),e+1,t),!0,e+1)),r.isNeg()&&!r.isZero()?"-"+n:n},ne.toFixed=function(e,t){var n,r,i=this,o=i.constructor;return void 0===e?n=ce(i):(ie(e,0,N),void 0===t?t=o.rounding:ie(t,0,8),n=ce(r=le(new o(i),e+i.e+1,t),!1,e+r.e+1)),i.isNeg()&&!i.isZero()?"-"+n:n},ne.toFraction=function(e){var t,n,r,i,o,a,s,l,c,u,d,p,h=this,f=h.d,y=h.constructor;if(!f)return new y(h);if(c=n=new y(1),r=l=new y(0),a=(o=(t=new y(r)).e=he(f)-h.e-1)%7,t.d[0]=W(10,a<0?7+a:a),null==e)e=o>0?t:c;else{if(!(s=new y(e)).isInt()||s.lt(c))throw Error(q+s);e=s.gt(t)?o>0?t:c:s}for(V=!1,s=new y(re(f)),u=y.precision,y.precision=o=7*f.length*2;d=se(s,t,0,1,1),1!=(i=n.plus(d.times(r))).cmp(e);)n=r,r=i,i=c,c=l.plus(d.times(i)),l=i,i=t,t=s.minus(d.times(i)),s=i;return i=se(e.minus(n),r,0,1,1),l=l.plus(i.times(c)),n=n.plus(i.times(r)),l.s=c.s=h.s,p=se(c,r,o,1).minus(h).abs().cmp(se(l,n,o,1).minus(h).abs())<1?[c,r]:[l,n],y.precision=u,V=!0,p},ne.toHexadecimal=ne.toHex=function(e,t){return ke(this,16,e,t)},ne.toNearest=function(e,t){var n=this,r=n.constructor;if(n=new r(n),null==e){if(!n.d)return n;e=new r(1),t=r.rounding}else{if(e=new r(e),void 0===t?t=r.rounding:ie(t,0,8),!n.d)return e.s?n:e;if(!e.d)return e.s&&(e.s=n.s),e}return e.d[0]?(V=!1,n=se(n,e,0,t,1).times(e),V=!0,le(n)):(e.s=n.s,n=e),n},ne.toNumber=function(){return+this},ne.toOctal=function(e,t){return ke(this,8,e,t)},ne.toPower=ne.pow=function(e){var t,n,r,i,o,a,s=this,l=s.constructor,c=+(e=new l(e));if(!(s.d&&e.d&&s.d[0]&&e.d[0]))return new l(W(+s,c));if((s=new l(s)).eq(1))return s;if(r=l.precision,o=l.rounding,e.eq(1))return le(s,r,o);if((t=z(e.e/7))>=e.d.length-1&&(n=c<0?-c:c)<=9007199254740991)return i=ye(l,s,n,r),e.s<0?new l(1).div(i):le(i,r,o);if((a=s.s)<0){if(t<e.d.length-1)return new l(NaN);if(!(1&e.d[t])&&(a=1),0==s.e&&1==s.d[0]&&1==s.d.length)return s.s=a,s}return(t=0!=(n=W(+s,c))&&isFinite(n)?new l(n+"").e:z(c*(Math.log("0."+re(s.d))/Math.LN10+s.e+1)))>l.maxE+1||t<l.minE-1?new l(t>0?a/0:0):(V=!1,l.rounding=s.s=1,n=Math.min(12,(t+"").length),(i=ge(e.times(ve(s,r+n)),r)).d&&(oe((i=le(i,r+5,1)).d,r,o)&&(t=r+10,+re((i=le(ge(e.times(ve(s,t+n)),t),t+5,1)).d).slice(r+1,r+15)+1==1e14&&(i=le(i,r+1,0)))),i.s=a,V=!0,l.rounding=o,le(i,r,o))},ne.toPrecision=function(e,t){var n,r=this,i=r.constructor;return void 0===e?n=ce(r,r.e<=i.toExpNeg||r.e>=i.toExpPos):(ie(e,1,N),void 0===t?t=i.rounding:ie(t,0,8),n=ce(r=le(new i(r),e,t),e<=r.e||r.e<=i.toExpNeg,e)),r.isNeg()&&!r.isZero()?"-"+n:n},ne.toSignificantDigits=ne.toSD=function(e,t){var n=this.constructor;return void 0===e?(e=n.precision,t=n.rounding):(ie(e,1,N),void 0===t?t=n.rounding:ie(t,0,8)),le(new n(this),e,t)},ne.toString=function(){var e=this,t=e.constructor,n=ce(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()&&!e.isZero()?"-"+n:n},ne.truncated=ne.trunc=function(){return le(new this.constructor(this),this.e+1,1)},ne.valueOf=ne.toJSON=function(){var e=this,t=e.constructor,n=ce(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()?"-"+n:n};var se=function(){function e(e,t,n){var r,i=0,o=e.length;for(e=e.slice();o--;)r=e[o]*t+i,e[o]=r%n|0,i=r/n|0;return i&&e.unshift(i),e}function t(e,t,n,r){var i,o;if(n!=r)o=n>r?1:-1;else for(i=o=0;i<n;i++)if(e[i]!=t[i]){o=e[i]>t[i]?1:-1;break}return o}function n(e,t,n,r){for(var i=0;n--;)e[n]-=i,i=e[n]<t[n]?1:0,e[n]=i*r+e[n]-t[n];for(;!e[0]&&e.length>1;)e.shift()}return function(r,i,o,a,s,l){var c,u,d,p,h,f,y,m,b,g,v,E,w,S,K,I,k,j,x,A,O=r.constructor,T=r.s==i.s?1:-1,R=r.d,D=i.d;if(!(R&&R[0]&&D&&D[0]))return new O(r.s&&i.s&&(R?!D||R[0]!=D[0]:D)?R&&0==R[0]||!D?0*T:T/0:NaN);for(l?(h=1,u=r.e-i.e):(l=X,h=7,u=z(r.e/h)-z(i.e/h)),x=D.length,k=R.length,g=(b=new O(T)).d=[],d=0;D[d]==(R[d]||0);d++);if(D[d]>(R[d]||0)&&u--,null==o?(S=o=O.precision,a=O.rounding):S=s?o+(r.e-i.e)+1:o,S<0)g.push(1),f=!0;else{if(S=S/h+2|0,d=0,1==x){for(p=0,D=D[0],S++;(d<k||p)&&S--;d++)K=p*l+(R[d]||0),g[d]=K/D|0,p=K%D|0;f=p||d<k}else{for((p=l/(D[0]+1)|0)>1&&(D=e(D,p,l),R=e(R,p,l),x=D.length,k=R.length),I=x,E=(v=R.slice(0,x)).length;E<x;)v[E++]=0;(A=D.slice()).unshift(0),j=D[0],D[1]>=l/2&&++j;do{p=0,(c=t(D,v,x,E))<0?(w=v[0],x!=E&&(w=w*l+(v[1]||0)),(p=w/j|0)>1?(p>=l&&(p=l-1),1==(c=t(y=e(D,p,l),v,m=y.length,E=v.length))&&(p--,n(y,x<m?A:D,m,l))):(0==p&&(c=p=1),y=D.slice()),(m=y.length)<E&&y.unshift(0),n(v,y,E,l),-1==c&&((c=t(D,v,x,E=v.length))<1&&(p++,n(v,x<E?A:D,E,l))),E=v.length):0===c&&(p++,v=[0]),g[d++]=p,c&&v[0]?v[E++]=R[I]||0:(v=[R[I]],E=1)}while((I++<k||void 0!==v[0])&&S--);f=void 0!==v[0]}g[0]||g.shift()}if(1==h)b.e=u,C=f;else{for(d=1,p=g[0];p>=10;p/=10)d++;b.e=d+u*h-1,le(b,s?o+b.e+1:o,a,f)}return b}}();function le(e,t,n,r){var i,o,a,s,l,c,u,d,p,h=e.constructor;e:if(null!=t){if(!(d=e.d))return e;for(i=1,s=d[0];s>=10;s/=10)i++;if((o=t-i)<0)o+=7,a=t,l=(u=d[p=0])/W(10,i-a-1)%10|0;else if((p=Math.ceil((o+1)/7))>=(s=d.length)){if(!r)break e;for(;s++<=p;)d.push(0);u=l=0,i=1,a=(o%=7)-7+1}else{for(u=s=d[p],i=1;s>=10;s/=10)i++;l=(a=(o%=7)-7+i)<0?0:u/W(10,i-a-1)%10|0}if(r=r||t<0||void 0!==d[p+1]||(a<0?u:u%W(10,i-a-1)),c=n<4?(l||r)&&(0==n||n==(e.s<0?3:2)):l>5||5==l&&(4==n||r||6==n&&(o>0?a>0?u/W(10,i-a):0:d[p-1])%10&1||n==(e.s<0?8:7)),t<1||!d[0])return d.length=0,c?(t-=e.e+1,d[0]=W(10,(7-t%7)%7),e.e=-t||0):d[0]=e.e=0,e;if(0==o?(d.length=p,s=1,p--):(d.length=p+1,s=W(10,7-o),d[p]=a>0?(u/W(10,i-a)%W(10,a)|0)*s:0),c)for(;;){if(0==p){for(o=1,a=d[0];a>=10;a/=10)o++;for(a=d[0]+=s,s=1;a>=10;a/=10)s++;o!=s&&(e.e++,d[0]==X&&(d[0]=1));break}if(d[p]+=s,d[p]!=X)break;d[p--]=0,s=1}for(o=d.length;0===d[--o];)d.pop()}return V&&(e.e>h.maxE?(e.d=null,e.e=NaN):e.e<h.minE&&(e.e=0,e.d=[0])),e}function ce(e,t,n){if(!e.isFinite())return Ee(e);var r,i=e.e,o=re(e.d),a=o.length;return t?(n&&(r=n-a)>0?o=o.charAt(0)+"."+o.slice(1)+fe(r):a>1&&(o=o.charAt(0)+"."+o.slice(1)),o=o+(e.e<0?"e":"e+")+e.e):i<0?(o="0."+fe(-i-1)+o,n&&(r=n-a)>0&&(o+=fe(r))):i>=a?(o+=fe(i+1-a),n&&(r=n-i-1)>0&&(o=o+"."+fe(r))):((r=i+1)<a&&(o=o.slice(0,r)+"."+o.slice(r)),n&&(r=n-a)>0&&(i+1===a&&(o+="."),o+=fe(r))),o}function ue(e,t){var n=e[0];for(t*=7;n>=10;n/=10)t++;return t}function de(e,t,n){if(t>ee)throw V=!0,n&&(e.precision=n),Error(B);return le(new e(L),t,1,!0)}function pe(e,t,n){if(t>te)throw Error(B);return le(new e(J),t,n,!0)}function he(e){var t=e.length-1,n=7*t+1;if(t=e[t]){for(;t%10==0;t/=10)n--;for(t=e[0];t>=10;t/=10)n++}return n}function fe(e){for(var t="";e--;)t+="0";return t}function ye(e,t,n,r){var i,o=new e(1),a=Math.ceil(r/7+4);for(V=!1;;){if(n%2&&(je((o=o.times(t)).d,a)&&(i=!0)),0===(n=z(n/2))){n=o.d.length-1,i&&0===o.d[n]&&++o.d[n];break}je((t=t.times(t)).d,a)}return V=!0,o}function me(e){return 1&e.d[e.d.length-1]}function be(e,t,n){for(var r,i,o=new e(t[0]),a=0;++a<t.length;){if(!(i=new e(t[a])).s){o=i;break}((r=o.cmp(i))===n||0===r&&o.s===n)&&(o=i)}return o}function ge(e,t){var n,r,i,o,a,s,l,c=0,u=0,d=0,p=e.constructor,h=p.rounding,f=p.precision;if(!e.d||!e.d[0]||e.e>17)return new p(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(null==t?(V=!1,l=f):l=t,s=new p(.03125);e.e>-2;)e=e.times(s),d+=5;for(l+=r=Math.log(W(2,d))/Math.LN10*2+5|0,n=o=a=new p(1),p.precision=l;;){if(o=le(o.times(e),l,1),n=n.times(++u),re((s=a.plus(se(o,n,l,1))).d).slice(0,l)===re(a.d).slice(0,l)){for(i=d;i--;)a=le(a.times(a),l,1);if(null!=t)return p.precision=f,a;if(!(c<3&&oe(a.d,l-r,h,c)))return le(a,p.precision=f,h,V=!0);p.precision=l+=10,n=o=s=new p(1),u=0,c++}a=s}}function ve(e,t){var n,r,i,o,a,s,l,c,u,d,p,h=1,f=e,y=f.d,m=f.constructor,b=m.rounding,g=m.precision;if(f.s<0||!y||!y[0]||!f.e&&1==y[0]&&1==y.length)return new m(y&&!y[0]?-1/0:1!=f.s?NaN:y?0:f);if(null==t?(V=!1,u=g):u=t,m.precision=u+=10,r=(n=re(y)).charAt(0),!(Math.abs(o=f.e)<15e14))return c=de(m,u+2,g).times(o+""),f=ve(new m(r+"."+n.slice(1)),u-10).plus(c),m.precision=g,null==t?le(f,g,b,V=!0):f;for(;r<7&&1!=r||1==r&&n.charAt(1)>3;)r=(n=re((f=f.times(e)).d)).charAt(0),h++;for(o=f.e,r>1?(f=new m("0."+n),o++):f=new m(r+"."+n.slice(1)),d=f,l=a=f=se(f.minus(1),f.plus(1),u,1),p=le(f.times(f),u,1),i=3;;){if(a=le(a.times(p),u,1),re((c=l.plus(se(a,new m(i),u,1))).d).slice(0,u)===re(l.d).slice(0,u)){if(l=l.times(2),0!==o&&(l=l.plus(de(m,u+2,g).times(o+""))),l=se(l,new m(h),u,1),null!=t)return m.precision=g,l;if(!oe(l.d,u-10,b,s))return le(l,m.precision=g,b,V=!0);m.precision=u+=10,c=a=f=se(d.minus(1),d.plus(1),u,1),p=le(f.times(f),u,1),i=s=1}l=c,i+=2}}function Ee(e){return String(e.s*e.s/0)}function we(e,t){var n,r,i;for((n=t.indexOf("."))>-1&&(t=t.replace(".","")),(r=t.search(/e/i))>0?(n<0&&(n=r),n+=+t.slice(r+1),t=t.substring(0,r)):n<0&&(n=t.length),r=0;48===t.charCodeAt(r);r++);for(i=t.length;48===t.charCodeAt(i-1);--i);if(t=t.slice(r,i)){if(i-=r,e.e=n=n-r-1,e.d=[],r=(n+1)%7,n<0&&(r+=7),r<i){for(r&&e.d.push(+t.slice(0,r)),i-=7;r<i;)e.d.push(+t.slice(r,r+=7));r=7-(t=t.slice(r)).length}else r-=i;for(;r--;)t+="0";e.d.push(+t),V&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function Se(e,t,n,r,i){var o,a,s,l,c=e.precision,u=Math.ceil(c/7);for(V=!1,l=n.times(n),s=new e(r);;){if(a=se(s.times(l),new e(t++*t++),c,1),s=i?r.plus(a):r.minus(a),r=se(a.times(l),new e(t++*t++),c,1),void 0!==(a=s.plus(r)).d[u]){for(o=u;a.d[o]===s.d[o]&&o--;);if(-1==o)break}o=s,s=r,r=a,a=o}return V=!0,a.d.length=u+1,a}function Ke(e,t){for(var n=e;--t;)n*=e;return n}function Ie(e,t){var n,r=t.s<0,i=pe(e,e.precision,1),o=i.times(.5);if((t=t.abs()).lte(o))return P=r?4:1,t;if((n=t.divToInt(i)).isZero())P=r?3:2;else{if((t=t.minus(n.times(i))).lte(o))return P=me(n)?r?2:3:r?4:1,t;P=me(n)?r?1:4:r?3:2}return t.minus(i).abs()}function ke(e,t,n,r){var i,o,a,s,l,c,u,d,p,h=e.constructor,f=void 0!==n;if(f?(ie(n,1,N),void 0===r?r=h.rounding:ie(r,0,8)):(n=h.precision,r=h.rounding),e.isFinite()){for(f?(i=2,16==t?n=4*n-3:8==t&&(n=3*n-2)):i=t,(a=(u=ce(e)).indexOf("."))>=0&&(u=u.replace(".",""),(p=new h(1)).e=u.length-a,p.d=ae(ce(p),10,i),p.e=p.d.length),o=l=(d=ae(u,10,i)).length;0==d[--l];)d.pop();if(d[0]){if(a<0?o--:((e=new h(e)).d=d,e.e=o,d=(e=se(e,p,n,r,0,i)).d,o=e.e,c=C),a=d[n],s=i/2,c=c||void 0!==d[n+1],c=r<4?(void 0!==a||c)&&(0===r||r===(e.s<0?3:2)):a>s||a===s&&(4===r||c||6===r&&1&d[n-1]||r===(e.s<0?8:7)),d.length=n,c)for(;++d[--n]>i-1;)d[n]=0,n||(++o,d.unshift(1));for(l=d.length;!d[l-1];--l);for(a=0,u="";a<l;a++)u+=_.charAt(d[a]);if(f){if(l>1)if(16==t||8==t){for(a=16==t?4:3,--l;l%a;l++)u+="0";for(l=(d=ae(u,i,t)).length;!d[l-1];--l);for(a=1,u="1.";a<l;a++)u+=_.charAt(d[a])}else u=u.charAt(0)+"."+u.slice(1);u=u+(o<0?"p":"p+")+o}else if(o<0){for(;++o;)u="0"+u;u="0."+u}else if(++o>l)for(o-=l;o--;)u+="0";else o<l&&(u=u.slice(0,o)+"."+u.slice(o))}else u=f?"0p+0":"0";u=(16==t?"0x":2==t?"0b":8==t?"0o":"")+u}else u=Ee(e);return e.s<0?"-"+u:u}function je(e,t){if(e.length>t)return e.length=t,!0}function xe(e){return new this(e).abs()}function Ae(e){return new this(e).acos()}function Oe(e){return new this(e).acosh()}function Te(e,t){return new this(e).plus(t)}function Re(e){return new this(e).asin()}function De(e){return new this(e).asinh()}function Ce(e){return new this(e).atan()}function Pe(e){return new this(e).atanh()}function Me(e,t){e=new this(e),t=new this(t);var n,r=this.precision,i=this.rounding,o=r+4;return e.s&&t.s?e.d||t.d?!t.d||e.isZero()?(n=t.s<0?pe(this,r,i):new this(0)).s=e.s:!e.d||t.isZero()?(n=pe(this,o,1).times(.5)).s=e.s:t.s<0?(this.precision=o,this.rounding=1,n=this.atan(se(e,t,o,1)),t=pe(this,o,1),this.precision=r,this.rounding=i,n=e.s<0?n.minus(t):n.plus(t)):n=this.atan(se(e,t,o,1)):(n=pe(this,o,1).times(t.s>0?.25:.75)).s=e.s:n=new this(NaN),n}function Ne(e){return new this(e).cbrt()}function _e(e){return le(e=new this(e),e.e+1,2)}function Le(e,t,n){return new this(e).clamp(t,n)}function Je(e){if(!e||"object"!=typeof e)throw Error(G+"Object expected");var t,n,r,i=!0===e.defaults,o=["precision",1,N,"rounding",0,8,"toExpNeg",-M,0,"toExpPos",0,M,"maxE",0,M,"minE",-M,0,"modulo",0,9];for(t=0;t<o.length;t+=3)if(n=o[t],i&&(this[n]=F[n]),void 0!==(r=e[n])){if(!(z(r)===r&&r>=o[t+1]&&r<=o[t+2]))throw Error(q+n+": "+r);this[n]=r}if(n="crypto",i&&(this[n]=F[n]),void 0!==(r=e[n])){if(!0!==r&&!1!==r&&0!==r&&1!==r)throw Error(q+n+": "+r);if(r){if(!(typeof crypto<"u"&&crypto&&(crypto.getRandomValues||crypto.randomBytes)))throw Error(U);this[n]=!0}else this[n]=!1}return this}function Fe(e){return new this(e).cos()}function Ve(e){return new this(e).cosh()}function Ge(e,t){return new this(e).div(t)}function qe(e){return new this(e).exp()}function Be(e){return le(e=new this(e),e.e+1,3)}function Ue(){var e,t,n=new this(0);for(V=!1,e=0;e<arguments.length;)if((t=new this(arguments[e++])).d)n.d&&(n=n.plus(t.times(t)));else{if(t.s)return V=!0,new this(1/0);n=t}return V=!0,n.sqrt()}function Ye(e){return e instanceof ht||e&&e.toStringTag===Y||!1}function ze(e){return new this(e).ln()}function We(e,t){return new this(e).log(t)}function $e(e){return new this(e).log(2)}function Qe(e){return new this(e).log(10)}function He(){return be(this,arguments,-1)}function Ze(){return be(this,arguments,1)}function Xe(e,t){return new this(e).mod(t)}function et(e,t){return new this(e).mul(t)}function tt(e,t){return new this(e).pow(t)}function nt(e){var t,n,r,i,o=0,a=new this(1),s=[];if(void 0===e?e=this.precision:ie(e,1,N),r=Math.ceil(e/7),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(r));o<r;)(i=t[o])>=429e7?t[o]=crypto.getRandomValues(new Uint32Array(1))[0]:s[o++]=i%1e7;else{if(!crypto.randomBytes)throw Error(U);for(t=crypto.randomBytes(r*=4);o<r;)(i=t[o]+(t[o+1]<<8)+(t[o+2]<<16)+((127&t[o+3])<<24))>=214e7?crypto.randomBytes(4).copy(t,o):(s.push(i%1e7),o+=4);o=r/4}else for(;o<r;)s[o++]=1e7*Math.random()|0;for(e%=7,(r=s[--o])&&e&&(i=W(10,7-e),s[o]=(r/i|0)*i);0===s[o];o--)s.pop();if(o<0)n=0,s=[0];else{for(n=-1;0===s[0];n-=7)s.shift();for(r=1,i=s[0];i>=10;i/=10)r++;r<7&&(n-=7-r)}return a.e=n,a.d=s,a}function rt(e){return le(e=new this(e),e.e+1,this.rounding)}function it(e){return(e=new this(e)).d?e.d[0]?e.s:0*e.s:e.s||NaN}function ot(e){return new this(e).sin()}function at(e){return new this(e).sinh()}function st(e){return new this(e).sqrt()}function lt(e,t){return new this(e).sub(t)}function ct(){var e=0,t=arguments,n=new this(t[e]);for(V=!1;n.s&&++e<t.length;)n=n.plus(t[e]);return V=!0,le(n,this.precision,this.rounding)}function ut(e){return new this(e).tan()}function dt(e){return new this(e).tanh()}function pt(e){return le(e=new this(e),e.e+1,1)}ne[Symbol.for("nodejs.util.inspect.custom")]=ne.toString,ne[Symbol.toStringTag]="Decimal";var ht=ne.constructor=function e(t){var n,r,i;function o(e){var t,n,r,i=this;if(!(i instanceof o))return new o(e);if(i.constructor=o,Ye(e))return i.s=e.s,void(V?!e.d||e.e>o.maxE?(i.e=NaN,i.d=null):e.e<o.minE?(i.e=0,i.d=[0]):(i.e=e.e,i.d=e.d.slice()):(i.e=e.e,i.d=e.d?e.d.slice():e.d));if("number"===(r=typeof e)){if(0===e)return i.s=1/e<0?-1:1,i.e=0,void(i.d=[0]);if(e<0?(e=-e,i.s=-1):i.s=1,e===~~e&&e<1e7){for(t=0,n=e;n>=10;n/=10)t++;return void(V?t>o.maxE?(i.e=NaN,i.d=null):t<o.minE?(i.e=0,i.d=[0]):(i.e=t,i.d=[e]):(i.e=t,i.d=[e]))}return 0*e!=0?(e||(i.s=NaN),i.e=NaN,void(i.d=null)):we(i,e.toString())}if("string"===r)return 45===(n=e.charCodeAt(0))?(e=e.slice(1),i.s=-1):(43===n&&(e=e.slice(1)),i.s=1),Z.test(e)?we(i,e):function(e,t){var n,r,i,o,a,s,l,c,u;if(t.indexOf("_")>-1){if(t=t.replace(/(\d)_(?=\d)/g,"$1"),Z.test(t))return we(e,t)}else if("Infinity"===t||"NaN"===t)return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(Q.test(t))n=16,t=t.toLowerCase();else if($.test(t))n=2;else{if(!H.test(t))throw Error(q+t);n=8}for((o=t.search(/p/i))>0?(l=+t.slice(o+1),t=t.substring(2,o)):t=t.slice(2),a=(o=t.indexOf("."))>=0,r=e.constructor,a&&(o=(s=(t=t.replace(".","")).length)-o,i=ye(r,new r(n),o,2*o)),o=u=(c=ae(t,n,X)).length-1;0===c[o];--o)c.pop();return o<0?new r(0*e.s):(e.e=ue(c,u),e.d=c,V=!1,a&&(e=se(e,i,4*s)),l&&(e=e.times(Math.abs(l)<54?W(2,l):ht.pow(2,l))),V=!0,e)}(i,e);if("bigint"===r)return e<0?(e=-e,i.s=-1):i.s=1,we(i,e.toString());throw Error(q+e)}if(o.prototype=ne,o.ROUND_UP=0,o.ROUND_DOWN=1,o.ROUND_CEIL=2,o.ROUND_FLOOR=3,o.ROUND_HALF_UP=4,o.ROUND_HALF_DOWN=5,o.ROUND_HALF_EVEN=6,o.ROUND_HALF_CEIL=7,o.ROUND_HALF_FLOOR=8,o.EUCLID=9,o.config=o.set=Je,o.clone=e,o.isDecimal=Ye,o.abs=xe,o.acos=Ae,o.acosh=Oe,o.add=Te,o.asin=Re,o.asinh=De,o.atan=Ce,o.atanh=Pe,o.atan2=Me,o.cbrt=Ne,o.ceil=_e,o.clamp=Le,o.cos=Fe,o.cosh=Ve,o.div=Ge,o.exp=qe,o.floor=Be,o.hypot=Ue,o.ln=ze,o.log=We,o.log10=Qe,o.log2=$e,o.max=He,o.min=Ze,o.mod=Xe,o.mul=et,o.pow=tt,o.random=nt,o.round=rt,o.sign=it,o.sin=ot,o.sinh=at,o.sqrt=st,o.sub=lt,o.sum=ct,o.tan=ut,o.tanh=dt,o.trunc=pt,void 0===t&&(t={}),t&&!0!==t.defaults)for(i=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],n=0;n<i.length;)t.hasOwnProperty(r=i[n++])||(t[r]=this[r]);return o.config(t),o}(F);L=new ht(L),J=new ht(J);var ft=ht},()=>{},e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=365,e.exports=t},(e,t,n)=>{"use strict";async function r(e,t,n,r){var i;const o=[];let a=0,s=0;for(let i=0;i<e.length;i++){var l,c;const u=e[i],d=(new Date).toISOString();let p,h,f=[];try{p=await u.run(t.input,n),n.toolLogs&&(f=n.toolLogs)}catch(e){h=(null==e?void 0:e.message)||String(e)}const y=(new Date).toISOString(),m={index:i,name:u.name,input:t.input,output:p,error:h,startedAt:d,finishedAt:y,toolCalls:f};o.push(m),r&&r(m),null!==(l=p)&&void 0!==l&&l.tokensUsed&&(a+=p.tokensUsed),null!==(c=p)&&void 0!==c&&c.cost&&(s+=p.cost)}return{success:!o.some(e=>e.error),output:null===(i=o[o.length-1])||void 0===i?void 0:i.output,steps:o,tokensUsed:a,cost:s}}n.r(t),n.d(t,{runAgentWorkflow:()=>r})},(e,t,n)=>{"use strict";n.r(t),n.d(t,{agentRegistry:()=>r});const r=[{key:"echo",name:"Echo Agent",run:async(e,t)=>({success:!0,output:e.input})}]},(e,t,n)=>{"use strict";n.r(t)},(e,t,n)=>{"use strict";const r=n(370);e.exports=d;const i=function(){function e(e){return void 0!==e&&e}try{return"undefined"!=typeof globalThis||Object.defineProperty(Object.prototype,"globalThis",{get:function(){return delete Object.prototype.globalThis,this.globalThis=this},configurable:!0}),globalThis}catch(t){return e(self)||e(window)||e(this)||{}}}().console||{},o={mapHttpRequest:b,mapHttpResponse:b,wrapRequestSerializer:g,wrapResponseSerializer:g,wrapErrorSerializer:g,req:b,res:b,err:y,errWithCause:y};function a(e,t){return"silent"===e?1/0:t.levels.values[e]}const s=Symbol("pino.logFuncs"),l=Symbol("pino.hierarchy"),c={error:"log",fatal:"error",warn:"error",info:"log",debug:"log",trace:"log"};function u(e,t){const n={logger:t,parent:e[l]};t[l]=n}function d(e){(e=e||{}).browser=e.browser||{};const t=e.browser.transmit;if(t&&"function"!=typeof t.send)throw Error("pino: transmit option must have a send function");const n=e.browser.write||i;e.browser.write&&(e.browser.asObject=!0);const r=e.serializers||{},o=function(e,t){if(Array.isArray(e))return e.filter(function(e){return"!stdSerializers.err"!==e});return!0===e&&Object.keys(t)}(e.browser.serialize,r);let l=e.browser.serialize;Array.isArray(e.browser.serialize)&&e.browser.serialize.indexOf("!stdSerializers.err")>-1&&(l=!1);const y=Object.keys(e.customLevels||{}),b=["error","fatal","warn","info","debug","trace"].concat(y);"function"==typeof n&&b.forEach(function(e){n[e]=n}),(!1===e.enabled||e.browser.disabled)&&(e.level="silent");const g=e.level||"info",E=Object.create(n);E.log||(E.log=v),function(e,t,n){const r={};t.forEach(e=>{r[e]=n[e]?n[e]:i[e]||i[c[e]||"log"]||v}),e[s]=r}(E,b,n),u({},E),Object.defineProperty(E,"levelVal",{get:function(){return a(this.level,this)}}),Object.defineProperty(E,"level",{get:function(){return this._level},set:function(e){if("silent"!==e&&!this.levels.values[e])throw Error("unknown level "+e);this._level=e,p(this,w,E,"error"),p(this,w,E,"fatal"),p(this,w,E,"warn"),p(this,w,E,"info"),p(this,w,E,"debug"),p(this,w,E,"trace"),y.forEach(e=>{p(this,w,E,e)})}});const w={transmit:t,serialize:o,asObject:e.browser.asObject,asObjectBindingsOnly:e.browser.asObjectBindingsOnly,formatters:e.browser.formatters,levels:b,timestamp:m(e),messageKey:e.messageKey||"msg",onChild:e.onChild||v};function S(n,i,a){if(!i)throw new Error("missing bindings for child Pino");a=a||{},o&&i.serializers&&(a.serializers=i.serializers);const s=a.serializers;if(o&&s){var l=Object.assign({},r,s),c=!0===e.browser.serialize?Object.keys(l):o;delete i.serializers,h([i],c,l,this._stdErrSerialize)}function d(e){this._childLevel=1+(0|e._childLevel),this.bindings=i,l&&(this.serializers=l,this._serialize=c),t&&(this._logEvent=f([].concat(e._logEvent.bindings,i)))}d.prototype=this;const p=new d(this);return u(this,p),p.child=function(...e){return S.call(this,n,...e)},p.level=a.level||this.level,n.onChild(p),p}return E.levels=function(e){const t=e.customLevels||{},n=Object.assign({},d.levels.values,t),r=Object.assign({},d.levels.labels,function(e){const t={};return Object.keys(e).forEach(function(n){t[e[n]]=n}),t}(t));return{values:n,labels:r}}(e),E.level=g,E.isLevelEnabled=function(e){return!!this.levels.values[e]&&this.levels.values[e]>=this.levels.values[this.level]},E.setMaxListeners=E.getMaxListeners=E.emit=E.addListener=E.on=E.prependListener=E.once=E.prependOnceListener=E.removeListener=E.removeAllListeners=E.listeners=E.listenerCount=E.eventNames=E.write=E.flush=v,E.serializers=r,E._serialize=o,E._stdErrSerialize=l,E.child=function(...e){return S.call(this,w,...e)},t&&(E._logEvent=f()),E}function p(e,t,n,o){if(Object.defineProperty(e,o,{value:a(e.level,n)>a(o,n)?v:n[s][o],writable:!0,enumerable:!0,configurable:!0}),e[o]===v){if(!t.transmit)return;const r=a(t.transmit.level||e.level,n);if(a(o,n)<r)return}e[o]=function(e,t,n,o){return l=e[s][o],function(){const s=t.timestamp(),c=new Array(arguments.length),u=Object.getPrototypeOf&&Object.getPrototypeOf(this)===i?i:this;for(var d=0;d<c.length;d++)c[d]=arguments[d];var p=!1;if(t.serialize&&(h(c,this._serialize,this.serializers,this._stdErrSerialize),p=!0),t.asObject||t.formatters?l.call(u,...function(e,t,n,i,o){const{level:a,log:s=e=>e}=o.formatters||{},l=n.slice();let c=l[0];const u={};let d=1+(0|e._childLevel);if(d<1&&(d=1),i&&(u.time=i),a){const n=a(t,e.levels.values[t]);Object.assign(u,n)}else u.level=e.levels.values[t];if(o.asObjectBindingsOnly){if(null!==c&&"object"==typeof c)for(;d--&&"object"==typeof l[0];)Object.assign(u,l.shift());return[s(u),...l]}if(null!==c&&"object"==typeof c){for(;d--&&"object"==typeof l[0];)Object.assign(u,l.shift());c=l.length?r(l.shift(),l):void 0}else"string"==typeof c&&(c=r(l.shift(),l));return void 0!==c&&(u[o.messageKey]=c),[s(u)]}(this,o,c,s,t)):l.apply(u,c),t.transmit){const r=t.transmit.level||e._level,i=a(r,n),l=a(o,n);if(l<i)return;!function(e,t,n,r=!1){const i=t.send,o=t.ts,a=t.methodLevel,s=t.methodValue,l=t.val,c=e._logEvent.bindings;r||h(n,e._serialize||Object.keys(e.serializers),e.serializers,void 0===e._stdErrSerialize||e._stdErrSerialize),e._logEvent.ts=o,e._logEvent.messages=n.filter(function(e){return-1===c.indexOf(e)}),e._logEvent.level.label=a,e._logEvent.level.value=s,i(a,e._logEvent,l),e._logEvent=f(c)}(this,{ts:s,methodLevel:o,methodValue:l,transmitLevel:r,transmitValue:n.levels.values[t.transmit.level||e._level],send:t.transmit.send,val:a(e._level,n)},c,p)}};var l}(e,t,n,o);const c=function(e){const t=[];e.bindings&&t.push(e.bindings);let n=e[l];for(;n.parent;)n=n.parent,n.logger.bindings&&t.push(n.logger.bindings);return t.reverse()}(e);0!==c.length&&(e[o]=function(e,t){return function(){return t.apply(this,[...e,...arguments])}}(c,e[o]))}function h(e,t,n,r){for(const i in e)if(r&&e[i]instanceof Error)e[i]=d.stdSerializers.err(e[i]);else if("object"==typeof e[i]&&!Array.isArray(e[i])&&t)for(const r in e[i])t.indexOf(r)>-1&&r in n&&(e[i][r]=n[r](e[i][r]))}function f(e){return{ts:0,messages:[],bindings:e||[],level:{label:"",value:0}}}function y(e){const t={type:e.constructor.name,msg:e.message,stack:e.stack};for(const n in e)void 0===t[n]&&(t[n]=e[n]);return t}function m(e){return"function"==typeof e.timestamp?e.timestamp:!1===e.timestamp?E:w}function b(){return{}}function g(e){return e}function v(){}function E(){return!1}function w(){return Date.now()}d.levels={values:{fatal:60,error:50,warn:40,info:30,debug:20,trace:10},labels:{10:"trace",20:"debug",30:"info",40:"warn",50:"error",60:"fatal"}},d.stdSerializers=o,d.stdTimeFunctions=Object.assign({},{nullTime:E,epochTime:w,unixTime:function(){return Math.round(Date.now()/1e3)},isoTime:function(){return new Date(Date.now()).toISOString()}}),e.exports.default=d,e.exports.pino=d},e=>{"use strict";function t(e){try{return JSON.stringify(e)}catch(e){return'"[Circular]"'}}e.exports=function(e,n,r){var i=r&&r.stringify||t;if("object"==typeof e&&null!==e){var o=n.length+1;if(1===o)return e;var a=new Array(o);a[0]=i(e);for(var s=1;s<o;s++)a[s]=i(n[s]);return a.join(" ")}if("string"!=typeof e)return e;var l=n.length;if(0===l)return e;for(var c="",u=0,d=-1,p=e&&e.length||0,h=0;h<p;){if(37===e.charCodeAt(h)&&h+1<p){switch(d=d>-1?d:0,e.charCodeAt(h+1)){case 100:case 102:if(u>=l)break;if(null==n[u])break;d<h&&(c+=e.slice(d,h)),c+=Number(n[u]),d=h+2,h++;break;case 105:if(u>=l)break;if(null==n[u])break;d<h&&(c+=e.slice(d,h)),c+=Math.floor(Number(n[u])),d=h+2,h++;break;case 79:case 111:case 106:if(u>=l)break;if(void 0===n[u])break;d<h&&(c+=e.slice(d,h));var f=typeof n[u];if("string"===f){c+="'"+n[u]+"'",d=h+2,h++;break}if("function"===f){c+=n[u].name||"<anonymous>",d=h+2,h++;break}c+=i(n[u]),d=h+2,h++;break;case 115:if(u>=l)break;d<h&&(c+=e.slice(d,h)),c+=String(n[u]),d=h+2,h++;break;case 37:d<h&&(c+=e.slice(d,h)),c+="%",d=h+2,h++,u--}++u}++h}if(-1===d)return e;d<p&&(c+=e.slice(d));return c}},(e,t,n)=>{const{PrismaClient:r}=n(360),i=new r;e.exports={logCredentialAccess:async function({userId:e,agentId:t,action:n,provider:r,details:o}){await i.auditLog.create({data:{userId:e,agentId:t,action:n,provider:r,details:o}})}}},(e,t,n)=>{const r=n(373),i=process.env.CREDENTIAL_ENCRYPTION_KEY||r.randomBytes(32).toString("hex");e.exports={encrypt:function(e){const t=r.randomBytes(16),n=r.createCipheriv("aes-256-cbc",Buffer.from(i,"hex"),t);let o=n.update(e,"utf8","hex");return o+=n.final("hex"),t.toString("hex")+":"+o},decrypt:function(e){const[t,n]=e.split(":"),o=Buffer.from(t,"hex"),a=r.createDecipheriv("aes-256-cbc",Buffer.from(i,"hex"),o);let s=a.update(n,"hex","utf8");return s+=a.final("utf8"),s}}},()=>{},e=>{e.exports=class{constructor(e,t=10,n=1e3){this.prisma=e,this.buffer=[],this.flushSize=t,this.flushMs=n,this.timer=null}add(e){this.buffer.push(e),this.buffer.length>=this.flushSize?this.flush():this.timer||(this.timer=setTimeout(()=>this.flush(),this.flushMs))}async flush(){if(0===this.buffer.length)return;const e=this.buffer;this.buffer=[],clearTimeout(this.timer),this.timer=null;try{await this.prisma.agentRunStep.createMany({data:e})}catch(t){for(const t of e)try{await this.prisma.agentRunStep.create({data:t})}catch(e){}}}}}],t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var o=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e=n(1);function t(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function r(n){for(var r=1;r<arguments.length;r++){var i=null!=arguments[r]?arguments[r]:{};r%2?t(Object(i),!0).forEach(function(t){e(n,t,i[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(i)):t(Object(i)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(i,e))})}return n}const{Worker:i}=n(5),{agentJobQueue:o,connection:a}=n(359),{PrismaClient:s}=n(360),l=n(364),{getAgentHandler:c}=n(365)(l.join("/","../src/agents")),{runAgentWorkflow:u}=n(366),{agentRegistry:d}=n(367),{AgentRunInput:p}=n(368),h=n(369)({level:process.env.LOG_LEVEL||"info"}),{logCredentialAccess:f}=n(371),{decrypt:y}=n(372),m=new s,b=new(n(374))(m,10,1e3),g=new i("agent-jobs",async e=>{const{runId:t,agentInstanceId:n,input:i,templateName:o,userId:a}=e.data,s=await m.agentRun.findUnique({where:{id:t}});if(s&&"COMPLETED"!==s.status&&"FAILED"!==s.status){await m.agentRun.update({where:{id:t},data:{status:"RUNNING",startedAt:new Date}});try{var l,p;const e=await m.agentInstance.findUnique({where:{id:n},include:{template:!0}});if(!e)throw new Error(`AgentInstance ${n} not found`);const s=(null===(l=e.template.metadata)||void 0===l?void 0:l.moduleName)||o;if(!c(s))throw new Error(`No handler for agent ${s}`);let g=r(r({},e.template.credentials),null===(p=e.configOverride)||void 0===p?void 0:p.credentials);const v=await m.agentCredential.findFirst({where:{userId:a,agentId:n}});v&&(g=r(r({},g),{},{key:y(v.encryptedKey),secret:y(v.encryptedSecret)}),await f({userId:a,agentId:n,action:"CREDENTIAL_DECRYPT",provider:v.provider,details:`runId=${t}`}));const E=d.find(e=>e.key===s);if(!E)throw new Error(`No agent registered for key ${s}`);const w={userId:a,agentInstanceId:n,input:i},S=await u(E.steps||[{name:E.name,run:E.run}],w,{creds:g},async e=>{b.add({runId:t,index:e.index,name:e.name,input:e.input,output:e.output,error:e.error,startedAt:new Date(e.startedAt),finishedAt:new Date(e.finishedAt)})});await b.flush(),await m.agentRun.update({where:{id:t},data:{status:"COMPLETED",tokensUsed:S.tokensUsed,cost:S.cost,finishedAt:new Date}}),h.info({runId:t,agentInstanceId:n,templateName:o,userId:a},"Job completed")}catch(e){throw h.error({runId:t,agentInstanceId:n,templateName:o,userId:a,err:e},"Job failed"),await m.agentRun.update({where:{id:t},data:{status:"FAILED",error:e.message,completedAt:new Date}}),e}}else h.info({runId:t},"Skipping already processed job")},{connection:a,concurrency:5});g.on("completed",e=>h.info({runId:e.data.runId},"Run completed")),g.on("failed",(e,t)=>h.error({runId:e.data.runId,err:t},"Run failed")),h.info("Agent worker started. Waiting for jobs..."),process.on("SIGINT",async()=>{h.info("Shutting down worker..."),await g.close(),await m.$disconnect(),process.exit(0)})})()})();